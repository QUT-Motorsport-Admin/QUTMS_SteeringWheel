
oled_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000073c  00800100  00001bee  00001c82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000027  0080083c  0080083c  000023be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000023be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000241c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  0000245c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024a6  00000000  00000000  00002684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c8c  00000000  00000000  00004b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b71  00000000  00000000  000057b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000940  00000000  00000000  00007328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d2d  00000000  00000000  00007c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000141b  00000000  00000000  00008995  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  00009db0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__vector_10>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 8a 02 	jmp	0x514	; 0x514 <__vector_18>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	18 e0       	ldi	r17, 0x08	; 8
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ee ee       	ldi	r30, 0xEE	; 238
      90:	fb e1       	ldi	r31, 0x1B	; 27
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ac 33       	cpi	r26, 0x3C	; 60
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	28 e0       	ldi	r18, 0x08	; 8
      a0:	ac e3       	ldi	r26, 0x3C	; 60
      a2:	b8 e0       	ldi	r27, 0x08	; 8
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a3 36       	cpi	r26, 0x63	; 99
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
      b2:	0c 94 f5 0d 	jmp	0x1bea	; 0x1bea <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Main Program
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
int main()
{
      ba:	ef 92       	push	r14
      bc:	ff 92       	push	r15
      be:	0f 93       	push	r16
      c0:	1f 93       	push	r17
      c2:	cf 93       	push	r28
      c4:	df 93       	push	r29
      c6:	cd b7       	in	r28, 0x3d	; 61
      c8:	de b7       	in	r29, 0x3e	; 62
      ca:	cb 58       	subi	r28, 0x8B	; 139
      cc:	d1 09       	sbc	r29, r1
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
	
	DDRB = 0b11100011;	//b7 - SCK; b1 - MOSI
      d8:	84 e2       	ldi	r24, 0x24	; 36
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	23 ee       	ldi	r18, 0xE3	; 227
      de:	fc 01       	movw	r30, r24
      e0:	20 83       	st	Z, r18
	DDRD = 0b00001001;	//b3 - SS pin
      e2:	8a e2       	ldi	r24, 0x2A	; 42
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	29 e0       	ldi	r18, 0x09	; 9
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
	SPI_clock_high;
      ec:	85 e2       	ldi	r24, 0x25	; 37
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	25 e2       	ldi	r18, 0x25	; 37
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	f9 01       	movw	r30, r18
      f6:	20 81       	ld	r18, Z
      f8:	20 68       	ori	r18, 0x80	; 128
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18

	ADC_init();		// Initialise ADC
      fe:	0e 94 23 04 	call	0x846	; 0x846 <ADC_init>
	spi_init();
     102:	0e 94 3e 04 	call	0x87c	; 0x87c <spi_init>
	OLED_Init();
     106:	0e 94 a9 0a 	call	0x1552	; 0x1552 <OLED_Init>

	CAN_init();		// Initialise CAN
     10a:	0e 94 18 03 	call	0x630	; 0x630 <CAN_init>
	CAN_RXInit(5,8,0x400000, 0x400000);
     10e:	e1 2c       	mov	r14, r1
     110:	f1 2c       	mov	r15, r1
     112:	00 e4       	ldi	r16, 0x40	; 64
     114:	10 e0       	ldi	r17, 0x00	; 0
     116:	20 e0       	ldi	r18, 0x00	; 0
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	40 e4       	ldi	r20, 0x40	; 64
     11c:	50 e0       	ldi	r21, 0x00	; 0
     11e:	68 e0       	ldi	r22, 0x08	; 8
     120:	85 e0       	ldi	r24, 0x05	; 5
     122:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <CAN_RXInit>

	sei();
     126:	78 94       	sei

	//Fill_RAM(0x00);			// Clear Screen
	unsigned int index33 = 0x17;
     128:	87 e1       	ldi	r24, 0x17	; 23
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	9d 83       	std	Y+5, r25	; 0x05
     12e:	8c 83       	std	Y+4, r24	; 0x04
	unsigned char character66 = 65;
     130:	81 e4       	ldi	r24, 0x41	; 65
     132:	8e 83       	std	Y+6, r24	; 0x06

	unsigned char temp_brightness = 0;
     134:	1f 82       	std	Y+7, r1	; 0x07
	int LeftDialADCScaled;
	uint16_t RightDialADC;
	int RightDialADCScaled;
	uint8_t mob;

	unsigned char Acceleration[]= {'A','C','C','E','L','E','R','A','T','I','O','N'};
     136:	8c e0       	ldi	r24, 0x0C	; 12
     138:	ea ee       	ldi	r30, 0xEA	; 234
     13a:	f7 e0       	ldi	r31, 0x07	; 7
     13c:	de 01       	movw	r26, r28
     13e:	96 96       	adiw	r26, 0x26	; 38
     140:	01 90       	ld	r0, Z+
     142:	0d 92       	st	X+, r0
     144:	8a 95       	dec	r24
     146:	e1 f7       	brne	.-8      	; 0x140 <main+0x86>
	unsigned char SkidPad[]= {'S','K','I','D','P','A','D'};
     148:	87 e0       	ldi	r24, 0x07	; 7
     14a:	e6 ef       	ldi	r30, 0xF6	; 246
     14c:	f7 e0       	ldi	r31, 0x07	; 7
     14e:	de 01       	movw	r26, r28
     150:	d2 96       	adiw	r26, 0x32	; 50
     152:	01 90       	ld	r0, Z+
     154:	0d 92       	st	X+, r0
     156:	8a 95       	dec	r24
     158:	e1 f7       	brne	.-8      	; 0x152 <main+0x98>
	unsigned char AutoCross[]= {'A','U','T','O','C','R','O','S','S'};
     15a:	89 e0       	ldi	r24, 0x09	; 9
     15c:	ed ef       	ldi	r30, 0xFD	; 253
     15e:	f7 e0       	ldi	r31, 0x07	; 7
     160:	de 01       	movw	r26, r28
     162:	d9 96       	adiw	r26, 0x39	; 57
     164:	01 90       	ld	r0, Z+
     166:	0d 92       	st	X+, r0
     168:	8a 95       	dec	r24
     16a:	e1 f7       	brne	.-8      	; 0x164 <main+0xaa>
	unsigned char Endurance[]= {'E','N','D','U','R','A','N,','C','E'};
     16c:	ce 01       	movw	r24, r28
     16e:	8e 5b       	subi	r24, 0xBE	; 190
     170:	9f 4f       	sbci	r25, 0xFF	; 255
     172:	29 e0       	ldi	r18, 0x09	; 9
     174:	e6 e0       	ldi	r30, 0x06	; 6
     176:	f8 e0       	ldi	r31, 0x08	; 8
     178:	dc 01       	movw	r26, r24
     17a:	01 90       	ld	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	2a 95       	dec	r18
     180:	e1 f7       	brne	.-8      	; 0x17a <main+0xc0>
	unsigned char SelectionRight[]= {'>','>','>','>'};
     182:	ce 01       	movw	r24, r28
     184:	85 5b       	subi	r24, 0xB5	; 181
     186:	9f 4f       	sbci	r25, 0xFF	; 255
     188:	2e e3       	ldi	r18, 0x3E	; 62
     18a:	fc 01       	movw	r30, r24
     18c:	20 83       	st	Z, r18
     18e:	ce 01       	movw	r24, r28
     190:	85 5b       	subi	r24, 0xB5	; 181
     192:	9f 4f       	sbci	r25, 0xFF	; 255
     194:	2e e3       	ldi	r18, 0x3E	; 62
     196:	fc 01       	movw	r30, r24
     198:	21 83       	std	Z+1, r18	; 0x01
     19a:	ce 01       	movw	r24, r28
     19c:	85 5b       	subi	r24, 0xB5	; 181
     19e:	9f 4f       	sbci	r25, 0xFF	; 255
     1a0:	2e e3       	ldi	r18, 0x3E	; 62
     1a2:	fc 01       	movw	r30, r24
     1a4:	22 83       	std	Z+2, r18	; 0x02
     1a6:	ce 01       	movw	r24, r28
     1a8:	85 5b       	subi	r24, 0xB5	; 181
     1aa:	9f 4f       	sbci	r25, 0xFF	; 255
     1ac:	2e e3       	ldi	r18, 0x3E	; 62
     1ae:	fc 01       	movw	r30, r24
     1b0:	23 83       	std	Z+3, r18	; 0x03
	unsigned char SelectionLeft[]= {'<','<','<','<'};
     1b2:	ce 01       	movw	r24, r28
     1b4:	81 5b       	subi	r24, 0xB1	; 177
     1b6:	9f 4f       	sbci	r25, 0xFF	; 255
     1b8:	2c e3       	ldi	r18, 0x3C	; 60
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18
     1be:	ce 01       	movw	r24, r28
     1c0:	81 5b       	subi	r24, 0xB1	; 177
     1c2:	9f 4f       	sbci	r25, 0xFF	; 255
     1c4:	2c e3       	ldi	r18, 0x3C	; 60
     1c6:	fc 01       	movw	r30, r24
     1c8:	21 83       	std	Z+1, r18	; 0x01
     1ca:	ce 01       	movw	r24, r28
     1cc:	81 5b       	subi	r24, 0xB1	; 177
     1ce:	9f 4f       	sbci	r25, 0xFF	; 255
     1d0:	2c e3       	ldi	r18, 0x3C	; 60
     1d2:	fc 01       	movw	r30, r24
     1d4:	22 83       	std	Z+2, r18	; 0x02
     1d6:	ce 01       	movw	r24, r28
     1d8:	81 5b       	subi	r24, 0xB1	; 177
     1da:	9f 4f       	sbci	r25, 0xFF	; 255
     1dc:	2c e3       	ldi	r18, 0x3C	; 60
     1de:	fc 01       	movw	r30, r24
     1e0:	23 83       	std	Z+3, r18	; 0x03
	unsigned char Voltage[]= {'V','O','L','T','A','G','E',' ',':'};
     1e2:	ce 01       	movw	r24, r28
     1e4:	8d 5a       	subi	r24, 0xAD	; 173
     1e6:	9f 4f       	sbci	r25, 0xFF	; 255
     1e8:	29 e0       	ldi	r18, 0x09	; 9
     1ea:	ef e0       	ldi	r30, 0x0F	; 15
     1ec:	f8 e0       	ldi	r31, 0x08	; 8
     1ee:	dc 01       	movw	r26, r24
     1f0:	01 90       	ld	r0, Z+
     1f2:	0d 92       	st	X+, r0
     1f4:	2a 95       	dec	r18
     1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x136>
	unsigned char RPM[] = {'R','P','M',' ',':'};
     1f8:	ce 01       	movw	r24, r28
     1fa:	84 5a       	subi	r24, 0xA4	; 164
     1fc:	9f 4f       	sbci	r25, 0xFF	; 255
     1fe:	25 e0       	ldi	r18, 0x05	; 5
     200:	e8 e1       	ldi	r30, 0x18	; 24
     202:	f8 e0       	ldi	r31, 0x08	; 8
     204:	dc 01       	movw	r26, r24
     206:	01 90       	ld	r0, Z+
     208:	0d 92       	st	X+, r0
     20a:	2a 95       	dec	r18
     20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x14c>
	unsigned char GearboxTemp[] = {'G','E','A','R','B','O','X',' ','T','E','M','P',' ',':'};
     20e:	ce 01       	movw	r24, r28
     210:	8f 59       	subi	r24, 0x9F	; 159
     212:	9f 4f       	sbci	r25, 0xFF	; 255
     214:	2e e0       	ldi	r18, 0x0E	; 14
     216:	ed e1       	ldi	r30, 0x1D	; 29
     218:	f8 e0       	ldi	r31, 0x08	; 8
     21a:	dc 01       	movw	r26, r24
     21c:	01 90       	ld	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	2a 95       	dec	r18
     222:	e1 f7       	brne	.-8      	; 0x21c <main+0x162>
	unsigned char Throttle[]= {'T','H','R','O','T','T','L','E',' ','%',' ',':'};
     224:	ce 01       	movw	r24, r28
     226:	81 59       	subi	r24, 0x91	; 145
     228:	9f 4f       	sbci	r25, 0xFF	; 255
     22a:	2c e0       	ldi	r18, 0x0C	; 12
     22c:	eb e2       	ldi	r30, 0x2B	; 43
     22e:	f8 e0       	ldi	r31, 0x08	; 8
     230:	dc 01       	movw	r26, r24
     232:	01 90       	ld	r0, Z+
     234:	0d 92       	st	X+, r0
     236:	2a 95       	dec	r18
     238:	e1 f7       	brne	.-8      	; 0x232 <main+0x178>
	unsigned char BlankNumber[] = {' ',' ',' ',' ',' '};
     23a:	ce 01       	movw	r24, r28
     23c:	85 58       	subi	r24, 0x85	; 133
     23e:	9f 4f       	sbci	r25, 0xFF	; 255
     240:	25 e0       	ldi	r18, 0x05	; 5
     242:	e7 e3       	ldi	r30, 0x37	; 55
     244:	f8 e0       	ldi	r31, 0x08	; 8
     246:	dc 01       	movw	r26, r24
     248:	01 90       	ld	r0, Z+
     24a:	0d 92       	st	X+, r0
     24c:	2a 95       	dec	r18
     24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x18e>
	unsigned char LeftArrow[]= {'<'};
     250:	ce 01       	movw	r24, r28
     252:	80 58       	subi	r24, 0x80	; 128
     254:	9f 4f       	sbci	r25, 0xFF	; 255
     256:	2c e3       	ldi	r18, 0x3C	; 60
     258:	fc 01       	movw	r30, r24
     25a:	20 83       	st	Z, r18
	unsigned char RightArrow[]= {'>'};
     25c:	ce 01       	movw	r24, r28
     25e:	8f 57       	subi	r24, 0x7F	; 127
     260:	9f 4f       	sbci	r25, 0xFF	; 255
     262:	2e e3       	ldi	r18, 0x3E	; 62
     264:	fc 01       	movw	r30, r24
     266:	20 83       	st	Z, r18
	unsigned char TempBuffer[10];
	unsigned int RPMMaxFlag = 0;
     268:	19 86       	std	Y+9, r1	; 0x09
     26a:	18 86       	std	Y+8, r1	; 0x08
	unsigned int ThrottleMaxFlag = 0;
     26c:	1b 86       	std	Y+11, r1	; 0x0b
     26e:	1a 86       	std	Y+10, r1	; 0x0a
	unsigned int ThrottleGreaterThan10 = 0;
     270:	1d 86       	std	Y+13, r1	; 0x0d
     272:	1c 86       	std	Y+12, r1	; 0x0c
	unsigned int RPMGreaterThan100 = 0;
     274:	1f 86       	std	Y+15, r1	; 0x0f
     276:	1e 86       	std	Y+14, r1	; 0x0e
	unsigned int RPMGreaterThan1000 = 0;
     278:	19 8a       	std	Y+17, r1	; 0x11
     27a:	18 8a       	std	Y+16, r1	; 0x10
	unsigned int GearboxTempCount = 0;
     27c:	1b 8a       	std	Y+19, r1	; 0x13
     27e:	1a 8a       	std	Y+18, r1	; 0x12
	unsigned int GearboxTempMaxFlag = 0;
     280:	1d 8a       	std	Y+21, r1	; 0x15
     282:	1c 8a       	std	Y+20, r1	; 0x14
	unsigned int RPMCounter = 0;
     284:	1f 8a       	std	Y+23, r1	; 0x17
     286:	1e 8a       	std	Y+22, r1	; 0x16
	unsigned int BootFlag = 0;
     288:	19 8e       	std	Y+25, r1	; 0x19
     28a:	18 8e       	std	Y+24, r1	; 0x18
	int ScreenFlag = 0;
     28c:	1b 8e       	std	Y+27, r1	; 0x1b
     28e:	1a 8e       	std	Y+26, r1	; 0x1a
	int ADC_Change = 1;
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	9d 8f       	std	Y+29, r25	; 0x1d
     296:	8c 8f       	std	Y+28, r24	; 0x1c
	int ADC_Previous = 0;
     298:	1f 8e       	std	Y+31, r1	; 0x1f
     29a:	1e 8e       	std	Y+30, r1	; 0x1e
	int digitLength = 0;
     29c:	19 a2       	std	Y+33, r1	; 0x21
     29e:	18 a2       	std	Y+32, r1	; 0x20
	uint16_t LeftDialADCOld = 0;
     2a0:	1b a2       	std	Y+35, r1	; 0x23
     2a2:	1a a2       	std	Y+34, r1	; 0x22
	uint16_t RightDialADCOld = 0;
     2a4:	1d a2       	std	Y+37, r1	; 0x25
     2a6:	1c a2       	std	Y+36, r1	; 0x24
		//radPoint = readDials();
		//CAN_TXMOB(0, 1, &radPoint, 0x400001,0);
		*/
		//Display_Picture(Motorsport);

		sprintf(Charge, "%d", ThrottlePercentageData);
     2a8:	80 91 3c 08 	lds	r24, 0x083C	; 0x80083c <__data_end>
     2ac:	90 91 3d 08 	lds	r25, 0x083D	; 0x80083d <__data_end+0x1>
     2b0:	29 2f       	mov	r18, r25
     2b2:	2f 93       	push	r18
     2b4:	8f 93       	push	r24
     2b6:	87 ee       	ldi	r24, 0xE7	; 231
     2b8:	97 e0       	ldi	r25, 0x07	; 7
     2ba:	89 2f       	mov	r24, r25
     2bc:	8f 93       	push	r24
     2be:	87 ee       	ldi	r24, 0xE7	; 231
     2c0:	97 e0       	ldi	r25, 0x07	; 7
     2c2:	8f 93       	push	r24
     2c4:	8f e4       	ldi	r24, 0x4F	; 79
     2c6:	98 e0       	ldi	r25, 0x08	; 8
     2c8:	89 2f       	mov	r24, r25
     2ca:	8f 93       	push	r24
     2cc:	8f e4       	ldi	r24, 0x4F	; 79
     2ce:	98 e0       	ldi	r25, 0x08	; 8
     2d0:	8f 93       	push	r24
     2d2:	0e 94 0b 0b 	call	0x1616	; 0x1616 <sprintf>
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
		sprintf(breakDataArray, "%d", BreakData);
     2e2:	80 91 3e 08 	lds	r24, 0x083E	; 0x80083e <BreakData>
     2e6:	90 91 3f 08 	lds	r25, 0x083F	; 0x80083f <BreakData+0x1>
     2ea:	29 2f       	mov	r18, r25
     2ec:	2f 93       	push	r18
     2ee:	8f 93       	push	r24
     2f0:	87 ee       	ldi	r24, 0xE7	; 231
     2f2:	97 e0       	ldi	r25, 0x07	; 7
     2f4:	89 2f       	mov	r24, r25
     2f6:	8f 93       	push	r24
     2f8:	87 ee       	ldi	r24, 0xE7	; 231
     2fa:	97 e0       	ldi	r25, 0x07	; 7
     2fc:	8f 93       	push	r24
     2fe:	89 e5       	ldi	r24, 0x59	; 89
     300:	98 e0       	ldi	r25, 0x08	; 8
     302:	89 2f       	mov	r24, r25
     304:	8f 93       	push	r24
     306:	89 e5       	ldi	r24, 0x59	; 89
     308:	98 e0       	ldi	r25, 0x08	; 8
     30a:	8f 93       	push	r24
     30c:	0e 94 0b 0b 	call	0x1616	; 0x1616 <sprintf>
     310:	0f 90       	pop	r0
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	0f 90       	pop	r0
		sprintf(PotDataArray, "%d", PotData);
     31c:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <PotData>
     320:	90 91 41 08 	lds	r25, 0x0841	; 0x800841 <PotData+0x1>
     324:	a0 91 42 08 	lds	r26, 0x0842	; 0x800842 <PotData+0x2>
     328:	b0 91 43 08 	lds	r27, 0x0843	; 0x800843 <PotData+0x3>
     32c:	2b 2f       	mov	r18, r27
     32e:	2f 93       	push	r18
     330:	2a 2f       	mov	r18, r26
     332:	2f 93       	push	r18
     334:	29 2f       	mov	r18, r25
     336:	2f 93       	push	r18
     338:	8f 93       	push	r24
     33a:	87 ee       	ldi	r24, 0xE7	; 231
     33c:	97 e0       	ldi	r25, 0x07	; 7
     33e:	89 2f       	mov	r24, r25
     340:	8f 93       	push	r24
     342:	87 ee       	ldi	r24, 0xE7	; 231
     344:	97 e0       	ldi	r25, 0x07	; 7
     346:	8f 93       	push	r24
     348:	84 e4       	ldi	r24, 0x44	; 68
     34a:	98 e0       	ldi	r25, 0x08	; 8
     34c:	89 2f       	mov	r24, r25
     34e:	8f 93       	push	r24
     350:	84 e4       	ldi	r24, 0x44	; 68
     352:	98 e0       	ldi	r25, 0x08	; 8
     354:	8f 93       	push	r24
     356:	0e 94 0b 0b 	call	0x1616	; 0x1616 <sprintf>
     35a:	8d b7       	in	r24, 0x3d	; 61
     35c:	9e b7       	in	r25, 0x3e	; 62
     35e:	08 96       	adiw	r24, 0x08	; 8
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	de bf       	out	0x3e, r29	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	cd bf       	out	0x3d, r28	; 61

		//	\0
		
		for(uint8_t i = 0; i < sizeof Charge; i++){
     36a:	19 82       	std	Y+1, r1	; 0x01
     36c:	27 c0       	rjmp	.+78     	; 0x3bc <main+0x302>
			if(Charge[i] == '\0'){
     36e:	89 81       	ldd	r24, Y+1	; 0x01
     370:	88 2f       	mov	r24, r24
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	81 5b       	subi	r24, 0xB1	; 177
     376:	97 4f       	sbci	r25, 0xF7	; 247
     378:	fc 01       	movw	r30, r24
     37a:	80 81       	ld	r24, Z
     37c:	88 23       	and	r24, r24
     37e:	d9 f4       	brne	.+54     	; 0x3b6 <main+0x2fc>
				Charge[i] = '`';
     380:	89 81       	ldd	r24, Y+1	; 0x01
     382:	88 2f       	mov	r24, r24
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	81 5b       	subi	r24, 0xB1	; 177
     388:	97 4f       	sbci	r25, 0xF7	; 247
     38a:	20 e6       	ldi	r18, 0x60	; 96
     38c:	fc 01       	movw	r30, r24
     38e:	20 83       	st	Z, r18
				Charge[i+1] = '`';
     390:	89 81       	ldd	r24, Y+1	; 0x01
     392:	88 2f       	mov	r24, r24
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	01 96       	adiw	r24, 0x01	; 1
     398:	81 5b       	subi	r24, 0xB1	; 177
     39a:	97 4f       	sbci	r25, 0xF7	; 247
     39c:	20 e6       	ldi	r18, 0x60	; 96
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18
				Charge[i+2] = '\0';//0x2302;
     3a2:	89 81       	ldd	r24, Y+1	; 0x01
     3a4:	88 2f       	mov	r24, r24
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	02 96       	adiw	r24, 0x02	; 2
     3aa:	81 5b       	subi	r24, 0xB1	; 177
     3ac:	97 4f       	sbci	r25, 0xF7	; 247
     3ae:	fc 01       	movw	r30, r24
     3b0:	10 82       	st	Z, r1
				i = sizeof Charge;
     3b2:	8a e0       	ldi	r24, 0x0A	; 10
     3b4:	89 83       	std	Y+1, r24	; 0x01
		sprintf(breakDataArray, "%d", BreakData);
		sprintf(PotDataArray, "%d", PotData);

		//	\0
		
		for(uint8_t i = 0; i < sizeof Charge; i++){
     3b6:	89 81       	ldd	r24, Y+1	; 0x01
     3b8:	8f 5f       	subi	r24, 0xFF	; 255
     3ba:	89 83       	std	Y+1, r24	; 0x01
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	8a 30       	cpi	r24, 0x0A	; 10
     3c0:	b0 f2       	brcs	.-84     	; 0x36e <main+0x2b4>
				Charge[i+2] = '\0';//0x2302;
				i = sizeof Charge;
			}
		}
		
		for(uint8_t i = 0; i < sizeof breakDataArray; i++){
     3c2:	1a 82       	std	Y+2, r1	; 0x02
     3c4:	27 c0       	rjmp	.+78     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
			if(breakDataArray[i] == '\0'){
     3c6:	8a 81       	ldd	r24, Y+2	; 0x02
     3c8:	88 2f       	mov	r24, r24
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	87 5a       	subi	r24, 0xA7	; 167
     3ce:	97 4f       	sbci	r25, 0xF7	; 247
     3d0:	fc 01       	movw	r30, r24
     3d2:	80 81       	ld	r24, Z
     3d4:	88 23       	and	r24, r24
     3d6:	d9 f4       	brne	.+54     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
				breakDataArray[i] = '`';
     3d8:	8a 81       	ldd	r24, Y+2	; 0x02
     3da:	88 2f       	mov	r24, r24
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	87 5a       	subi	r24, 0xA7	; 167
     3e0:	97 4f       	sbci	r25, 0xF7	; 247
     3e2:	20 e6       	ldi	r18, 0x60	; 96
     3e4:	fc 01       	movw	r30, r24
     3e6:	20 83       	st	Z, r18
				breakDataArray[i+1] = '`';
     3e8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ea:	88 2f       	mov	r24, r24
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	01 96       	adiw	r24, 0x01	; 1
     3f0:	87 5a       	subi	r24, 0xA7	; 167
     3f2:	97 4f       	sbci	r25, 0xF7	; 247
     3f4:	20 e6       	ldi	r18, 0x60	; 96
     3f6:	fc 01       	movw	r30, r24
     3f8:	20 83       	st	Z, r18
				breakDataArray[i+2] = '\0';//0x2302;
     3fa:	8a 81       	ldd	r24, Y+2	; 0x02
     3fc:	88 2f       	mov	r24, r24
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	02 96       	adiw	r24, 0x02	; 2
     402:	87 5a       	subi	r24, 0xA7	; 167
     404:	97 4f       	sbci	r25, 0xF7	; 247
     406:	fc 01       	movw	r30, r24
     408:	10 82       	st	Z, r1
				i = sizeof breakDataArray;
     40a:	8a e0       	ldi	r24, 0x0A	; 10
     40c:	8a 83       	std	Y+2, r24	; 0x02
				Charge[i+2] = '\0';//0x2302;
				i = sizeof Charge;
			}
		}
		
		for(uint8_t i = 0; i < sizeof breakDataArray; i++){
     40e:	8a 81       	ldd	r24, Y+2	; 0x02
     410:	8f 5f       	subi	r24, 0xFF	; 255
     412:	8a 83       	std	Y+2, r24	; 0x02
     414:	8a 81       	ldd	r24, Y+2	; 0x02
     416:	8a 30       	cpi	r24, 0x0A	; 10
     418:	b0 f2       	brcs	.-84     	; 0x3c6 <main+0x30c>
				breakDataArray[i+2] = '\0';//0x2302;
				i = sizeof breakDataArray;
			}
		}

		for(uint8_t i = 0; i < sizeof PotDataArray; i++){
     41a:	1b 82       	std	Y+3, r1	; 0x03
     41c:	27 c0       	rjmp	.+78     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
			if(PotDataArray[i] == '\0'){
     41e:	8b 81       	ldd	r24, Y+3	; 0x03
     420:	88 2f       	mov	r24, r24
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	8c 5b       	subi	r24, 0xBC	; 188
     426:	97 4f       	sbci	r25, 0xF7	; 247
     428:	fc 01       	movw	r30, r24
     42a:	80 81       	ld	r24, Z
     42c:	88 23       	and	r24, r24
     42e:	d9 f4       	brne	.+54     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
				PotDataArray[i] = '`';
     430:	8b 81       	ldd	r24, Y+3	; 0x03
     432:	88 2f       	mov	r24, r24
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	8c 5b       	subi	r24, 0xBC	; 188
     438:	97 4f       	sbci	r25, 0xF7	; 247
     43a:	20 e6       	ldi	r18, 0x60	; 96
     43c:	fc 01       	movw	r30, r24
     43e:	20 83       	st	Z, r18
				PotDataArray[i+1] = '`';
     440:	8b 81       	ldd	r24, Y+3	; 0x03
     442:	88 2f       	mov	r24, r24
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	01 96       	adiw	r24, 0x01	; 1
     448:	8c 5b       	subi	r24, 0xBC	; 188
     44a:	97 4f       	sbci	r25, 0xF7	; 247
     44c:	20 e6       	ldi	r18, 0x60	; 96
     44e:	fc 01       	movw	r30, r24
     450:	20 83       	st	Z, r18
				PotDataArray[i+2] = '\0';//0x2302;
     452:	8b 81       	ldd	r24, Y+3	; 0x03
     454:	88 2f       	mov	r24, r24
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	02 96       	adiw	r24, 0x02	; 2
     45a:	8c 5b       	subi	r24, 0xBC	; 188
     45c:	97 4f       	sbci	r25, 0xF7	; 247
     45e:	fc 01       	movw	r30, r24
     460:	10 82       	st	Z, r1
				i = sizeof PotDataArray;
     462:	8a e0       	ldi	r24, 0x0A	; 10
     464:	8b 83       	std	Y+3, r24	; 0x03
				breakDataArray[i+2] = '\0';//0x2302;
				i = sizeof breakDataArray;
			}
		}

		for(uint8_t i = 0; i < sizeof PotDataArray; i++){
     466:	8b 81       	ldd	r24, Y+3	; 0x03
     468:	8f 5f       	subi	r24, 0xFF	; 255
     46a:	8b 83       	std	Y+3, r24	; 0x03
     46c:	8b 81       	ldd	r24, Y+3	; 0x03
     46e:	8a 30       	cpi	r24, 0x0A	; 10
     470:	b0 f2       	brcs	.-84     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
				i = sizeof PotDataArray;
			}
		}
		

		Delay(100);
     472:	84 e6       	ldi	r24, 0x64	; 100
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 8e 04 	call	0x91c	; 0x91c <Delay>

		//Fill_RAM(0x00);			// Clear Screen

		//Delay(10);
		
		Show_String(1,&MTemp1,0x05,0x05);
     47a:	25 e0       	ldi	r18, 0x05	; 5
     47c:	45 e0       	ldi	r20, 0x05	; 5
     47e:	60 e0       	ldi	r22, 0x00	; 0
     480:	71 e0       	ldi	r23, 0x01	; 1
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>
		Show_String(1,&Charge,0x27,0x05);
     488:	25 e0       	ldi	r18, 0x05	; 5
     48a:	47 e2       	ldi	r20, 0x27	; 39
     48c:	6f e4       	ldi	r22, 0x4F	; 79
     48e:	78 e0       	ldi	r23, 0x08	; 8
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>

		Show_String(1,&MTemp2,0x05,0x15);
     496:	25 e1       	ldi	r18, 0x15	; 21
     498:	45 e0       	ldi	r20, 0x05	; 5
     49a:	6a e0       	ldi	r22, 0x0A	; 10
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>
		Show_String(1,&breakDataArray,0x27,0x15);
     4a4:	25 e1       	ldi	r18, 0x15	; 21
     4a6:	47 e2       	ldi	r20, 0x27	; 39
     4a8:	69 e5       	ldi	r22, 0x59	; 89
     4aa:	78 e0       	ldi	r23, 0x08	; 8
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>

		Show_String(1,&MTemp3,0x05,0x25);
     4b2:	25 e2       	ldi	r18, 0x25	; 37
     4b4:	45 e0       	ldi	r20, 0x05	; 5
     4b6:	61 e1       	ldi	r22, 0x11	; 17
     4b8:	71 e0       	ldi	r23, 0x01	; 1
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>
		Show_String(1,&PotDataArray,0x27,0x25);
     4c0:	25 e2       	ldi	r18, 0x25	; 37
     4c2:	47 e2       	ldi	r20, 0x27	; 39
     4c4:	64 e4       	ldi	r22, 0x44	; 68
     4c6:	78 e0       	ldi	r23, 0x08	; 8
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	0e 94 31 0a 	call	0x1462	; 0x1462 <Show_String>
	}
     4ce:	ec ce       	rjmp	.-552    	; 0x2a8 <main+0x1ee>

000004d0 <__vector_10>:
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Interrupts
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

ISR(INT3_vect)
{
     4d0:	1f 92       	push	r1
     4d2:	0f 92       	push	r0
     4d4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4d8:	0f 92       	push	r0
     4da:	11 24       	eor	r1, r1
     4dc:	2f 93       	push	r18
     4de:	8f 93       	push	r24
     4e0:	9f 93       	push	r25
     4e2:	ef 93       	push	r30
     4e4:	ff 93       	push	r31
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
	SMCR = (0<<SM2)|(0<<SM1)|(1<<SM0)|(0<<SE);		//disable the mode, and disable the enable bit.
     4ee:	83 e5       	ldi	r24, 0x53	; 83
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	22 e0       	ldi	r18, 0x02	; 2
     4f4:	fc 01       	movw	r30, r24
     4f6:	20 83       	st	Z, r18
}
     4f8:	00 00       	nop
     4fa:	df 91       	pop	r29
     4fc:	cf 91       	pop	r28
     4fe:	ff 91       	pop	r31
     500:	ef 91       	pop	r30
     502:	9f 91       	pop	r25
     504:	8f 91       	pop	r24
     506:	2f 91       	pop	r18
     508:	0f 90       	pop	r0
     50a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     50e:	0f 90       	pop	r0
     510:	1f 90       	pop	r1
     512:	18 95       	reti

00000514 <__vector_18>:

ISR(CAN_INT_vect)
{
     514:	1f 92       	push	r1
     516:	0f 92       	push	r0
     518:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     51c:	0f 92       	push	r0
     51e:	11 24       	eor	r1, r1
     520:	ef 92       	push	r14
     522:	ff 92       	push	r15
     524:	0f 93       	push	r16
     526:	1f 93       	push	r17
     528:	2f 93       	push	r18
     52a:	3f 93       	push	r19
     52c:	4f 93       	push	r20
     52e:	5f 93       	push	r21
     530:	6f 93       	push	r22
     532:	7f 93       	push	r23
     534:	8f 93       	push	r24
     536:	9f 93       	push	r25
     538:	af 93       	push	r26
     53a:	bf 93       	push	r27
     53c:	ef 93       	push	r30
     53e:	ff 93       	push	r31
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	cd b7       	in	r28, 0x3d	; 61
     546:	de b7       	in	r29, 0x3e	; 62
	//uint8_t authority;
	//int8_t mob;
	if((CANSIT2 & (1 << SIT5)))	//we received a CAN message on mob 5, which is set up to receive exclusively from the AMU.
     548:	80 ee       	ldi	r24, 0xE0	; 224
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	88 2f       	mov	r24, r24
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	80 72       	andi	r24, 0x20	; 32
     556:	99 27       	eor	r25, r25
     558:	89 2b       	or	r24, r25
     55a:	a9 f1       	breq	.+106    	; 0x5c6 <__vector_18+0xb2>
	{
		//memset(PotDataArray, 0, sizeof PotDataArray);
		
		CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     55c:	8d ee       	ldi	r24, 0xED	; 237
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	20 e5       	ldi	r18, 0x50	; 80
     562:	fc 01       	movw	r30, r24
     564:	20 83       	st	Z, r18
		ThrottlePercentageData = CANMSG;
     566:	8a ef       	ldi	r24, 0xFA	; 250
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	fc 01       	movw	r30, r24
     56c:	80 81       	ld	r24, Z
     56e:	88 2f       	mov	r24, r24
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <__data_end+0x1>
     576:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <__data_end>
		//MTemp2[3] = ThrottlePercentageData;
		
		//MTemp2[3] = ThrottlePercentageData;
		//CANMSG = 100000000;
		//RPMData = CANMSG << 1;
		BreakData = CANMSG;// << 1;
     57a:	8a ef       	ldi	r24, 0xFA	; 250
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	fc 01       	movw	r30, r24
     580:	80 81       	ld	r24, Z
     582:	88 2f       	mov	r24, r24
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	90 93 3f 08 	sts	0x083F, r25	; 0x80083f <BreakData+0x1>
     58a:	80 93 3e 08 	sts	0x083E, r24	; 0x80083e <BreakData>
		//BreakData = CANMSG;
		
		PotData = CANMSG;
     58e:	8a ef       	ldi	r24, 0xFA	; 250
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	fc 01       	movw	r30, r24
     594:	80 81       	ld	r24, Z
     596:	88 2f       	mov	r24, r24
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	a0 e0       	ldi	r26, 0x00	; 0
     59c:	b0 e0       	ldi	r27, 0x00	; 0
     59e:	80 93 40 08 	sts	0x0840, r24	; 0x800840 <PotData>
     5a2:	90 93 41 08 	sts	0x0841, r25	; 0x800841 <PotData+0x1>
     5a6:	a0 93 42 08 	sts	0x0842, r26	; 0x800842 <PotData+0x2>
     5aa:	b0 93 43 08 	sts	0x0843, r27	; 0x800843 <PotData+0x3>
		
		// JOhn said NO
		//radPoint = readDials();
		//CAN_TXMOB(0, 1, &radPoint, 0x400001,0);

		CAN_RXInit(5,8,0x400000, 0x400000);
     5ae:	e1 2c       	mov	r14, r1
     5b0:	f1 2c       	mov	r15, r1
     5b2:	00 e4       	ldi	r16, 0x40	; 64
     5b4:	10 e0       	ldi	r17, 0x00	; 0
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	40 e4       	ldi	r20, 0x40	; 64
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	68 e0       	ldi	r22, 0x08	; 8
     5c0:	85 e0       	ldi	r24, 0x05	; 5
     5c2:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <CAN_RXInit>
	}
	
	CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     5c6:	8d ee       	ldi	r24, 0xED	; 237
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	20 e5       	ldi	r18, 0x50	; 80
     5cc:	fc 01       	movw	r30, r24
     5ce:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     5d0:	8e ee       	ldi	r24, 0xEE	; 238
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	2e ee       	ldi	r18, 0xEE	; 238
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	f9 01       	movw	r30, r18
     5da:	20 81       	ld	r18, Z
     5dc:	2f 7d       	andi	r18, 0xDF	; 223
     5de:	fc 01       	movw	r30, r24
     5e0:	20 83       	st	Z, r18
	CANPAGE = (4 << 4);
     5e2:	8d ee       	ldi	r24, 0xED	; 237
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	20 e4       	ldi	r18, 0x40	; 64
     5e8:	fc 01       	movw	r30, r24
     5ea:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     5ec:	8e ee       	ldi	r24, 0xEE	; 238
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	2e ee       	ldi	r18, 0xEE	; 238
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	f9 01       	movw	r30, r18
     5f6:	20 81       	ld	r18, Z
     5f8:	2f 7d       	andi	r18, 0xDF	; 223
     5fa:	fc 01       	movw	r30, r24
     5fc:	20 83       	st	Z, r18
     5fe:	00 00       	nop
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	ff 91       	pop	r31
     606:	ef 91       	pop	r30
     608:	bf 91       	pop	r27
     60a:	af 91       	pop	r26
     60c:	9f 91       	pop	r25
     60e:	8f 91       	pop	r24
     610:	7f 91       	pop	r23
     612:	6f 91       	pop	r22
     614:	5f 91       	pop	r21
     616:	4f 91       	pop	r20
     618:	3f 91       	pop	r19
     61a:	2f 91       	pop	r18
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	ff 90       	pop	r15
     622:	ef 90       	pop	r14
     624:	0f 90       	pop	r0
     626:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     62a:	0f 90       	pop	r0
     62c:	1f 90       	pop	r1
     62e:	18 95       	reti

00000630 <CAN_init>:
     630:	cf 93       	push	r28
     632:	df 93       	push	r29
     634:	1f 92       	push	r1
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	88 ed       	ldi	r24, 0xD8	; 216
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	21 e0       	ldi	r18, 0x01	; 1
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18
     644:	19 82       	std	Y+1, r1	; 0x01
     646:	22 c0       	rjmp	.+68     	; 0x68c <CAN_init+0x5c>
     648:	8d ee       	ldi	r24, 0xED	; 237
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	29 81       	ldd	r18, Y+1	; 0x01
     64e:	22 95       	swap	r18
     650:	20 7f       	andi	r18, 0xF0	; 240
     652:	fc 01       	movw	r30, r24
     654:	20 83       	st	Z, r18
     656:	8f ee       	ldi	r24, 0xEF	; 239
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	fc 01       	movw	r30, r24
     65c:	10 82       	st	Z, r1
     65e:	8e ee       	ldi	r24, 0xEE	; 238
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	fc 01       	movw	r30, r24
     664:	10 82       	st	Z, r1
     666:	87 ef       	ldi	r24, 0xF7	; 247
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	fc 01       	movw	r30, r24
     66c:	10 82       	st	Z, r1
     66e:	86 ef       	ldi	r24, 0xF6	; 246
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	fc 01       	movw	r30, r24
     674:	10 82       	st	Z, r1
     676:	85 ef       	ldi	r24, 0xF5	; 245
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	fc 01       	movw	r30, r24
     67c:	10 82       	st	Z, r1
     67e:	84 ef       	ldi	r24, 0xF4	; 244
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	fc 01       	movw	r30, r24
     684:	10 82       	st	Z, r1
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	8f 5f       	subi	r24, 0xFF	; 255
     68a:	89 83       	std	Y+1, r24	; 0x01
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	86 30       	cpi	r24, 0x06	; 6
     690:	d8 f2       	brcs	.-74     	; 0x648 <CAN_init+0x18>
     692:	82 ee       	ldi	r24, 0xE2	; 226
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	2e e0       	ldi	r18, 0x0E	; 14
     698:	fc 01       	movw	r30, r24
     69a:	20 83       	st	Z, r18
     69c:	83 ee       	ldi	r24, 0xE3	; 227
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	24 e0       	ldi	r18, 0x04	; 4
     6a2:	fc 01       	movw	r30, r24
     6a4:	20 83       	st	Z, r18
     6a6:	84 ee       	ldi	r24, 0xE4	; 228
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	23 e1       	ldi	r18, 0x13	; 19
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18
     6b0:	8e ed       	ldi	r24, 0xDE	; 222
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	20 e3       	ldi	r18, 0x30	; 48
     6b6:	fc 01       	movw	r30, r24
     6b8:	20 83       	st	Z, r18
     6ba:	8b ed       	ldi	r24, 0xDB	; 219
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	20 ea       	ldi	r18, 0xA0	; 160
     6c0:	fc 01       	movw	r30, r24
     6c2:	20 83       	st	Z, r18
     6c4:	88 ed       	ldi	r24, 0xD8	; 216
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	22 e0       	ldi	r18, 0x02	; 2
     6ca:	fc 01       	movw	r30, r24
     6cc:	20 83       	st	Z, r18
     6ce:	82 e3       	ldi	r24, 0x32	; 50
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	0e 94 8e 04 	call	0x91c	; 0x91c <Delay>
     6d6:	89 ed       	ldi	r24, 0xD9	; 217
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	fc 01       	movw	r30, r24
     6dc:	80 81       	ld	r24, Z
     6de:	88 2f       	mov	r24, r24
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	84 70       	andi	r24, 0x04	; 4
     6e4:	99 27       	eor	r25, r25
     6e6:	89 2b       	or	r24, r25
     6e8:	11 f4       	brne	.+4      	; 0x6ee <CAN_init+0xbe>
     6ea:	81 e0       	ldi	r24, 0x01	; 1
     6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <CAN_init+0xc0>
     6ee:	80 e0       	ldi	r24, 0x00	; 0
     6f0:	0f 90       	pop	r0
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <CAN_RXInit>:
     6f8:	ef 92       	push	r14
     6fa:	ff 92       	push	r15
     6fc:	0f 93       	push	r16
     6fe:	1f 93       	push	r17
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62
     708:	2a 97       	sbiw	r28, 0x0a	; 10
     70a:	0f b6       	in	r0, 0x3f	; 63
     70c:	f8 94       	cli
     70e:	de bf       	out	0x3e, r29	; 62
     710:	0f be       	out	0x3f, r0	; 63
     712:	cd bf       	out	0x3d, r28	; 61
     714:	89 83       	std	Y+1, r24	; 0x01
     716:	6a 83       	std	Y+2, r22	; 0x02
     718:	2b 83       	std	Y+3, r18	; 0x03
     71a:	3c 83       	std	Y+4, r19	; 0x04
     71c:	4d 83       	std	Y+5, r20	; 0x05
     71e:	5e 83       	std	Y+6, r21	; 0x06
     720:	ef 82       	std	Y+7, r14	; 0x07
     722:	f8 86       	std	Y+8, r15	; 0x08
     724:	09 87       	std	Y+9, r16	; 0x09
     726:	1a 87       	std	Y+10, r17	; 0x0a
     728:	8d ee       	ldi	r24, 0xED	; 237
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	29 81       	ldd	r18, Y+1	; 0x01
     72e:	22 95       	swap	r18
     730:	20 7f       	andi	r18, 0xF0	; 240
     732:	fc 01       	movw	r30, r24
     734:	20 83       	st	Z, r18
     736:	84 ef       	ldi	r24, 0xF4	; 244
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	2b 81       	ldd	r18, Y+3	; 0x03
     73c:	22 0f       	add	r18, r18
     73e:	22 0f       	add	r18, r18
     740:	22 0f       	add	r18, r18
     742:	fc 01       	movw	r30, r24
     744:	20 83       	st	Z, r18
     746:	25 ef       	ldi	r18, 0xF5	; 245
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	8b 81       	ldd	r24, Y+3	; 0x03
     74c:	9c 81       	ldd	r25, Y+4	; 0x04
     74e:	ad 81       	ldd	r26, Y+5	; 0x05
     750:	be 81       	ldd	r27, Y+6	; 0x06
     752:	68 94       	set
     754:	14 f8       	bld	r1, 4
     756:	b6 95       	lsr	r27
     758:	a7 95       	ror	r26
     75a:	97 95       	ror	r25
     75c:	87 95       	ror	r24
     75e:	16 94       	lsr	r1
     760:	d1 f7       	brne	.-12     	; 0x756 <CAN_RXInit+0x5e>
     762:	f9 01       	movw	r30, r18
     764:	80 83       	st	Z, r24
     766:	26 ef       	ldi	r18, 0xF6	; 246
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	8b 81       	ldd	r24, Y+3	; 0x03
     76c:	9c 81       	ldd	r25, Y+4	; 0x04
     76e:	ad 81       	ldd	r26, Y+5	; 0x05
     770:	be 81       	ldd	r27, Y+6	; 0x06
     772:	07 2e       	mov	r0, r23
     774:	7d e0       	ldi	r23, 0x0D	; 13
     776:	b6 95       	lsr	r27
     778:	a7 95       	ror	r26
     77a:	97 95       	ror	r25
     77c:	87 95       	ror	r24
     77e:	7a 95       	dec	r23
     780:	d1 f7       	brne	.-12     	; 0x776 <CAN_RXInit+0x7e>
     782:	70 2d       	mov	r23, r0
     784:	f9 01       	movw	r30, r18
     786:	80 83       	st	Z, r24
     788:	27 ef       	ldi	r18, 0xF7	; 247
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	8b 81       	ldd	r24, Y+3	; 0x03
     78e:	9c 81       	ldd	r25, Y+4	; 0x04
     790:	ad 81       	ldd	r26, Y+5	; 0x05
     792:	be 81       	ldd	r27, Y+6	; 0x06
     794:	07 2e       	mov	r0, r23
     796:	75 e1       	ldi	r23, 0x15	; 21
     798:	b6 95       	lsr	r27
     79a:	a7 95       	ror	r26
     79c:	97 95       	ror	r25
     79e:	87 95       	ror	r24
     7a0:	7a 95       	dec	r23
     7a2:	d1 f7       	brne	.-12     	; 0x798 <CAN_RXInit+0xa0>
     7a4:	70 2d       	mov	r23, r0
     7a6:	f9 01       	movw	r30, r18
     7a8:	80 83       	st	Z, r24
     7aa:	80 ef       	ldi	r24, 0xF0	; 240
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	2f 81       	ldd	r18, Y+7	; 0x07
     7b0:	22 0f       	add	r18, r18
     7b2:	22 0f       	add	r18, r18
     7b4:	22 0f       	add	r18, r18
     7b6:	fc 01       	movw	r30, r24
     7b8:	20 83       	st	Z, r18
     7ba:	21 ef       	ldi	r18, 0xF1	; 241
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	8f 81       	ldd	r24, Y+7	; 0x07
     7c0:	98 85       	ldd	r25, Y+8	; 0x08
     7c2:	a9 85       	ldd	r26, Y+9	; 0x09
     7c4:	ba 85       	ldd	r27, Y+10	; 0x0a
     7c6:	68 94       	set
     7c8:	14 f8       	bld	r1, 4
     7ca:	b6 95       	lsr	r27
     7cc:	a7 95       	ror	r26
     7ce:	97 95       	ror	r25
     7d0:	87 95       	ror	r24
     7d2:	16 94       	lsr	r1
     7d4:	d1 f7       	brne	.-12     	; 0x7ca <CAN_RXInit+0xd2>
     7d6:	f9 01       	movw	r30, r18
     7d8:	80 83       	st	Z, r24
     7da:	22 ef       	ldi	r18, 0xF2	; 242
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	8f 81       	ldd	r24, Y+7	; 0x07
     7e0:	98 85       	ldd	r25, Y+8	; 0x08
     7e2:	a9 85       	ldd	r26, Y+9	; 0x09
     7e4:	ba 85       	ldd	r27, Y+10	; 0x0a
     7e6:	07 2e       	mov	r0, r23
     7e8:	7d e0       	ldi	r23, 0x0D	; 13
     7ea:	b6 95       	lsr	r27
     7ec:	a7 95       	ror	r26
     7ee:	97 95       	ror	r25
     7f0:	87 95       	ror	r24
     7f2:	7a 95       	dec	r23
     7f4:	d1 f7       	brne	.-12     	; 0x7ea <CAN_RXInit+0xf2>
     7f6:	70 2d       	mov	r23, r0
     7f8:	f9 01       	movw	r30, r18
     7fa:	80 83       	st	Z, r24
     7fc:	23 ef       	ldi	r18, 0xF3	; 243
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	8f 81       	ldd	r24, Y+7	; 0x07
     802:	98 85       	ldd	r25, Y+8	; 0x08
     804:	a9 85       	ldd	r26, Y+9	; 0x09
     806:	ba 85       	ldd	r27, Y+10	; 0x0a
     808:	07 2e       	mov	r0, r23
     80a:	75 e1       	ldi	r23, 0x15	; 21
     80c:	b6 95       	lsr	r27
     80e:	a7 95       	ror	r26
     810:	97 95       	ror	r25
     812:	87 95       	ror	r24
     814:	7a 95       	dec	r23
     816:	d1 f7       	brne	.-12     	; 0x80c <CAN_RXInit+0x114>
     818:	70 2d       	mov	r23, r0
     81a:	f9 01       	movw	r30, r18
     81c:	80 83       	st	Z, r24
     81e:	8f ee       	ldi	r24, 0xEF	; 239
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	2a 81       	ldd	r18, Y+2	; 0x02
     824:	20 69       	ori	r18, 0x90	; 144
     826:	fc 01       	movw	r30, r24
     828:	20 83       	st	Z, r18
     82a:	00 00       	nop
     82c:	2a 96       	adiw	r28, 0x0a	; 10
     82e:	0f b6       	in	r0, 0x3f	; 63
     830:	f8 94       	cli
     832:	de bf       	out	0x3e, r29	; 62
     834:	0f be       	out	0x3f, r0	; 63
     836:	cd bf       	out	0x3d, r28	; 61
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	1f 91       	pop	r17
     83e:	0f 91       	pop	r16
     840:	ff 90       	pop	r15
     842:	ef 90       	pop	r14
     844:	08 95       	ret

00000846 <ADC_init>:
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	cd b7       	in	r28, 0x3d	; 61
     84c:	de b7       	in	r29, 0x3e	; 62
     84e:	8c e7       	ldi	r24, 0x7C	; 124
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	20 e6       	ldi	r18, 0x60	; 96
     854:	fc 01       	movw	r30, r24
     856:	20 83       	st	Z, r18
     858:	8c e7       	ldi	r24, 0x7C	; 124
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	2c e7       	ldi	r18, 0x7C	; 124
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	f9 01       	movw	r30, r18
     862:	20 81       	ld	r18, Z
     864:	2f 7d       	andi	r18, 0xDF	; 223
     866:	fc 01       	movw	r30, r24
     868:	20 83       	st	Z, r18
     86a:	8a e7       	ldi	r24, 0x7A	; 122
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	27 e8       	ldi	r18, 0x87	; 135
     870:	fc 01       	movw	r30, r24
     872:	20 83       	st	Z, r18
     874:	00 00       	nop
     876:	df 91       	pop	r29
     878:	cf 91       	pop	r28
     87a:	08 95       	ret

0000087c <spi_init>:
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	85 e5       	ldi	r24, 0x55	; 85
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	25 e5       	ldi	r18, 0x55	; 85
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	f9 01       	movw	r30, r18
     88e:	20 81       	ld	r18, Z
     890:	2f 77       	andi	r18, 0x7F	; 127
     892:	fc 01       	movw	r30, r24
     894:	20 83       	st	Z, r18
     896:	8c e4       	ldi	r24, 0x4C	; 76
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	20 e5       	ldi	r18, 0x50	; 80
     89c:	fc 01       	movw	r30, r24
     89e:	20 83       	st	Z, r18
     8a0:	8d e4       	ldi	r24, 0x4D	; 77
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	21 e0       	ldi	r18, 0x01	; 1
     8a6:	fc 01       	movw	r30, r24
     8a8:	20 83       	st	Z, r18
     8aa:	8e e4       	ldi	r24, 0x4E	; 78
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	fc 01       	movw	r30, r24
     8b0:	10 82       	st	Z, r1
     8b2:	00 00       	nop
     8b4:	df 91       	pop	r29
     8b6:	cf 91       	pop	r28
     8b8:	08 95       	ret

000008ba <spi_send_byte>:
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	1f 92       	push	r1
     8c0:	cd b7       	in	r28, 0x3d	; 61
     8c2:	de b7       	in	r29, 0x3e	; 62
     8c4:	89 83       	std	Y+1, r24	; 0x01
     8c6:	8e e4       	ldi	r24, 0x4E	; 78
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	29 81       	ldd	r18, Y+1	; 0x01
     8cc:	fc 01       	movw	r30, r24
     8ce:	20 83       	st	Z, r18
     8d0:	00 00       	nop
     8d2:	8d e4       	ldi	r24, 0x4D	; 77
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	fc 01       	movw	r30, r24
     8d8:	80 81       	ld	r24, Z
     8da:	88 23       	and	r24, r24
     8dc:	d4 f7       	brge	.-12     	; 0x8d2 <spi_send_byte+0x18>
     8de:	8e e4       	ldi	r24, 0x4E	; 78
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	fc 01       	movw	r30, r24
     8e4:	80 81       	ld	r24, Z
     8e6:	0f 90       	pop	r0
     8e8:	df 91       	pop	r29
     8ea:	cf 91       	pop	r28
     8ec:	08 95       	ret

000008ee <uDelay>:
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	00 d0       	rcall	.+0      	; 0x8f4 <uDelay+0x6>
     8f4:	cd b7       	in	r28, 0x3d	; 61
     8f6:	de b7       	in	r29, 0x3e	; 62
     8f8:	9a 83       	std	Y+2, r25	; 0x02
     8fa:	89 83       	std	Y+1, r24	; 0x01
     8fc:	00 00       	nop
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	9a 81       	ldd	r25, Y+2	; 0x02
     902:	9c 01       	movw	r18, r24
     904:	21 50       	subi	r18, 0x01	; 1
     906:	31 09       	sbc	r19, r1
     908:	3a 83       	std	Y+2, r19	; 0x02
     90a:	29 83       	std	Y+1, r18	; 0x01
     90c:	89 2b       	or	r24, r25
     90e:	b9 f7       	brne	.-18     	; 0x8fe <uDelay+0x10>
     910:	00 00       	nop
     912:	0f 90       	pop	r0
     914:	0f 90       	pop	r0
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	08 95       	ret

0000091c <Delay>:
     91c:	cf 93       	push	r28
     91e:	df 93       	push	r29
     920:	00 d0       	rcall	.+0      	; 0x922 <Delay+0x6>
     922:	00 d0       	rcall	.+0      	; 0x924 <Delay+0x8>
     924:	cd b7       	in	r28, 0x3d	; 61
     926:	de b7       	in	r29, 0x3e	; 62
     928:	9c 83       	std	Y+4, r25	; 0x04
     92a:	8b 83       	std	Y+3, r24	; 0x03
     92c:	1a 82       	std	Y+2, r1	; 0x02
     92e:	19 82       	std	Y+1, r1	; 0x01
     930:	09 c0       	rjmp	.+18     	; 0x944 <Delay+0x28>
     932:	80 e6       	ldi	r24, 0x60	; 96
     934:	94 e0       	ldi	r25, 0x04	; 4
     936:	0e 94 77 04 	call	0x8ee	; 0x8ee <uDelay>
     93a:	89 81       	ldd	r24, Y+1	; 0x01
     93c:	9a 81       	ldd	r25, Y+2	; 0x02
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	29 81       	ldd	r18, Y+1	; 0x01
     946:	3a 81       	ldd	r19, Y+2	; 0x02
     948:	8b 81       	ldd	r24, Y+3	; 0x03
     94a:	9c 81       	ldd	r25, Y+4	; 0x04
     94c:	28 17       	cp	r18, r24
     94e:	39 07       	cpc	r19, r25
     950:	80 f3       	brcs	.-32     	; 0x932 <Delay+0x16>
     952:	00 00       	nop
     954:	0f 90       	pop	r0
     956:	0f 90       	pop	r0
     958:	0f 90       	pop	r0
     95a:	0f 90       	pop	r0
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	08 95       	ret

00000962 <Write_Command>:
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
     966:	1f 92       	push	r1
     968:	cd b7       	in	r28, 0x3d	; 61
     96a:	de b7       	in	r29, 0x3e	; 62
     96c:	89 83       	std	Y+1, r24	; 0x01
     96e:	85 e2       	ldi	r24, 0x25	; 37
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	25 e2       	ldi	r18, 0x25	; 37
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	f9 01       	movw	r30, r18
     978:	20 81       	ld	r18, Z
     97a:	2f 7d       	andi	r18, 0xDF	; 223
     97c:	fc 01       	movw	r30, r24
     97e:	20 83       	st	Z, r18
     980:	8b e2       	ldi	r24, 0x2B	; 43
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	2b e2       	ldi	r18, 0x2B	; 43
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	f9 01       	movw	r30, r18
     98a:	20 81       	ld	r18, Z
     98c:	2e 7f       	andi	r18, 0xFE	; 254
     98e:	fc 01       	movw	r30, r24
     990:	20 83       	st	Z, r18
     992:	89 81       	ldd	r24, Y+1	; 0x01
     994:	0e 94 5d 04 	call	0x8ba	; 0x8ba <spi_send_byte>
     998:	85 e2       	ldi	r24, 0x25	; 37
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	25 e2       	ldi	r18, 0x25	; 37
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	f9 01       	movw	r30, r18
     9a2:	20 81       	ld	r18, Z
     9a4:	20 62       	ori	r18, 0x20	; 32
     9a6:	fc 01       	movw	r30, r24
     9a8:	20 83       	st	Z, r18
     9aa:	8b e2       	ldi	r24, 0x2B	; 43
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	2b e2       	ldi	r18, 0x2B	; 43
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	f9 01       	movw	r30, r18
     9b4:	20 81       	ld	r18, Z
     9b6:	21 60       	ori	r18, 0x01	; 1
     9b8:	fc 01       	movw	r30, r24
     9ba:	20 83       	st	Z, r18
     9bc:	00 00       	nop
     9be:	0f 90       	pop	r0
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	08 95       	ret

000009c6 <Write_Data>:
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	1f 92       	push	r1
     9cc:	cd b7       	in	r28, 0x3d	; 61
     9ce:	de b7       	in	r29, 0x3e	; 62
     9d0:	89 83       	std	Y+1, r24	; 0x01
     9d2:	8b e2       	ldi	r24, 0x2B	; 43
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	2b e2       	ldi	r18, 0x2B	; 43
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	f9 01       	movw	r30, r18
     9dc:	20 81       	ld	r18, Z
     9de:	2e 7f       	andi	r18, 0xFE	; 254
     9e0:	fc 01       	movw	r30, r24
     9e2:	20 83       	st	Z, r18
     9e4:	85 e2       	ldi	r24, 0x25	; 37
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	25 e2       	ldi	r18, 0x25	; 37
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	f9 01       	movw	r30, r18
     9ee:	20 81       	ld	r18, Z
     9f0:	20 62       	ori	r18, 0x20	; 32
     9f2:	fc 01       	movw	r30, r24
     9f4:	20 83       	st	Z, r18
     9f6:	89 81       	ldd	r24, Y+1	; 0x01
     9f8:	0e 94 5d 04 	call	0x8ba	; 0x8ba <spi_send_byte>
     9fc:	85 e2       	ldi	r24, 0x25	; 37
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	25 e2       	ldi	r18, 0x25	; 37
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	f9 01       	movw	r30, r18
     a06:	20 81       	ld	r18, Z
     a08:	20 62       	ori	r18, 0x20	; 32
     a0a:	fc 01       	movw	r30, r24
     a0c:	20 83       	st	Z, r18
     a0e:	8b e2       	ldi	r24, 0x2B	; 43
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	2b e2       	ldi	r18, 0x2B	; 43
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	f9 01       	movw	r30, r18
     a18:	20 81       	ld	r18, Z
     a1a:	21 60       	ori	r18, 0x01	; 1
     a1c:	fc 01       	movw	r30, r24
     a1e:	20 83       	st	Z, r18
     a20:	00 00       	nop
     a22:	0f 90       	pop	r0
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	08 95       	ret

00000a2a <Set_Column_Address>:
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	00 d0       	rcall	.+0      	; 0xa30 <Set_Column_Address+0x6>
     a30:	cd b7       	in	r28, 0x3d	; 61
     a32:	de b7       	in	r29, 0x3e	; 62
     a34:	89 83       	std	Y+1, r24	; 0x01
     a36:	6a 83       	std	Y+2, r22	; 0x02
     a38:	85 e1       	ldi	r24, 0x15	; 21
     a3a:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     a3e:	89 81       	ldd	r24, Y+1	; 0x01
     a40:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     a44:	8a 81       	ldd	r24, Y+2	; 0x02
     a46:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     a4a:	00 00       	nop
     a4c:	0f 90       	pop	r0
     a4e:	0f 90       	pop	r0
     a50:	df 91       	pop	r29
     a52:	cf 91       	pop	r28
     a54:	08 95       	ret

00000a56 <Set_Row_Address>:
     a56:	cf 93       	push	r28
     a58:	df 93       	push	r29
     a5a:	00 d0       	rcall	.+0      	; 0xa5c <Set_Row_Address+0x6>
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	89 83       	std	Y+1, r24	; 0x01
     a62:	6a 83       	std	Y+2, r22	; 0x02
     a64:	85 e7       	ldi	r24, 0x75	; 117
     a66:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     a6a:	89 81       	ldd	r24, Y+1	; 0x01
     a6c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     a70:	8a 81       	ldd	r24, Y+2	; 0x02
     a72:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     a76:	00 00       	nop
     a78:	0f 90       	pop	r0
     a7a:	0f 90       	pop	r0
     a7c:	df 91       	pop	r29
     a7e:	cf 91       	pop	r28
     a80:	08 95       	ret

00000a82 <Set_Write_RAM>:
     a82:	cf 93       	push	r28
     a84:	df 93       	push	r29
     a86:	cd b7       	in	r28, 0x3d	; 61
     a88:	de b7       	in	r29, 0x3e	; 62
     a8a:	8c e5       	ldi	r24, 0x5C	; 92
     a8c:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     a90:	00 00       	nop
     a92:	df 91       	pop	r29
     a94:	cf 91       	pop	r28
     a96:	08 95       	ret

00000a98 <Set_Remap_Format>:
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	1f 92       	push	r1
     a9e:	cd b7       	in	r28, 0x3d	; 61
     aa0:	de b7       	in	r29, 0x3e	; 62
     aa2:	89 83       	std	Y+1, r24	; 0x01
     aa4:	80 ea       	ldi	r24, 0xA0	; 160
     aa6:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     aaa:	89 81       	ldd	r24, Y+1	; 0x01
     aac:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     ab0:	81 e1       	ldi	r24, 0x11	; 17
     ab2:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     ab6:	00 00       	nop
     ab8:	0f 90       	pop	r0
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	08 95       	ret

00000ac0 <Set_Start_Line>:
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	1f 92       	push	r1
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	89 83       	std	Y+1, r24	; 0x01
     acc:	81 ea       	ldi	r24, 0xA1	; 161
     ace:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     ad2:	89 81       	ldd	r24, Y+1	; 0x01
     ad4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     ad8:	00 00       	nop
     ada:	0f 90       	pop	r0
     adc:	df 91       	pop	r29
     ade:	cf 91       	pop	r28
     ae0:	08 95       	ret

00000ae2 <Set_Display_Offset>:
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	1f 92       	push	r1
     ae8:	cd b7       	in	r28, 0x3d	; 61
     aea:	de b7       	in	r29, 0x3e	; 62
     aec:	89 83       	std	Y+1, r24	; 0x01
     aee:	82 ea       	ldi	r24, 0xA2	; 162
     af0:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     af4:	89 81       	ldd	r24, Y+1	; 0x01
     af6:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     afa:	00 00       	nop
     afc:	0f 90       	pop	r0
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	08 95       	ret

00000b04 <Set_Display_Mode>:
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	1f 92       	push	r1
     b0a:	cd b7       	in	r28, 0x3d	; 61
     b0c:	de b7       	in	r29, 0x3e	; 62
     b0e:	89 83       	std	Y+1, r24	; 0x01
     b10:	89 81       	ldd	r24, Y+1	; 0x01
     b12:	84 6a       	ori	r24, 0xA4	; 164
     b14:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     b18:	00 00       	nop
     b1a:	0f 90       	pop	r0
     b1c:	df 91       	pop	r29
     b1e:	cf 91       	pop	r28
     b20:	08 95       	ret

00000b22 <Set_Partial_Display>:
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	00 d0       	rcall	.+0      	; 0xb28 <Set_Partial_Display+0x6>
     b28:	1f 92       	push	r1
     b2a:	cd b7       	in	r28, 0x3d	; 61
     b2c:	de b7       	in	r29, 0x3e	; 62
     b2e:	89 83       	std	Y+1, r24	; 0x01
     b30:	6a 83       	std	Y+2, r22	; 0x02
     b32:	4b 83       	std	Y+3, r20	; 0x03
     b34:	89 81       	ldd	r24, Y+1	; 0x01
     b36:	88 6a       	ori	r24, 0xA8	; 168
     b38:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     b3c:	89 81       	ldd	r24, Y+1	; 0x01
     b3e:	88 23       	and	r24, r24
     b40:	31 f4       	brne	.+12     	; 0xb4e <Set_Partial_Display+0x2c>
     b42:	8a 81       	ldd	r24, Y+2	; 0x02
     b44:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     b48:	8b 81       	ldd	r24, Y+3	; 0x03
     b4a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     b4e:	00 00       	nop
     b50:	0f 90       	pop	r0
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	df 91       	pop	r29
     b58:	cf 91       	pop	r28
     b5a:	08 95       	ret

00000b5c <Set_Function_Selection>:
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	1f 92       	push	r1
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
     b66:	89 83       	std	Y+1, r24	; 0x01
     b68:	8b ea       	ldi	r24, 0xAB	; 171
     b6a:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     b6e:	89 81       	ldd	r24, Y+1	; 0x01
     b70:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     b74:	00 00       	nop
     b76:	0f 90       	pop	r0
     b78:	df 91       	pop	r29
     b7a:	cf 91       	pop	r28
     b7c:	08 95       	ret

00000b7e <Set_Display_On_Off>:
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	1f 92       	push	r1
     b84:	cd b7       	in	r28, 0x3d	; 61
     b86:	de b7       	in	r29, 0x3e	; 62
     b88:	89 83       	std	Y+1, r24	; 0x01
     b8a:	89 81       	ldd	r24, Y+1	; 0x01
     b8c:	8e 6a       	ori	r24, 0xAE	; 174
     b8e:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     b92:	00 00       	nop
     b94:	0f 90       	pop	r0
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	08 95       	ret

00000b9c <Set_Phase_Length>:
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	1f 92       	push	r1
     ba2:	cd b7       	in	r28, 0x3d	; 61
     ba4:	de b7       	in	r29, 0x3e	; 62
     ba6:	89 83       	std	Y+1, r24	; 0x01
     ba8:	81 eb       	ldi	r24, 0xB1	; 177
     baa:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     bae:	89 81       	ldd	r24, Y+1	; 0x01
     bb0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     bb4:	00 00       	nop
     bb6:	0f 90       	pop	r0
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	08 95       	ret

00000bbe <Set_Display_Clock>:
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	1f 92       	push	r1
     bc4:	cd b7       	in	r28, 0x3d	; 61
     bc6:	de b7       	in	r29, 0x3e	; 62
     bc8:	89 83       	std	Y+1, r24	; 0x01
     bca:	83 eb       	ldi	r24, 0xB3	; 179
     bcc:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     bd0:	89 81       	ldd	r24, Y+1	; 0x01
     bd2:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     bd6:	00 00       	nop
     bd8:	0f 90       	pop	r0
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	08 95       	ret

00000be0 <Set_Display_Enhancement_A>:
     be0:	cf 93       	push	r28
     be2:	df 93       	push	r29
     be4:	00 d0       	rcall	.+0      	; 0xbe6 <Set_Display_Enhancement_A+0x6>
     be6:	cd b7       	in	r28, 0x3d	; 61
     be8:	de b7       	in	r29, 0x3e	; 62
     bea:	89 83       	std	Y+1, r24	; 0x01
     bec:	6a 83       	std	Y+2, r22	; 0x02
     bee:	84 eb       	ldi	r24, 0xB4	; 180
     bf0:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     bf4:	89 81       	ldd	r24, Y+1	; 0x01
     bf6:	80 6a       	ori	r24, 0xA0	; 160
     bf8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     bfc:	8a 81       	ldd	r24, Y+2	; 0x02
     bfe:	85 60       	ori	r24, 0x05	; 5
     c00:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     c04:	00 00       	nop
     c06:	0f 90       	pop	r0
     c08:	0f 90       	pop	r0
     c0a:	df 91       	pop	r29
     c0c:	cf 91       	pop	r28
     c0e:	08 95       	ret

00000c10 <Set_GPIO>:
     c10:	cf 93       	push	r28
     c12:	df 93       	push	r29
     c14:	1f 92       	push	r1
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	89 83       	std	Y+1, r24	; 0x01
     c1c:	85 eb       	ldi	r24, 0xB5	; 181
     c1e:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     c22:	89 81       	ldd	r24, Y+1	; 0x01
     c24:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     c28:	00 00       	nop
     c2a:	0f 90       	pop	r0
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <Set_Precharge_Period>:
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	1f 92       	push	r1
     c38:	cd b7       	in	r28, 0x3d	; 61
     c3a:	de b7       	in	r29, 0x3e	; 62
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	86 eb       	ldi	r24, 0xB6	; 182
     c40:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     c44:	89 81       	ldd	r24, Y+1	; 0x01
     c46:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     c4a:	00 00       	nop
     c4c:	0f 90       	pop	r0
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	08 95       	ret

00000c54 <Set_Precharge_Voltage>:
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	1f 92       	push	r1
     c5a:	cd b7       	in	r28, 0x3d	; 61
     c5c:	de b7       	in	r29, 0x3e	; 62
     c5e:	89 83       	std	Y+1, r24	; 0x01
     c60:	8b eb       	ldi	r24, 0xBB	; 187
     c62:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     c66:	89 81       	ldd	r24, Y+1	; 0x01
     c68:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     c6c:	00 00       	nop
     c6e:	0f 90       	pop	r0
     c70:	df 91       	pop	r29
     c72:	cf 91       	pop	r28
     c74:	08 95       	ret

00000c76 <Set_VCOMH>:
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	1f 92       	push	r1
     c7c:	cd b7       	in	r28, 0x3d	; 61
     c7e:	de b7       	in	r29, 0x3e	; 62
     c80:	89 83       	std	Y+1, r24	; 0x01
     c82:	8e eb       	ldi	r24, 0xBE	; 190
     c84:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     c88:	89 81       	ldd	r24, Y+1	; 0x01
     c8a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     c8e:	00 00       	nop
     c90:	0f 90       	pop	r0
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <Set_Contrast_Current>:
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	1f 92       	push	r1
     c9e:	cd b7       	in	r28, 0x3d	; 61
     ca0:	de b7       	in	r29, 0x3e	; 62
     ca2:	89 83       	std	Y+1, r24	; 0x01
     ca4:	81 ec       	ldi	r24, 0xC1	; 193
     ca6:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     cb0:	00 00       	nop
     cb2:	0f 90       	pop	r0
     cb4:	df 91       	pop	r29
     cb6:	cf 91       	pop	r28
     cb8:	08 95       	ret

00000cba <Set_Master_Current>:
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	1f 92       	push	r1
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62
     cc4:	89 83       	std	Y+1, r24	; 0x01
     cc6:	87 ec       	ldi	r24, 0xC7	; 199
     cc8:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     ccc:	89 81       	ldd	r24, Y+1	; 0x01
     cce:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     cd2:	00 00       	nop
     cd4:	0f 90       	pop	r0
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	08 95       	ret

00000cdc <Set_Multiplex_Ratio>:
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	1f 92       	push	r1
     ce2:	cd b7       	in	r28, 0x3d	; 61
     ce4:	de b7       	in	r29, 0x3e	; 62
     ce6:	89 83       	std	Y+1, r24	; 0x01
     ce8:	8a ec       	ldi	r24, 0xCA	; 202
     cea:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     cee:	89 81       	ldd	r24, Y+1	; 0x01
     cf0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     cf4:	00 00       	nop
     cf6:	0f 90       	pop	r0
     cf8:	df 91       	pop	r29
     cfa:	cf 91       	pop	r28
     cfc:	08 95       	ret

00000cfe <Set_Display_Enhancement_B>:
     cfe:	cf 93       	push	r28
     d00:	df 93       	push	r29
     d02:	1f 92       	push	r1
     d04:	cd b7       	in	r28, 0x3d	; 61
     d06:	de b7       	in	r29, 0x3e	; 62
     d08:	89 83       	std	Y+1, r24	; 0x01
     d0a:	81 ed       	ldi	r24, 0xD1	; 209
     d0c:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	82 68       	ori	r24, 0x82	; 130
     d14:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     d18:	80 e2       	ldi	r24, 0x20	; 32
     d1a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     d1e:	00 00       	nop
     d20:	0f 90       	pop	r0
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	08 95       	ret

00000d28 <Set_Command_Lock>:
     d28:	cf 93       	push	r28
     d2a:	df 93       	push	r29
     d2c:	1f 92       	push	r1
     d2e:	cd b7       	in	r28, 0x3d	; 61
     d30:	de b7       	in	r29, 0x3e	; 62
     d32:	89 83       	std	Y+1, r24	; 0x01
     d34:	8d ef       	ldi	r24, 0xFD	; 253
     d36:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
     d3a:	89 81       	ldd	r24, Y+1	; 0x01
     d3c:	82 61       	ori	r24, 0x12	; 18
     d3e:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     d42:	00 00       	nop
     d44:	0f 90       	pop	r0
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	08 95       	ret

00000d4c <Fill_RAM>:
     d4c:	cf 93       	push	r28
     d4e:	df 93       	push	r29
     d50:	00 d0       	rcall	.+0      	; 0xd52 <Fill_RAM+0x6>
     d52:	1f 92       	push	r1
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62
     d58:	8b 83       	std	Y+3, r24	; 0x03
     d5a:	67 e7       	ldi	r22, 0x77	; 119
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	0e 94 15 05 	call	0xa2a	; 0xa2a <Set_Column_Address>
     d62:	6f e7       	ldi	r22, 0x7F	; 127
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	0e 94 2b 05 	call	0xa56	; 0xa56 <Set_Row_Address>
     d6a:	0e 94 41 05 	call	0xa82	; 0xa82 <Set_Write_RAM>
     d6e:	19 82       	std	Y+1, r1	; 0x01
     d70:	0e c0       	rjmp	.+28     	; 0xd8e <Fill_RAM+0x42>
     d72:	1a 82       	std	Y+2, r1	; 0x02
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <Fill_RAM+0x36>
     d76:	8b 81       	ldd	r24, Y+3	; 0x03
     d78:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     d7c:	8a 81       	ldd	r24, Y+2	; 0x02
     d7e:	8f 5f       	subi	r24, 0xFF	; 255
     d80:	8a 83       	std	Y+2, r24	; 0x02
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	88 37       	cpi	r24, 0x78	; 120
     d86:	b8 f3       	brcs	.-18     	; 0xd76 <Fill_RAM+0x2a>
     d88:	89 81       	ldd	r24, Y+1	; 0x01
     d8a:	8f 5f       	subi	r24, 0xFF	; 255
     d8c:	89 83       	std	Y+1, r24	; 0x01
     d8e:	89 81       	ldd	r24, Y+1	; 0x01
     d90:	88 23       	and	r24, r24
     d92:	7c f7       	brge	.-34     	; 0xd72 <Fill_RAM+0x26>
     d94:	00 00       	nop
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	08 95       	ret

00000da2 <Show_Font57>:
     da2:	cf 93       	push	r28
     da4:	df 93       	push	r29
     da6:	cd b7       	in	r28, 0x3d	; 61
     da8:	de b7       	in	r29, 0x3e	; 62
     daa:	2e 97       	sbiw	r28, 0x0e	; 14
     dac:	0f b6       	in	r0, 0x3f	; 63
     dae:	f8 94       	cli
     db0:	de bf       	out	0x3e, r29	; 62
     db2:	0f be       	out	0x3f, r0	; 63
     db4:	cd bf       	out	0x3d, r28	; 61
     db6:	8b 87       	std	Y+11, r24	; 0x0b
     db8:	6c 87       	std	Y+12, r22	; 0x0c
     dba:	4d 87       	std	Y+13, r20	; 0x0d
     dbc:	2e 87       	std	Y+14, r18	; 0x0e
     dbe:	8c 85       	ldd	r24, Y+12	; 0x0c
     dc0:	88 2f       	mov	r24, r24
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	81 97       	sbiw	r24, 0x21	; 33
     dc6:	98 87       	std	Y+8, r25	; 0x08
     dc8:	8f 83       	std	Y+7, r24	; 0x07
     dca:	8b 85       	ldd	r24, Y+11	; 0x0b
     dcc:	88 2f       	mov	r24, r24
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	81 30       	cpi	r24, 0x01	; 1
     dd2:	91 05       	cpc	r25, r1
     dd4:	19 f0       	breq	.+6      	; 0xddc <Show_Font57+0x3a>
     dd6:	02 97       	sbiw	r24, 0x02	; 2
     dd8:	79 f0       	breq	.+30     	; 0xdf8 <Show_Font57+0x56>
     dda:	20 c0       	rjmp	.+64     	; 0xe1c <Show_Font57+0x7a>
     ddc:	2f 81       	ldd	r18, Y+7	; 0x07
     dde:	38 85       	ldd	r19, Y+8	; 0x08
     de0:	c9 01       	movw	r24, r18
     de2:	88 0f       	add	r24, r24
     de4:	99 1f       	adc	r25, r25
     de6:	88 0f       	add	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	82 0f       	add	r24, r18
     dec:	93 1f       	adc	r25, r19
     dee:	80 5e       	subi	r24, 0xE0	; 224
     df0:	9e 4f       	sbci	r25, 0xFE	; 254
     df2:	9a 83       	std	Y+2, r25	; 0x02
     df4:	89 83       	std	Y+1, r24	; 0x01
     df6:	12 c0       	rjmp	.+36     	; 0xe1c <Show_Font57+0x7a>
     df8:	8c 85       	ldd	r24, Y+12	; 0x0c
     dfa:	88 2f       	mov	r24, r24
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	9c 01       	movw	r18, r24
     e00:	21 50       	subi	r18, 0x01	; 1
     e02:	31 09       	sbc	r19, r1
     e04:	c9 01       	movw	r24, r18
     e06:	88 0f       	add	r24, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	82 0f       	add	r24, r18
     e10:	93 1f       	adc	r25, r19
     e12:	80 53       	subi	r24, 0x30	; 48
     e14:	9a 4f       	sbci	r25, 0xFA	; 250
     e16:	9a 83       	std	Y+2, r25	; 0x02
     e18:	89 83       	std	Y+1, r24	; 0x01
     e1a:	00 00       	nop
     e1c:	85 e1       	ldi	r24, 0x15	; 21
     e1e:	0e 94 4c 05 	call	0xa98	; 0xa98 <Set_Remap_Format>
     e22:	1b 82       	std	Y+3, r1	; 0x03
     e24:	0d c3       	rjmp	.+1562   	; 0x1440 <__stack+0x341>
     e26:	89 81       	ldd	r24, Y+1	; 0x01
     e28:	9a 81       	ldd	r25, Y+2	; 0x02
     e2a:	fc 01       	movw	r30, r24
     e2c:	80 81       	ld	r24, Z
     e2e:	89 87       	std	Y+9, r24	; 0x09
     e30:	89 81       	ldd	r24, Y+1	; 0x01
     e32:	9a 81       	ldd	r25, Y+2	; 0x02
     e34:	01 96       	adiw	r24, 0x01	; 1
     e36:	9a 83       	std	Y+2, r25	; 0x02
     e38:	89 83       	std	Y+1, r24	; 0x01
     e3a:	8b 81       	ldd	r24, Y+3	; 0x03
     e3c:	81 30       	cpi	r24, 0x01	; 1
     e3e:	21 f4       	brne	.+8      	; 0xe48 <Show_Font57+0xa6>
     e40:	1c 82       	std	Y+4, r1	; 0x04
     e42:	1d 82       	std	Y+5, r1	; 0x05
     e44:	1e 82       	std	Y+6, r1	; 0x06
     e46:	1e c0       	rjmp	.+60     	; 0xe84 <Show_Font57+0xe2>
     e48:	89 81       	ldd	r24, Y+1	; 0x01
     e4a:	9a 81       	ldd	r25, Y+2	; 0x02
     e4c:	fc 01       	movw	r30, r24
     e4e:	80 81       	ld	r24, Z
     e50:	8c 83       	std	Y+4, r24	; 0x04
     e52:	89 81       	ldd	r24, Y+1	; 0x01
     e54:	9a 81       	ldd	r25, Y+2	; 0x02
     e56:	01 96       	adiw	r24, 0x01	; 1
     e58:	9a 83       	std	Y+2, r25	; 0x02
     e5a:	89 83       	std	Y+1, r24	; 0x01
     e5c:	89 81       	ldd	r24, Y+1	; 0x01
     e5e:	9a 81       	ldd	r25, Y+2	; 0x02
     e60:	fc 01       	movw	r30, r24
     e62:	80 81       	ld	r24, Z
     e64:	8d 83       	std	Y+5, r24	; 0x05
     e66:	89 81       	ldd	r24, Y+1	; 0x01
     e68:	9a 81       	ldd	r25, Y+2	; 0x02
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	9a 83       	std	Y+2, r25	; 0x02
     e6e:	89 83       	std	Y+1, r24	; 0x01
     e70:	89 81       	ldd	r24, Y+1	; 0x01
     e72:	9a 81       	ldd	r25, Y+2	; 0x02
     e74:	fc 01       	movw	r30, r24
     e76:	80 81       	ld	r24, Z
     e78:	8e 83       	std	Y+6, r24	; 0x06
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	9a 81       	ldd	r25, Y+2	; 0x02
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	9a 83       	std	Y+2, r25	; 0x02
     e82:	89 83       	std	Y+1, r24	; 0x01
     e84:	8d 85       	ldd	r24, Y+13	; 0x0d
     e86:	9c e1       	ldi	r25, 0x1C	; 28
     e88:	98 0f       	add	r25, r24
     e8a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e8c:	84 5e       	subi	r24, 0xE4	; 228
     e8e:	69 2f       	mov	r22, r25
     e90:	0e 94 15 05 	call	0xa2a	; 0xa2a <Set_Column_Address>
     e94:	8e 85       	ldd	r24, Y+14	; 0x0e
     e96:	89 5f       	subi	r24, 0xF9	; 249
     e98:	68 2f       	mov	r22, r24
     e9a:	8e 85       	ldd	r24, Y+14	; 0x0e
     e9c:	0e 94 2b 05 	call	0xa56	; 0xa56 <Set_Row_Address>
     ea0:	0e 94 41 05 	call	0xa82	; 0xa82 <Set_Write_RAM>
     ea4:	89 85       	ldd	r24, Y+9	; 0x09
     ea6:	88 2f       	mov	r24, r24
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	81 70       	andi	r24, 0x01	; 1
     eac:	99 27       	eor	r25, r25
     eae:	82 95       	swap	r24
     eb0:	92 95       	swap	r25
     eb2:	90 7f       	andi	r25, 0xF0	; 240
     eb4:	98 27       	eor	r25, r24
     eb6:	80 7f       	andi	r24, 0xF0	; 240
     eb8:	98 27       	eor	r25, r24
     eba:	98 2f       	mov	r25, r24
     ebc:	8c 81       	ldd	r24, Y+4	; 0x04
     ebe:	81 70       	andi	r24, 0x01	; 1
     ec0:	89 2b       	or	r24, r25
     ec2:	8a 87       	std	Y+10, r24	; 0x0a
     ec4:	8a 85       	ldd	r24, Y+10	; 0x0a
     ec6:	88 2f       	mov	r24, r24
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	98 2f       	mov	r25, r24
     ed0:	8a 85       	ldd	r24, Y+10	; 0x0a
     ed2:	29 2f       	mov	r18, r25
     ed4:	28 2b       	or	r18, r24
     ed6:	8a 85       	ldd	r24, Y+10	; 0x0a
     ed8:	88 2f       	mov	r24, r24
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	88 0f       	add	r24, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	88 0f       	add	r24, r24
     ee2:	99 1f       	adc	r25, r25
     ee4:	28 2b       	or	r18, r24
     ee6:	8a 85       	ldd	r24, Y+10	; 0x0a
     ee8:	88 2f       	mov	r24, r24
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	88 0f       	add	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	82 2b       	or	r24, r18
     efa:	8a 87       	std	Y+10, r24	; 0x0a
     efc:	8a 85       	ldd	r24, Y+10	; 0x0a
     efe:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     f02:	8d 81       	ldd	r24, Y+5	; 0x05
     f04:	88 2f       	mov	r24, r24
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	81 70       	andi	r24, 0x01	; 1
     f0a:	99 27       	eor	r25, r25
     f0c:	82 95       	swap	r24
     f0e:	92 95       	swap	r25
     f10:	90 7f       	andi	r25, 0xF0	; 240
     f12:	98 27       	eor	r25, r24
     f14:	80 7f       	andi	r24, 0xF0	; 240
     f16:	98 27       	eor	r25, r24
     f18:	98 2f       	mov	r25, r24
     f1a:	8e 81       	ldd	r24, Y+6	; 0x06
     f1c:	81 70       	andi	r24, 0x01	; 1
     f1e:	89 2b       	or	r24, r25
     f20:	8a 87       	std	Y+10, r24	; 0x0a
     f22:	8a 85       	ldd	r24, Y+10	; 0x0a
     f24:	88 2f       	mov	r24, r24
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	88 0f       	add	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	98 2f       	mov	r25, r24
     f2e:	8a 85       	ldd	r24, Y+10	; 0x0a
     f30:	29 2f       	mov	r18, r25
     f32:	28 2b       	or	r18, r24
     f34:	8a 85       	ldd	r24, Y+10	; 0x0a
     f36:	88 2f       	mov	r24, r24
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	88 0f       	add	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	28 2b       	or	r18, r24
     f44:	8a 85       	ldd	r24, Y+10	; 0x0a
     f46:	88 2f       	mov	r24, r24
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	88 0f       	add	r24, r24
     f4c:	99 1f       	adc	r25, r25
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	82 2b       	or	r24, r18
     f58:	8a 87       	std	Y+10, r24	; 0x0a
     f5a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f5c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     f60:	89 85       	ldd	r24, Y+9	; 0x09
     f62:	88 2f       	mov	r24, r24
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	82 70       	andi	r24, 0x02	; 2
     f68:	99 27       	eor	r25, r25
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	88 0f       	add	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	28 2f       	mov	r18, r24
     f78:	8c 81       	ldd	r24, Y+4	; 0x04
     f7a:	88 2f       	mov	r24, r24
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	82 70       	andi	r24, 0x02	; 2
     f80:	99 27       	eor	r25, r25
     f82:	95 95       	asr	r25
     f84:	87 95       	ror	r24
     f86:	82 2b       	or	r24, r18
     f88:	8a 87       	std	Y+10, r24	; 0x0a
     f8a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f8c:	88 2f       	mov	r24, r24
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	98 2f       	mov	r25, r24
     f96:	8a 85       	ldd	r24, Y+10	; 0x0a
     f98:	29 2f       	mov	r18, r25
     f9a:	28 2b       	or	r18, r24
     f9c:	8a 85       	ldd	r24, Y+10	; 0x0a
     f9e:	88 2f       	mov	r24, r24
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	28 2b       	or	r18, r24
     fac:	8a 85       	ldd	r24, Y+10	; 0x0a
     fae:	88 2f       	mov	r24, r24
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	82 2b       	or	r24, r18
     fc0:	8a 87       	std	Y+10, r24	; 0x0a
     fc2:	8a 85       	ldd	r24, Y+10	; 0x0a
     fc4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
     fc8:	8d 81       	ldd	r24, Y+5	; 0x05
     fca:	88 2f       	mov	r24, r24
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	82 70       	andi	r24, 0x02	; 2
     fd0:	99 27       	eor	r25, r25
     fd2:	88 0f       	add	r24, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	88 0f       	add	r24, r24
     fd8:	99 1f       	adc	r25, r25
     fda:	88 0f       	add	r24, r24
     fdc:	99 1f       	adc	r25, r25
     fde:	28 2f       	mov	r18, r24
     fe0:	8e 81       	ldd	r24, Y+6	; 0x06
     fe2:	88 2f       	mov	r24, r24
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	82 70       	andi	r24, 0x02	; 2
     fe8:	99 27       	eor	r25, r25
     fea:	95 95       	asr	r25
     fec:	87 95       	ror	r24
     fee:	82 2b       	or	r24, r18
     ff0:	8a 87       	std	Y+10, r24	; 0x0a
     ff2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ff4:	88 2f       	mov	r24, r24
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	88 0f       	add	r24, r24
     ffa:	99 1f       	adc	r25, r25
     ffc:	98 2f       	mov	r25, r24
     ffe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1000:	29 2f       	mov	r18, r25
    1002:	28 2b       	or	r18, r24
    1004:	8a 85       	ldd	r24, Y+10	; 0x0a
    1006:	88 2f       	mov	r24, r24
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	88 0f       	add	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	88 0f       	add	r24, r24
    1010:	99 1f       	adc	r25, r25
    1012:	28 2b       	or	r18, r24
    1014:	8a 85       	ldd	r24, Y+10	; 0x0a
    1016:	88 2f       	mov	r24, r24
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	88 0f       	add	r24, r24
    1020:	99 1f       	adc	r25, r25
    1022:	88 0f       	add	r24, r24
    1024:	99 1f       	adc	r25, r25
    1026:	82 2b       	or	r24, r18
    1028:	8a 87       	std	Y+10, r24	; 0x0a
    102a:	8a 85       	ldd	r24, Y+10	; 0x0a
    102c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1030:	89 85       	ldd	r24, Y+9	; 0x09
    1032:	88 2f       	mov	r24, r24
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	84 70       	andi	r24, 0x04	; 4
    1038:	99 27       	eor	r25, r25
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	88 0f       	add	r24, r24
    1040:	99 1f       	adc	r25, r25
    1042:	28 2f       	mov	r18, r24
    1044:	8c 81       	ldd	r24, Y+4	; 0x04
    1046:	88 2f       	mov	r24, r24
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	84 70       	andi	r24, 0x04	; 4
    104c:	99 27       	eor	r25, r25
    104e:	95 95       	asr	r25
    1050:	87 95       	ror	r24
    1052:	95 95       	asr	r25
    1054:	87 95       	ror	r24
    1056:	82 2b       	or	r24, r18
    1058:	8a 87       	std	Y+10, r24	; 0x0a
    105a:	8a 85       	ldd	r24, Y+10	; 0x0a
    105c:	88 2f       	mov	r24, r24
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	88 0f       	add	r24, r24
    1062:	99 1f       	adc	r25, r25
    1064:	98 2f       	mov	r25, r24
    1066:	8a 85       	ldd	r24, Y+10	; 0x0a
    1068:	29 2f       	mov	r18, r25
    106a:	28 2b       	or	r18, r24
    106c:	8a 85       	ldd	r24, Y+10	; 0x0a
    106e:	88 2f       	mov	r24, r24
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	88 0f       	add	r24, r24
    1078:	99 1f       	adc	r25, r25
    107a:	28 2b       	or	r18, r24
    107c:	8a 85       	ldd	r24, Y+10	; 0x0a
    107e:	88 2f       	mov	r24, r24
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	88 0f       	add	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	88 0f       	add	r24, r24
    1088:	99 1f       	adc	r25, r25
    108a:	88 0f       	add	r24, r24
    108c:	99 1f       	adc	r25, r25
    108e:	82 2b       	or	r24, r18
    1090:	8a 87       	std	Y+10, r24	; 0x0a
    1092:	8a 85       	ldd	r24, Y+10	; 0x0a
    1094:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1098:	8d 81       	ldd	r24, Y+5	; 0x05
    109a:	88 2f       	mov	r24, r24
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	84 70       	andi	r24, 0x04	; 4
    10a0:	99 27       	eor	r25, r25
    10a2:	88 0f       	add	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	28 2f       	mov	r18, r24
    10ac:	8e 81       	ldd	r24, Y+6	; 0x06
    10ae:	88 2f       	mov	r24, r24
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	84 70       	andi	r24, 0x04	; 4
    10b4:	99 27       	eor	r25, r25
    10b6:	95 95       	asr	r25
    10b8:	87 95       	ror	r24
    10ba:	95 95       	asr	r25
    10bc:	87 95       	ror	r24
    10be:	82 2b       	or	r24, r18
    10c0:	8a 87       	std	Y+10, r24	; 0x0a
    10c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    10c4:	88 2f       	mov	r24, r24
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	88 0f       	add	r24, r24
    10ca:	99 1f       	adc	r25, r25
    10cc:	98 2f       	mov	r25, r24
    10ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    10d0:	29 2f       	mov	r18, r25
    10d2:	28 2b       	or	r18, r24
    10d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    10d6:	88 2f       	mov	r24, r24
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	88 0f       	add	r24, r24
    10dc:	99 1f       	adc	r25, r25
    10de:	88 0f       	add	r24, r24
    10e0:	99 1f       	adc	r25, r25
    10e2:	28 2b       	or	r18, r24
    10e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    10e6:	88 2f       	mov	r24, r24
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	88 0f       	add	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	88 0f       	add	r24, r24
    10f0:	99 1f       	adc	r25, r25
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	82 2b       	or	r24, r18
    10f8:	8a 87       	std	Y+10, r24	; 0x0a
    10fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    10fc:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1100:	89 85       	ldd	r24, Y+9	; 0x09
    1102:	88 2f       	mov	r24, r24
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	88 70       	andi	r24, 0x08	; 8
    1108:	99 27       	eor	r25, r25
    110a:	88 0f       	add	r24, r24
    110c:	99 1f       	adc	r25, r25
    110e:	28 2f       	mov	r18, r24
    1110:	8c 81       	ldd	r24, Y+4	; 0x04
    1112:	88 2f       	mov	r24, r24
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	88 70       	andi	r24, 0x08	; 8
    1118:	99 27       	eor	r25, r25
    111a:	95 95       	asr	r25
    111c:	87 95       	ror	r24
    111e:	95 95       	asr	r25
    1120:	87 95       	ror	r24
    1122:	95 95       	asr	r25
    1124:	87 95       	ror	r24
    1126:	82 2b       	or	r24, r18
    1128:	8a 87       	std	Y+10, r24	; 0x0a
    112a:	8a 85       	ldd	r24, Y+10	; 0x0a
    112c:	88 2f       	mov	r24, r24
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	98 2f       	mov	r25, r24
    1136:	8a 85       	ldd	r24, Y+10	; 0x0a
    1138:	29 2f       	mov	r18, r25
    113a:	28 2b       	or	r18, r24
    113c:	8a 85       	ldd	r24, Y+10	; 0x0a
    113e:	88 2f       	mov	r24, r24
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	88 0f       	add	r24, r24
    1144:	99 1f       	adc	r25, r25
    1146:	88 0f       	add	r24, r24
    1148:	99 1f       	adc	r25, r25
    114a:	28 2b       	or	r18, r24
    114c:	8a 85       	ldd	r24, Y+10	; 0x0a
    114e:	88 2f       	mov	r24, r24
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	88 0f       	add	r24, r24
    1158:	99 1f       	adc	r25, r25
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	82 2b       	or	r24, r18
    1160:	8a 87       	std	Y+10, r24	; 0x0a
    1162:	8a 85       	ldd	r24, Y+10	; 0x0a
    1164:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1168:	8d 81       	ldd	r24, Y+5	; 0x05
    116a:	88 2f       	mov	r24, r24
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	88 70       	andi	r24, 0x08	; 8
    1170:	99 27       	eor	r25, r25
    1172:	88 0f       	add	r24, r24
    1174:	99 1f       	adc	r25, r25
    1176:	28 2f       	mov	r18, r24
    1178:	8e 81       	ldd	r24, Y+6	; 0x06
    117a:	88 2f       	mov	r24, r24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	88 70       	andi	r24, 0x08	; 8
    1180:	99 27       	eor	r25, r25
    1182:	95 95       	asr	r25
    1184:	87 95       	ror	r24
    1186:	95 95       	asr	r25
    1188:	87 95       	ror	r24
    118a:	95 95       	asr	r25
    118c:	87 95       	ror	r24
    118e:	82 2b       	or	r24, r18
    1190:	8a 87       	std	Y+10, r24	; 0x0a
    1192:	8a 85       	ldd	r24, Y+10	; 0x0a
    1194:	88 2f       	mov	r24, r24
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	88 0f       	add	r24, r24
    119a:	99 1f       	adc	r25, r25
    119c:	98 2f       	mov	r25, r24
    119e:	8a 85       	ldd	r24, Y+10	; 0x0a
    11a0:	29 2f       	mov	r18, r25
    11a2:	28 2b       	or	r18, r24
    11a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    11a6:	88 2f       	mov	r24, r24
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	88 0f       	add	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	88 0f       	add	r24, r24
    11b0:	99 1f       	adc	r25, r25
    11b2:	28 2b       	or	r18, r24
    11b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    11b6:	88 2f       	mov	r24, r24
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	88 0f       	add	r24, r24
    11bc:	99 1f       	adc	r25, r25
    11be:	88 0f       	add	r24, r24
    11c0:	99 1f       	adc	r25, r25
    11c2:	88 0f       	add	r24, r24
    11c4:	99 1f       	adc	r25, r25
    11c6:	82 2b       	or	r24, r18
    11c8:	8a 87       	std	Y+10, r24	; 0x0a
    11ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    11cc:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    11d0:	89 85       	ldd	r24, Y+9	; 0x09
    11d2:	88 2f       	mov	r24, r24
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	80 71       	andi	r24, 0x10	; 16
    11d8:	99 27       	eor	r25, r25
    11da:	88 0f       	add	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	88 0f       	add	r24, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	88 0f       	add	r24, r24
    11e4:	99 1f       	adc	r25, r25
    11e6:	28 2f       	mov	r18, r24
    11e8:	8c 81       	ldd	r24, Y+4	; 0x04
    11ea:	88 2f       	mov	r24, r24
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	80 71       	andi	r24, 0x10	; 16
    11f0:	99 27       	eor	r25, r25
    11f2:	95 95       	asr	r25
    11f4:	87 95       	ror	r24
    11f6:	82 2b       	or	r24, r18
    11f8:	8a 87       	std	Y+10, r24	; 0x0a
    11fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    11fc:	98 2f       	mov	r25, r24
    11fe:	96 95       	lsr	r25
    1200:	8a 85       	ldd	r24, Y+10	; 0x0a
    1202:	98 2b       	or	r25, r24
    1204:	8a 85       	ldd	r24, Y+10	; 0x0a
    1206:	86 95       	lsr	r24
    1208:	86 95       	lsr	r24
    120a:	98 2b       	or	r25, r24
    120c:	8a 85       	ldd	r24, Y+10	; 0x0a
    120e:	86 95       	lsr	r24
    1210:	86 95       	lsr	r24
    1212:	86 95       	lsr	r24
    1214:	89 2b       	or	r24, r25
    1216:	8a 87       	std	Y+10, r24	; 0x0a
    1218:	8a 85       	ldd	r24, Y+10	; 0x0a
    121a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    121e:	8d 81       	ldd	r24, Y+5	; 0x05
    1220:	88 2f       	mov	r24, r24
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	80 71       	andi	r24, 0x10	; 16
    1226:	99 27       	eor	r25, r25
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	88 0f       	add	r24, r24
    122e:	99 1f       	adc	r25, r25
    1230:	88 0f       	add	r24, r24
    1232:	99 1f       	adc	r25, r25
    1234:	28 2f       	mov	r18, r24
    1236:	8e 81       	ldd	r24, Y+6	; 0x06
    1238:	88 2f       	mov	r24, r24
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	80 71       	andi	r24, 0x10	; 16
    123e:	99 27       	eor	r25, r25
    1240:	95 95       	asr	r25
    1242:	87 95       	ror	r24
    1244:	82 2b       	or	r24, r18
    1246:	8a 87       	std	Y+10, r24	; 0x0a
    1248:	8a 85       	ldd	r24, Y+10	; 0x0a
    124a:	98 2f       	mov	r25, r24
    124c:	96 95       	lsr	r25
    124e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1250:	98 2b       	or	r25, r24
    1252:	8a 85       	ldd	r24, Y+10	; 0x0a
    1254:	86 95       	lsr	r24
    1256:	86 95       	lsr	r24
    1258:	98 2b       	or	r25, r24
    125a:	8a 85       	ldd	r24, Y+10	; 0x0a
    125c:	86 95       	lsr	r24
    125e:	86 95       	lsr	r24
    1260:	86 95       	lsr	r24
    1262:	89 2b       	or	r24, r25
    1264:	8a 87       	std	Y+10, r24	; 0x0a
    1266:	8a 85       	ldd	r24, Y+10	; 0x0a
    1268:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    126c:	89 85       	ldd	r24, Y+9	; 0x09
    126e:	88 2f       	mov	r24, r24
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	80 72       	andi	r24, 0x20	; 32
    1274:	99 27       	eor	r25, r25
    1276:	88 0f       	add	r24, r24
    1278:	99 1f       	adc	r25, r25
    127a:	88 0f       	add	r24, r24
    127c:	99 1f       	adc	r25, r25
    127e:	28 2f       	mov	r18, r24
    1280:	8c 81       	ldd	r24, Y+4	; 0x04
    1282:	88 2f       	mov	r24, r24
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	80 72       	andi	r24, 0x20	; 32
    1288:	99 27       	eor	r25, r25
    128a:	95 95       	asr	r25
    128c:	87 95       	ror	r24
    128e:	95 95       	asr	r25
    1290:	87 95       	ror	r24
    1292:	82 2b       	or	r24, r18
    1294:	8a 87       	std	Y+10, r24	; 0x0a
    1296:	8a 85       	ldd	r24, Y+10	; 0x0a
    1298:	98 2f       	mov	r25, r24
    129a:	96 95       	lsr	r25
    129c:	8a 85       	ldd	r24, Y+10	; 0x0a
    129e:	98 2b       	or	r25, r24
    12a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    12a2:	86 95       	lsr	r24
    12a4:	86 95       	lsr	r24
    12a6:	98 2b       	or	r25, r24
    12a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    12aa:	86 95       	lsr	r24
    12ac:	86 95       	lsr	r24
    12ae:	86 95       	lsr	r24
    12b0:	89 2b       	or	r24, r25
    12b2:	8a 87       	std	Y+10, r24	; 0x0a
    12b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    12b6:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    12ba:	8d 81       	ldd	r24, Y+5	; 0x05
    12bc:	88 2f       	mov	r24, r24
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	80 72       	andi	r24, 0x20	; 32
    12c2:	99 27       	eor	r25, r25
    12c4:	88 0f       	add	r24, r24
    12c6:	99 1f       	adc	r25, r25
    12c8:	88 0f       	add	r24, r24
    12ca:	99 1f       	adc	r25, r25
    12cc:	28 2f       	mov	r18, r24
    12ce:	8e 81       	ldd	r24, Y+6	; 0x06
    12d0:	88 2f       	mov	r24, r24
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	80 72       	andi	r24, 0x20	; 32
    12d6:	99 27       	eor	r25, r25
    12d8:	95 95       	asr	r25
    12da:	87 95       	ror	r24
    12dc:	95 95       	asr	r25
    12de:	87 95       	ror	r24
    12e0:	82 2b       	or	r24, r18
    12e2:	8a 87       	std	Y+10, r24	; 0x0a
    12e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    12e6:	98 2f       	mov	r25, r24
    12e8:	96 95       	lsr	r25
    12ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    12ec:	98 2b       	or	r25, r24
    12ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    12f0:	86 95       	lsr	r24
    12f2:	86 95       	lsr	r24
    12f4:	98 2b       	or	r25, r24
    12f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    12f8:	86 95       	lsr	r24
    12fa:	86 95       	lsr	r24
    12fc:	86 95       	lsr	r24
    12fe:	89 2b       	or	r24, r25
    1300:	8a 87       	std	Y+10, r24	; 0x0a
    1302:	8a 85       	ldd	r24, Y+10	; 0x0a
    1304:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1308:	89 85       	ldd	r24, Y+9	; 0x09
    130a:	88 2f       	mov	r24, r24
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	80 74       	andi	r24, 0x40	; 64
    1310:	99 27       	eor	r25, r25
    1312:	88 0f       	add	r24, r24
    1314:	99 1f       	adc	r25, r25
    1316:	28 2f       	mov	r18, r24
    1318:	8c 81       	ldd	r24, Y+4	; 0x04
    131a:	88 2f       	mov	r24, r24
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	80 74       	andi	r24, 0x40	; 64
    1320:	99 27       	eor	r25, r25
    1322:	95 95       	asr	r25
    1324:	87 95       	ror	r24
    1326:	95 95       	asr	r25
    1328:	87 95       	ror	r24
    132a:	95 95       	asr	r25
    132c:	87 95       	ror	r24
    132e:	82 2b       	or	r24, r18
    1330:	8a 87       	std	Y+10, r24	; 0x0a
    1332:	8a 85       	ldd	r24, Y+10	; 0x0a
    1334:	98 2f       	mov	r25, r24
    1336:	96 95       	lsr	r25
    1338:	8a 85       	ldd	r24, Y+10	; 0x0a
    133a:	98 2b       	or	r25, r24
    133c:	8a 85       	ldd	r24, Y+10	; 0x0a
    133e:	86 95       	lsr	r24
    1340:	86 95       	lsr	r24
    1342:	98 2b       	or	r25, r24
    1344:	8a 85       	ldd	r24, Y+10	; 0x0a
    1346:	86 95       	lsr	r24
    1348:	86 95       	lsr	r24
    134a:	86 95       	lsr	r24
    134c:	89 2b       	or	r24, r25
    134e:	8a 87       	std	Y+10, r24	; 0x0a
    1350:	8a 85       	ldd	r24, Y+10	; 0x0a
    1352:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1356:	8d 81       	ldd	r24, Y+5	; 0x05
    1358:	88 2f       	mov	r24, r24
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	80 74       	andi	r24, 0x40	; 64
    135e:	99 27       	eor	r25, r25
    1360:	88 0f       	add	r24, r24
    1362:	99 1f       	adc	r25, r25
    1364:	28 2f       	mov	r18, r24
    1366:	8e 81       	ldd	r24, Y+6	; 0x06
    1368:	88 2f       	mov	r24, r24
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	80 74       	andi	r24, 0x40	; 64
    136e:	99 27       	eor	r25, r25
    1370:	95 95       	asr	r25
    1372:	87 95       	ror	r24
    1374:	95 95       	asr	r25
    1376:	87 95       	ror	r24
    1378:	95 95       	asr	r25
    137a:	87 95       	ror	r24
    137c:	82 2b       	or	r24, r18
    137e:	8a 87       	std	Y+10, r24	; 0x0a
    1380:	8a 85       	ldd	r24, Y+10	; 0x0a
    1382:	98 2f       	mov	r25, r24
    1384:	96 95       	lsr	r25
    1386:	8a 85       	ldd	r24, Y+10	; 0x0a
    1388:	98 2b       	or	r25, r24
    138a:	8a 85       	ldd	r24, Y+10	; 0x0a
    138c:	86 95       	lsr	r24
    138e:	86 95       	lsr	r24
    1390:	98 2b       	or	r25, r24
    1392:	8a 85       	ldd	r24, Y+10	; 0x0a
    1394:	86 95       	lsr	r24
    1396:	86 95       	lsr	r24
    1398:	86 95       	lsr	r24
    139a:	89 2b       	or	r24, r25
    139c:	8a 87       	std	Y+10, r24	; 0x0a
    139e:	8a 85       	ldd	r24, Y+10	; 0x0a
    13a0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    13a4:	89 85       	ldd	r24, Y+9	; 0x09
    13a6:	28 2f       	mov	r18, r24
    13a8:	20 78       	andi	r18, 0x80	; 128
    13aa:	8c 81       	ldd	r24, Y+4	; 0x04
    13ac:	88 2f       	mov	r24, r24
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	80 78       	andi	r24, 0x80	; 128
    13b2:	99 27       	eor	r25, r25
    13b4:	95 95       	asr	r25
    13b6:	87 95       	ror	r24
    13b8:	95 95       	asr	r25
    13ba:	87 95       	ror	r24
    13bc:	95 95       	asr	r25
    13be:	87 95       	ror	r24
    13c0:	95 95       	asr	r25
    13c2:	87 95       	ror	r24
    13c4:	82 2b       	or	r24, r18
    13c6:	8a 87       	std	Y+10, r24	; 0x0a
    13c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ca:	98 2f       	mov	r25, r24
    13cc:	96 95       	lsr	r25
    13ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    13d0:	98 2b       	or	r25, r24
    13d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13d4:	86 95       	lsr	r24
    13d6:	86 95       	lsr	r24
    13d8:	98 2b       	or	r25, r24
    13da:	8a 85       	ldd	r24, Y+10	; 0x0a
    13dc:	86 95       	lsr	r24
    13de:	86 95       	lsr	r24
    13e0:	86 95       	lsr	r24
    13e2:	89 2b       	or	r24, r25
    13e4:	8a 87       	std	Y+10, r24	; 0x0a
    13e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    13e8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    13ec:	8d 81       	ldd	r24, Y+5	; 0x05
    13ee:	28 2f       	mov	r18, r24
    13f0:	20 78       	andi	r18, 0x80	; 128
    13f2:	8e 81       	ldd	r24, Y+6	; 0x06
    13f4:	88 2f       	mov	r24, r24
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	80 78       	andi	r24, 0x80	; 128
    13fa:	99 27       	eor	r25, r25
    13fc:	95 95       	asr	r25
    13fe:	87 95       	ror	r24
    1400:	95 95       	asr	r25
    1402:	87 95       	ror	r24
    1404:	95 95       	asr	r25
    1406:	87 95       	ror	r24
    1408:	95 95       	asr	r25
    140a:	87 95       	ror	r24
    140c:	82 2b       	or	r24, r18
    140e:	8a 87       	std	Y+10, r24	; 0x0a
    1410:	8a 85       	ldd	r24, Y+10	; 0x0a
    1412:	98 2f       	mov	r25, r24
    1414:	96 95       	lsr	r25
    1416:	8a 85       	ldd	r24, Y+10	; 0x0a
    1418:	98 2b       	or	r25, r24
    141a:	8a 85       	ldd	r24, Y+10	; 0x0a
    141c:	86 95       	lsr	r24
    141e:	86 95       	lsr	r24
    1420:	98 2b       	or	r25, r24
    1422:	8a 85       	ldd	r24, Y+10	; 0x0a
    1424:	86 95       	lsr	r24
    1426:	86 95       	lsr	r24
    1428:	86 95       	lsr	r24
    142a:	89 2b       	or	r24, r25
    142c:	8a 87       	std	Y+10, r24	; 0x0a
    142e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1430:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1434:	8d 85       	ldd	r24, Y+13	; 0x0d
    1436:	8f 5f       	subi	r24, 0xFF	; 255
    1438:	8d 87       	std	Y+13, r24	; 0x0d
    143a:	8b 81       	ldd	r24, Y+3	; 0x03
    143c:	8f 5f       	subi	r24, 0xFF	; 255
    143e:	8b 83       	std	Y+3, r24	; 0x03
    1440:	8b 81       	ldd	r24, Y+3	; 0x03
    1442:	82 30       	cpi	r24, 0x02	; 2
    1444:	08 f4       	brcc	.+2      	; 0x1448 <__stack+0x349>
    1446:	ef cc       	rjmp	.-1570   	; 0xe26 <Show_Font57+0x84>
    1448:	84 e1       	ldi	r24, 0x14	; 20
    144a:	0e 94 4c 05 	call	0xa98	; 0xa98 <Set_Remap_Format>
    144e:	00 00       	nop
    1450:	2e 96       	adiw	r28, 0x0e	; 14
    1452:	0f b6       	in	r0, 0x3f	; 63
    1454:	f8 94       	cli
    1456:	de bf       	out	0x3e, r29	; 62
    1458:	0f be       	out	0x3f, r0	; 63
    145a:	cd bf       	out	0x3d, r28	; 61
    145c:	df 91       	pop	r29
    145e:	cf 91       	pop	r28
    1460:	08 95       	ret

00001462 <Show_String>:
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
    1466:	cd b7       	in	r28, 0x3d	; 61
    1468:	de b7       	in	r29, 0x3e	; 62
    146a:	27 97       	sbiw	r28, 0x07	; 7
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	8b 83       	std	Y+3, r24	; 0x03
    1478:	7d 83       	std	Y+5, r23	; 0x05
    147a:	6c 83       	std	Y+4, r22	; 0x04
    147c:	4e 83       	std	Y+6, r20	; 0x06
    147e:	2f 83       	std	Y+7, r18	; 0x07
    1480:	8c 81       	ldd	r24, Y+4	; 0x04
    1482:	9d 81       	ldd	r25, Y+5	; 0x05
    1484:	9a 83       	std	Y+2, r25	; 0x02
    1486:	89 83       	std	Y+1, r24	; 0x01
    1488:	2f 81       	ldd	r18, Y+7	; 0x07
    148a:	4e 81       	ldd	r20, Y+6	; 0x06
    148c:	60 e6       	ldi	r22, 0x60	; 96
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	0e 94 d1 06 	call	0xda2	; 0xda2 <Show_Font57>
    1494:	89 81       	ldd	r24, Y+1	; 0x01
    1496:	9a 81       	ldd	r25, Y+2	; 0x02
    1498:	fc 01       	movw	r30, r24
    149a:	80 81       	ld	r24, Z
    149c:	2f 81       	ldd	r18, Y+7	; 0x07
    149e:	4e 81       	ldd	r20, Y+6	; 0x06
    14a0:	68 2f       	mov	r22, r24
    14a2:	8b 81       	ldd	r24, Y+3	; 0x03
    14a4:	0e 94 d1 06 	call	0xda2	; 0xda2 <Show_Font57>
    14a8:	89 81       	ldd	r24, Y+1	; 0x01
    14aa:	9a 81       	ldd	r25, Y+2	; 0x02
    14ac:	01 96       	adiw	r24, 0x01	; 1
    14ae:	9a 83       	std	Y+2, r25	; 0x02
    14b0:	89 83       	std	Y+1, r24	; 0x01
    14b2:	8e 81       	ldd	r24, Y+6	; 0x06
    14b4:	8e 5f       	subi	r24, 0xFE	; 254
    14b6:	8e 83       	std	Y+6, r24	; 0x06
    14b8:	89 81       	ldd	r24, Y+1	; 0x01
    14ba:	9a 81       	ldd	r25, Y+2	; 0x02
    14bc:	fc 01       	movw	r30, r24
    14be:	80 81       	ld	r24, Z
    14c0:	88 23       	and	r24, r24
    14c2:	09 f0       	breq	.+2      	; 0x14c6 <Show_String+0x64>
    14c4:	e7 cf       	rjmp	.-50     	; 0x1494 <Show_String+0x32>
    14c6:	00 00       	nop
    14c8:	00 00       	nop
    14ca:	27 96       	adiw	r28, 0x07	; 7
    14cc:	0f b6       	in	r0, 0x3f	; 63
    14ce:	f8 94       	cli
    14d0:	de bf       	out	0x3e, r29	; 62
    14d2:	0f be       	out	0x3f, r0	; 63
    14d4:	cd bf       	out	0x3d, r28	; 61
    14d6:	df 91       	pop	r29
    14d8:	cf 91       	pop	r28
    14da:	08 95       	ret

000014dc <Set_Gray_Scale_Table>:
    14dc:	cf 93       	push	r28
    14de:	df 93       	push	r29
    14e0:	cd b7       	in	r28, 0x3d	; 61
    14e2:	de b7       	in	r29, 0x3e	; 62
    14e4:	88 eb       	ldi	r24, 0xB8	; 184
    14e6:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
    14ea:	8c e0       	ldi	r24, 0x0C	; 12
    14ec:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    14f0:	88 e1       	ldi	r24, 0x18	; 24
    14f2:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    14f6:	84 e2       	ldi	r24, 0x24	; 36
    14f8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    14fc:	80 e3       	ldi	r24, 0x30	; 48
    14fe:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1502:	8c e3       	ldi	r24, 0x3C	; 60
    1504:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1508:	88 e4       	ldi	r24, 0x48	; 72
    150a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    150e:	84 e5       	ldi	r24, 0x54	; 84
    1510:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1514:	80 e6       	ldi	r24, 0x60	; 96
    1516:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    151a:	8c e6       	ldi	r24, 0x6C	; 108
    151c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1520:	88 e7       	ldi	r24, 0x78	; 120
    1522:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1526:	84 e8       	ldi	r24, 0x84	; 132
    1528:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    152c:	80 e9       	ldi	r24, 0x90	; 144
    152e:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1532:	8c e9       	ldi	r24, 0x9C	; 156
    1534:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1538:	88 ea       	ldi	r24, 0xA8	; 168
    153a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    153e:	84 eb       	ldi	r24, 0xB4	; 180
    1540:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <Write_Data>
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	0e 94 b1 04 	call	0x962	; 0x962 <Write_Command>
    154a:	00 00       	nop
    154c:	df 91       	pop	r29
    154e:	cf 91       	pop	r28
    1550:	08 95       	ret

00001552 <OLED_Init>:
    1552:	cf 93       	push	r28
    1554:	df 93       	push	r29
    1556:	cd b7       	in	r28, 0x3d	; 61
    1558:	de b7       	in	r29, 0x3e	; 62
    155a:	85 e2       	ldi	r24, 0x25	; 37
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	25 e2       	ldi	r18, 0x25	; 37
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	f9 01       	movw	r30, r18
    1564:	20 81       	ld	r18, Z
    1566:	2f 7b       	andi	r18, 0xBF	; 191
    1568:	fc 01       	movw	r30, r24
    156a:	20 83       	st	Z, r18
    156c:	88 ee       	ldi	r24, 0xE8	; 232
    156e:	93 e0       	ldi	r25, 0x03	; 3
    1570:	0e 94 8e 04 	call	0x91c	; 0x91c <Delay>
    1574:	85 e2       	ldi	r24, 0x25	; 37
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	25 e2       	ldi	r18, 0x25	; 37
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	f9 01       	movw	r30, r18
    157e:	20 81       	ld	r18, Z
    1580:	20 64       	ori	r18, 0x40	; 64
    1582:	fc 01       	movw	r30, r24
    1584:	20 83       	st	Z, r18
    1586:	82 e1       	ldi	r24, 0x12	; 18
    1588:	0e 94 94 06 	call	0xd28	; 0xd28 <Set_Command_Lock>
    158c:	80 e0       	ldi	r24, 0x00	; 0
    158e:	0e 94 bf 05 	call	0xb7e	; 0xb7e <Set_Display_On_Off>
    1592:	81 e9       	ldi	r24, 0x91	; 145
    1594:	0e 94 df 05 	call	0xbbe	; 0xbbe <Set_Display_Clock>
    1598:	8f e3       	ldi	r24, 0x3F	; 63
    159a:	0e 94 6e 06 	call	0xcdc	; 0xcdc <Set_Multiplex_Ratio>
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	0e 94 71 05 	call	0xae2	; 0xae2 <Set_Display_Offset>
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	0e 94 60 05 	call	0xac0	; 0xac0 <Set_Start_Line>
    15aa:	84 e1       	ldi	r24, 0x14	; 20
    15ac:	0e 94 4c 05 	call	0xa98	; 0xa98 <Set_Remap_Format>
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	0e 94 08 06 	call	0xc10	; 0xc10 <Set_GPIO>
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	0e 94 ae 05 	call	0xb5c	; 0xb5c <Set_Function_Selection>
    15bc:	6d ef       	ldi	r22, 0xFD	; 253
    15be:	80 ea       	ldi	r24, 0xA0	; 160
    15c0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <Set_Display_Enhancement_A>
    15c4:	8f e7       	ldi	r24, 0x7F	; 127
    15c6:	0e 94 4c 06 	call	0xc98	; 0xc98 <Set_Contrast_Current>
    15ca:	8f e0       	ldi	r24, 0x0F	; 15
    15cc:	0e 94 5d 06 	call	0xcba	; 0xcba <Set_Master_Current>
    15d0:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <Set_Gray_Scale_Table>
    15d4:	82 ee       	ldi	r24, 0xE2	; 226
    15d6:	0e 94 ce 05 	call	0xb9c	; 0xb9c <Set_Phase_Length>
    15da:	80 e2       	ldi	r24, 0x20	; 32
    15dc:	0e 94 7f 06 	call	0xcfe	; 0xcfe <Set_Display_Enhancement_B>
    15e0:	8f e1       	ldi	r24, 0x1F	; 31
    15e2:	0e 94 2a 06 	call	0xc54	; 0xc54 <Set_Precharge_Voltage>
    15e6:	88 e0       	ldi	r24, 0x08	; 8
    15e8:	0e 94 19 06 	call	0xc32	; 0xc32 <Set_Precharge_Period>
    15ec:	87 e0       	ldi	r24, 0x07	; 7
    15ee:	0e 94 3b 06 	call	0xc76	; 0xc76 <Set_VCOMH>
    15f2:	82 e0       	ldi	r24, 0x02	; 2
    15f4:	0e 94 82 05 	call	0xb04	; 0xb04 <Set_Display_Mode>
    15f8:	40 e0       	ldi	r20, 0x00	; 0
    15fa:	60 e0       	ldi	r22, 0x00	; 0
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	0e 94 91 05 	call	0xb22	; 0xb22 <Set_Partial_Display>
    1602:	80 e0       	ldi	r24, 0x00	; 0
    1604:	0e 94 a6 06 	call	0xd4c	; 0xd4c <Fill_RAM>
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	0e 94 bf 05 	call	0xb7e	; 0xb7e <Set_Display_On_Off>
    160e:	00 00       	nop
    1610:	df 91       	pop	r29
    1612:	cf 91       	pop	r28
    1614:	08 95       	ret

00001616 <sprintf>:
    1616:	ae e0       	ldi	r26, 0x0E	; 14
    1618:	b0 e0       	ldi	r27, 0x00	; 0
    161a:	e1 e1       	ldi	r30, 0x11	; 17
    161c:	fb e0       	ldi	r31, 0x0B	; 11
    161e:	0c 94 cc 0d 	jmp	0x1b98	; 0x1b98 <__prologue_saves__+0x1c>
    1622:	0d 89       	ldd	r16, Y+21	; 0x15
    1624:	1e 89       	ldd	r17, Y+22	; 0x16
    1626:	86 e0       	ldi	r24, 0x06	; 6
    1628:	8c 83       	std	Y+4, r24	; 0x04
    162a:	1a 83       	std	Y+2, r17	; 0x02
    162c:	09 83       	std	Y+1, r16	; 0x01
    162e:	8f ef       	ldi	r24, 0xFF	; 255
    1630:	9f e7       	ldi	r25, 0x7F	; 127
    1632:	9e 83       	std	Y+6, r25	; 0x06
    1634:	8d 83       	std	Y+5, r24	; 0x05
    1636:	ae 01       	movw	r20, r28
    1638:	47 5e       	subi	r20, 0xE7	; 231
    163a:	5f 4f       	sbci	r21, 0xFF	; 255
    163c:	6f 89       	ldd	r22, Y+23	; 0x17
    163e:	78 8d       	ldd	r23, Y+24	; 0x18
    1640:	ce 01       	movw	r24, r28
    1642:	01 96       	adiw	r24, 0x01	; 1
    1644:	0e 94 2d 0b 	call	0x165a	; 0x165a <vfprintf>
    1648:	ef 81       	ldd	r30, Y+7	; 0x07
    164a:	f8 85       	ldd	r31, Y+8	; 0x08
    164c:	e0 0f       	add	r30, r16
    164e:	f1 1f       	adc	r31, r17
    1650:	10 82       	st	Z, r1
    1652:	2e 96       	adiw	r28, 0x0e	; 14
    1654:	e4 e0       	ldi	r30, 0x04	; 4
    1656:	0c 94 e8 0d 	jmp	0x1bd0	; 0x1bd0 <__epilogue_restores__+0x1c>

0000165a <vfprintf>:
    165a:	ab e0       	ldi	r26, 0x0B	; 11
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e3 e3       	ldi	r30, 0x33	; 51
    1660:	fb e0       	ldi	r31, 0x0B	; 11
    1662:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__prologue_saves__>
    1666:	6c 01       	movw	r12, r24
    1668:	7b 01       	movw	r14, r22
    166a:	8a 01       	movw	r16, r20
    166c:	fc 01       	movw	r30, r24
    166e:	17 82       	std	Z+7, r1	; 0x07
    1670:	16 82       	std	Z+6, r1	; 0x06
    1672:	83 81       	ldd	r24, Z+3	; 0x03
    1674:	81 ff       	sbrs	r24, 1
    1676:	cc c1       	rjmp	.+920    	; 0x1a10 <vfprintf+0x3b6>
    1678:	ce 01       	movw	r24, r28
    167a:	01 96       	adiw	r24, 0x01	; 1
    167c:	3c 01       	movw	r6, r24
    167e:	f6 01       	movw	r30, r12
    1680:	93 81       	ldd	r25, Z+3	; 0x03
    1682:	f7 01       	movw	r30, r14
    1684:	93 fd       	sbrc	r25, 3
    1686:	85 91       	lpm	r24, Z+
    1688:	93 ff       	sbrs	r25, 3
    168a:	81 91       	ld	r24, Z+
    168c:	7f 01       	movw	r14, r30
    168e:	88 23       	and	r24, r24
    1690:	09 f4       	brne	.+2      	; 0x1694 <vfprintf+0x3a>
    1692:	ba c1       	rjmp	.+884    	; 0x1a08 <vfprintf+0x3ae>
    1694:	85 32       	cpi	r24, 0x25	; 37
    1696:	39 f4       	brne	.+14     	; 0x16a6 <vfprintf+0x4c>
    1698:	93 fd       	sbrc	r25, 3
    169a:	85 91       	lpm	r24, Z+
    169c:	93 ff       	sbrs	r25, 3
    169e:	81 91       	ld	r24, Z+
    16a0:	7f 01       	movw	r14, r30
    16a2:	85 32       	cpi	r24, 0x25	; 37
    16a4:	29 f4       	brne	.+10     	; 0x16b0 <vfprintf+0x56>
    16a6:	b6 01       	movw	r22, r12
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    16ae:	e7 cf       	rjmp	.-50     	; 0x167e <vfprintf+0x24>
    16b0:	91 2c       	mov	r9, r1
    16b2:	21 2c       	mov	r2, r1
    16b4:	31 2c       	mov	r3, r1
    16b6:	ff e1       	ldi	r31, 0x1F	; 31
    16b8:	f3 15       	cp	r31, r3
    16ba:	d8 f0       	brcs	.+54     	; 0x16f2 <vfprintf+0x98>
    16bc:	8b 32       	cpi	r24, 0x2B	; 43
    16be:	79 f0       	breq	.+30     	; 0x16de <vfprintf+0x84>
    16c0:	38 f4       	brcc	.+14     	; 0x16d0 <vfprintf+0x76>
    16c2:	80 32       	cpi	r24, 0x20	; 32
    16c4:	79 f0       	breq	.+30     	; 0x16e4 <vfprintf+0x8a>
    16c6:	83 32       	cpi	r24, 0x23	; 35
    16c8:	a1 f4       	brne	.+40     	; 0x16f2 <vfprintf+0x98>
    16ca:	23 2d       	mov	r18, r3
    16cc:	20 61       	ori	r18, 0x10	; 16
    16ce:	1d c0       	rjmp	.+58     	; 0x170a <vfprintf+0xb0>
    16d0:	8d 32       	cpi	r24, 0x2D	; 45
    16d2:	61 f0       	breq	.+24     	; 0x16ec <vfprintf+0x92>
    16d4:	80 33       	cpi	r24, 0x30	; 48
    16d6:	69 f4       	brne	.+26     	; 0x16f2 <vfprintf+0x98>
    16d8:	23 2d       	mov	r18, r3
    16da:	21 60       	ori	r18, 0x01	; 1
    16dc:	16 c0       	rjmp	.+44     	; 0x170a <vfprintf+0xb0>
    16de:	83 2d       	mov	r24, r3
    16e0:	82 60       	ori	r24, 0x02	; 2
    16e2:	38 2e       	mov	r3, r24
    16e4:	e3 2d       	mov	r30, r3
    16e6:	e4 60       	ori	r30, 0x04	; 4
    16e8:	3e 2e       	mov	r3, r30
    16ea:	2a c0       	rjmp	.+84     	; 0x1740 <vfprintf+0xe6>
    16ec:	f3 2d       	mov	r31, r3
    16ee:	f8 60       	ori	r31, 0x08	; 8
    16f0:	1d c0       	rjmp	.+58     	; 0x172c <vfprintf+0xd2>
    16f2:	37 fc       	sbrc	r3, 7
    16f4:	2d c0       	rjmp	.+90     	; 0x1750 <vfprintf+0xf6>
    16f6:	20 ed       	ldi	r18, 0xD0	; 208
    16f8:	28 0f       	add	r18, r24
    16fa:	2a 30       	cpi	r18, 0x0A	; 10
    16fc:	40 f0       	brcs	.+16     	; 0x170e <vfprintf+0xb4>
    16fe:	8e 32       	cpi	r24, 0x2E	; 46
    1700:	b9 f4       	brne	.+46     	; 0x1730 <vfprintf+0xd6>
    1702:	36 fc       	sbrc	r3, 6
    1704:	81 c1       	rjmp	.+770    	; 0x1a08 <vfprintf+0x3ae>
    1706:	23 2d       	mov	r18, r3
    1708:	20 64       	ori	r18, 0x40	; 64
    170a:	32 2e       	mov	r3, r18
    170c:	19 c0       	rjmp	.+50     	; 0x1740 <vfprintf+0xe6>
    170e:	36 fe       	sbrs	r3, 6
    1710:	06 c0       	rjmp	.+12     	; 0x171e <vfprintf+0xc4>
    1712:	8a e0       	ldi	r24, 0x0A	; 10
    1714:	98 9e       	mul	r9, r24
    1716:	20 0d       	add	r18, r0
    1718:	11 24       	eor	r1, r1
    171a:	92 2e       	mov	r9, r18
    171c:	11 c0       	rjmp	.+34     	; 0x1740 <vfprintf+0xe6>
    171e:	ea e0       	ldi	r30, 0x0A	; 10
    1720:	2e 9e       	mul	r2, r30
    1722:	20 0d       	add	r18, r0
    1724:	11 24       	eor	r1, r1
    1726:	22 2e       	mov	r2, r18
    1728:	f3 2d       	mov	r31, r3
    172a:	f0 62       	ori	r31, 0x20	; 32
    172c:	3f 2e       	mov	r3, r31
    172e:	08 c0       	rjmp	.+16     	; 0x1740 <vfprintf+0xe6>
    1730:	8c 36       	cpi	r24, 0x6C	; 108
    1732:	21 f4       	brne	.+8      	; 0x173c <vfprintf+0xe2>
    1734:	83 2d       	mov	r24, r3
    1736:	80 68       	ori	r24, 0x80	; 128
    1738:	38 2e       	mov	r3, r24
    173a:	02 c0       	rjmp	.+4      	; 0x1740 <vfprintf+0xe6>
    173c:	88 36       	cpi	r24, 0x68	; 104
    173e:	41 f4       	brne	.+16     	; 0x1750 <vfprintf+0xf6>
    1740:	f7 01       	movw	r30, r14
    1742:	93 fd       	sbrc	r25, 3
    1744:	85 91       	lpm	r24, Z+
    1746:	93 ff       	sbrs	r25, 3
    1748:	81 91       	ld	r24, Z+
    174a:	7f 01       	movw	r14, r30
    174c:	81 11       	cpse	r24, r1
    174e:	b3 cf       	rjmp	.-154    	; 0x16b6 <vfprintf+0x5c>
    1750:	98 2f       	mov	r25, r24
    1752:	9f 7d       	andi	r25, 0xDF	; 223
    1754:	95 54       	subi	r25, 0x45	; 69
    1756:	93 30       	cpi	r25, 0x03	; 3
    1758:	28 f4       	brcc	.+10     	; 0x1764 <vfprintf+0x10a>
    175a:	0c 5f       	subi	r16, 0xFC	; 252
    175c:	1f 4f       	sbci	r17, 0xFF	; 255
    175e:	9f e3       	ldi	r25, 0x3F	; 63
    1760:	99 83       	std	Y+1, r25	; 0x01
    1762:	0d c0       	rjmp	.+26     	; 0x177e <vfprintf+0x124>
    1764:	83 36       	cpi	r24, 0x63	; 99
    1766:	31 f0       	breq	.+12     	; 0x1774 <vfprintf+0x11a>
    1768:	83 37       	cpi	r24, 0x73	; 115
    176a:	71 f0       	breq	.+28     	; 0x1788 <vfprintf+0x12e>
    176c:	83 35       	cpi	r24, 0x53	; 83
    176e:	09 f0       	breq	.+2      	; 0x1772 <vfprintf+0x118>
    1770:	59 c0       	rjmp	.+178    	; 0x1824 <vfprintf+0x1ca>
    1772:	21 c0       	rjmp	.+66     	; 0x17b6 <vfprintf+0x15c>
    1774:	f8 01       	movw	r30, r16
    1776:	80 81       	ld	r24, Z
    1778:	89 83       	std	Y+1, r24	; 0x01
    177a:	0e 5f       	subi	r16, 0xFE	; 254
    177c:	1f 4f       	sbci	r17, 0xFF	; 255
    177e:	88 24       	eor	r8, r8
    1780:	83 94       	inc	r8
    1782:	91 2c       	mov	r9, r1
    1784:	53 01       	movw	r10, r6
    1786:	13 c0       	rjmp	.+38     	; 0x17ae <vfprintf+0x154>
    1788:	28 01       	movw	r4, r16
    178a:	f2 e0       	ldi	r31, 0x02	; 2
    178c:	4f 0e       	add	r4, r31
    178e:	51 1c       	adc	r5, r1
    1790:	f8 01       	movw	r30, r16
    1792:	a0 80       	ld	r10, Z
    1794:	b1 80       	ldd	r11, Z+1	; 0x01
    1796:	36 fe       	sbrs	r3, 6
    1798:	03 c0       	rjmp	.+6      	; 0x17a0 <vfprintf+0x146>
    179a:	69 2d       	mov	r22, r9
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <vfprintf+0x14a>
    17a0:	6f ef       	ldi	r22, 0xFF	; 255
    17a2:	7f ef       	ldi	r23, 0xFF	; 255
    17a4:	c5 01       	movw	r24, r10
    17a6:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <strnlen>
    17aa:	4c 01       	movw	r8, r24
    17ac:	82 01       	movw	r16, r4
    17ae:	f3 2d       	mov	r31, r3
    17b0:	ff 77       	andi	r31, 0x7F	; 127
    17b2:	3f 2e       	mov	r3, r31
    17b4:	16 c0       	rjmp	.+44     	; 0x17e2 <vfprintf+0x188>
    17b6:	28 01       	movw	r4, r16
    17b8:	22 e0       	ldi	r18, 0x02	; 2
    17ba:	42 0e       	add	r4, r18
    17bc:	51 1c       	adc	r5, r1
    17be:	f8 01       	movw	r30, r16
    17c0:	a0 80       	ld	r10, Z
    17c2:	b1 80       	ldd	r11, Z+1	; 0x01
    17c4:	36 fe       	sbrs	r3, 6
    17c6:	03 c0       	rjmp	.+6      	; 0x17ce <vfprintf+0x174>
    17c8:	69 2d       	mov	r22, r9
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	02 c0       	rjmp	.+4      	; 0x17d2 <vfprintf+0x178>
    17ce:	6f ef       	ldi	r22, 0xFF	; 255
    17d0:	7f ef       	ldi	r23, 0xFF	; 255
    17d2:	c5 01       	movw	r24, r10
    17d4:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <strnlen_P>
    17d8:	4c 01       	movw	r8, r24
    17da:	f3 2d       	mov	r31, r3
    17dc:	f0 68       	ori	r31, 0x80	; 128
    17de:	3f 2e       	mov	r3, r31
    17e0:	82 01       	movw	r16, r4
    17e2:	33 fc       	sbrc	r3, 3
    17e4:	1b c0       	rjmp	.+54     	; 0x181c <vfprintf+0x1c2>
    17e6:	82 2d       	mov	r24, r2
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	88 16       	cp	r8, r24
    17ec:	99 06       	cpc	r9, r25
    17ee:	b0 f4       	brcc	.+44     	; 0x181c <vfprintf+0x1c2>
    17f0:	b6 01       	movw	r22, r12
    17f2:	80 e2       	ldi	r24, 0x20	; 32
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    17fa:	2a 94       	dec	r2
    17fc:	f4 cf       	rjmp	.-24     	; 0x17e6 <vfprintf+0x18c>
    17fe:	f5 01       	movw	r30, r10
    1800:	37 fc       	sbrc	r3, 7
    1802:	85 91       	lpm	r24, Z+
    1804:	37 fe       	sbrs	r3, 7
    1806:	81 91       	ld	r24, Z+
    1808:	5f 01       	movw	r10, r30
    180a:	b6 01       	movw	r22, r12
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    1812:	21 10       	cpse	r2, r1
    1814:	2a 94       	dec	r2
    1816:	21 e0       	ldi	r18, 0x01	; 1
    1818:	82 1a       	sub	r8, r18
    181a:	91 08       	sbc	r9, r1
    181c:	81 14       	cp	r8, r1
    181e:	91 04       	cpc	r9, r1
    1820:	71 f7       	brne	.-36     	; 0x17fe <vfprintf+0x1a4>
    1822:	e8 c0       	rjmp	.+464    	; 0x19f4 <vfprintf+0x39a>
    1824:	84 36       	cpi	r24, 0x64	; 100
    1826:	11 f0       	breq	.+4      	; 0x182c <vfprintf+0x1d2>
    1828:	89 36       	cpi	r24, 0x69	; 105
    182a:	41 f5       	brne	.+80     	; 0x187c <vfprintf+0x222>
    182c:	f8 01       	movw	r30, r16
    182e:	37 fe       	sbrs	r3, 7
    1830:	07 c0       	rjmp	.+14     	; 0x1840 <vfprintf+0x1e6>
    1832:	60 81       	ld	r22, Z
    1834:	71 81       	ldd	r23, Z+1	; 0x01
    1836:	82 81       	ldd	r24, Z+2	; 0x02
    1838:	93 81       	ldd	r25, Z+3	; 0x03
    183a:	0c 5f       	subi	r16, 0xFC	; 252
    183c:	1f 4f       	sbci	r17, 0xFF	; 255
    183e:	08 c0       	rjmp	.+16     	; 0x1850 <vfprintf+0x1f6>
    1840:	60 81       	ld	r22, Z
    1842:	71 81       	ldd	r23, Z+1	; 0x01
    1844:	07 2e       	mov	r0, r23
    1846:	00 0c       	add	r0, r0
    1848:	88 0b       	sbc	r24, r24
    184a:	99 0b       	sbc	r25, r25
    184c:	0e 5f       	subi	r16, 0xFE	; 254
    184e:	1f 4f       	sbci	r17, 0xFF	; 255
    1850:	f3 2d       	mov	r31, r3
    1852:	ff 76       	andi	r31, 0x6F	; 111
    1854:	3f 2e       	mov	r3, r31
    1856:	97 ff       	sbrs	r25, 7
    1858:	09 c0       	rjmp	.+18     	; 0x186c <vfprintf+0x212>
    185a:	90 95       	com	r25
    185c:	80 95       	com	r24
    185e:	70 95       	com	r23
    1860:	61 95       	neg	r22
    1862:	7f 4f       	sbci	r23, 0xFF	; 255
    1864:	8f 4f       	sbci	r24, 0xFF	; 255
    1866:	9f 4f       	sbci	r25, 0xFF	; 255
    1868:	f0 68       	ori	r31, 0x80	; 128
    186a:	3f 2e       	mov	r3, r31
    186c:	2a e0       	ldi	r18, 0x0A	; 10
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	a3 01       	movw	r20, r6
    1872:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__ultoa_invert>
    1876:	88 2e       	mov	r8, r24
    1878:	86 18       	sub	r8, r6
    187a:	45 c0       	rjmp	.+138    	; 0x1906 <vfprintf+0x2ac>
    187c:	85 37       	cpi	r24, 0x75	; 117
    187e:	31 f4       	brne	.+12     	; 0x188c <vfprintf+0x232>
    1880:	23 2d       	mov	r18, r3
    1882:	2f 7e       	andi	r18, 0xEF	; 239
    1884:	b2 2e       	mov	r11, r18
    1886:	2a e0       	ldi	r18, 0x0A	; 10
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	25 c0       	rjmp	.+74     	; 0x18d6 <vfprintf+0x27c>
    188c:	93 2d       	mov	r25, r3
    188e:	99 7f       	andi	r25, 0xF9	; 249
    1890:	b9 2e       	mov	r11, r25
    1892:	8f 36       	cpi	r24, 0x6F	; 111
    1894:	c1 f0       	breq	.+48     	; 0x18c6 <vfprintf+0x26c>
    1896:	18 f4       	brcc	.+6      	; 0x189e <vfprintf+0x244>
    1898:	88 35       	cpi	r24, 0x58	; 88
    189a:	79 f0       	breq	.+30     	; 0x18ba <vfprintf+0x260>
    189c:	b5 c0       	rjmp	.+362    	; 0x1a08 <vfprintf+0x3ae>
    189e:	80 37       	cpi	r24, 0x70	; 112
    18a0:	19 f0       	breq	.+6      	; 0x18a8 <vfprintf+0x24e>
    18a2:	88 37       	cpi	r24, 0x78	; 120
    18a4:	21 f0       	breq	.+8      	; 0x18ae <vfprintf+0x254>
    18a6:	b0 c0       	rjmp	.+352    	; 0x1a08 <vfprintf+0x3ae>
    18a8:	e9 2f       	mov	r30, r25
    18aa:	e0 61       	ori	r30, 0x10	; 16
    18ac:	be 2e       	mov	r11, r30
    18ae:	b4 fe       	sbrs	r11, 4
    18b0:	0d c0       	rjmp	.+26     	; 0x18cc <vfprintf+0x272>
    18b2:	fb 2d       	mov	r31, r11
    18b4:	f4 60       	ori	r31, 0x04	; 4
    18b6:	bf 2e       	mov	r11, r31
    18b8:	09 c0       	rjmp	.+18     	; 0x18cc <vfprintf+0x272>
    18ba:	34 fe       	sbrs	r3, 4
    18bc:	0a c0       	rjmp	.+20     	; 0x18d2 <vfprintf+0x278>
    18be:	29 2f       	mov	r18, r25
    18c0:	26 60       	ori	r18, 0x06	; 6
    18c2:	b2 2e       	mov	r11, r18
    18c4:	06 c0       	rjmp	.+12     	; 0x18d2 <vfprintf+0x278>
    18c6:	28 e0       	ldi	r18, 0x08	; 8
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	05 c0       	rjmp	.+10     	; 0x18d6 <vfprintf+0x27c>
    18cc:	20 e1       	ldi	r18, 0x10	; 16
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	02 c0       	rjmp	.+4      	; 0x18d6 <vfprintf+0x27c>
    18d2:	20 e1       	ldi	r18, 0x10	; 16
    18d4:	32 e0       	ldi	r19, 0x02	; 2
    18d6:	f8 01       	movw	r30, r16
    18d8:	b7 fe       	sbrs	r11, 7
    18da:	07 c0       	rjmp	.+14     	; 0x18ea <vfprintf+0x290>
    18dc:	60 81       	ld	r22, Z
    18de:	71 81       	ldd	r23, Z+1	; 0x01
    18e0:	82 81       	ldd	r24, Z+2	; 0x02
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	0c 5f       	subi	r16, 0xFC	; 252
    18e6:	1f 4f       	sbci	r17, 0xFF	; 255
    18e8:	06 c0       	rjmp	.+12     	; 0x18f6 <vfprintf+0x29c>
    18ea:	60 81       	ld	r22, Z
    18ec:	71 81       	ldd	r23, Z+1	; 0x01
    18ee:	80 e0       	ldi	r24, 0x00	; 0
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 5f       	subi	r16, 0xFE	; 254
    18f4:	1f 4f       	sbci	r17, 0xFF	; 255
    18f6:	a3 01       	movw	r20, r6
    18f8:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <__ultoa_invert>
    18fc:	88 2e       	mov	r8, r24
    18fe:	86 18       	sub	r8, r6
    1900:	fb 2d       	mov	r31, r11
    1902:	ff 77       	andi	r31, 0x7F	; 127
    1904:	3f 2e       	mov	r3, r31
    1906:	36 fe       	sbrs	r3, 6
    1908:	0d c0       	rjmp	.+26     	; 0x1924 <vfprintf+0x2ca>
    190a:	23 2d       	mov	r18, r3
    190c:	2e 7f       	andi	r18, 0xFE	; 254
    190e:	a2 2e       	mov	r10, r18
    1910:	89 14       	cp	r8, r9
    1912:	58 f4       	brcc	.+22     	; 0x192a <vfprintf+0x2d0>
    1914:	34 fe       	sbrs	r3, 4
    1916:	0b c0       	rjmp	.+22     	; 0x192e <vfprintf+0x2d4>
    1918:	32 fc       	sbrc	r3, 2
    191a:	09 c0       	rjmp	.+18     	; 0x192e <vfprintf+0x2d4>
    191c:	83 2d       	mov	r24, r3
    191e:	8e 7e       	andi	r24, 0xEE	; 238
    1920:	a8 2e       	mov	r10, r24
    1922:	05 c0       	rjmp	.+10     	; 0x192e <vfprintf+0x2d4>
    1924:	b8 2c       	mov	r11, r8
    1926:	a3 2c       	mov	r10, r3
    1928:	03 c0       	rjmp	.+6      	; 0x1930 <vfprintf+0x2d6>
    192a:	b8 2c       	mov	r11, r8
    192c:	01 c0       	rjmp	.+2      	; 0x1930 <vfprintf+0x2d6>
    192e:	b9 2c       	mov	r11, r9
    1930:	a4 fe       	sbrs	r10, 4
    1932:	0f c0       	rjmp	.+30     	; 0x1952 <vfprintf+0x2f8>
    1934:	fe 01       	movw	r30, r28
    1936:	e8 0d       	add	r30, r8
    1938:	f1 1d       	adc	r31, r1
    193a:	80 81       	ld	r24, Z
    193c:	80 33       	cpi	r24, 0x30	; 48
    193e:	21 f4       	brne	.+8      	; 0x1948 <vfprintf+0x2ee>
    1940:	9a 2d       	mov	r25, r10
    1942:	99 7e       	andi	r25, 0xE9	; 233
    1944:	a9 2e       	mov	r10, r25
    1946:	09 c0       	rjmp	.+18     	; 0x195a <vfprintf+0x300>
    1948:	a2 fe       	sbrs	r10, 2
    194a:	06 c0       	rjmp	.+12     	; 0x1958 <vfprintf+0x2fe>
    194c:	b3 94       	inc	r11
    194e:	b3 94       	inc	r11
    1950:	04 c0       	rjmp	.+8      	; 0x195a <vfprintf+0x300>
    1952:	8a 2d       	mov	r24, r10
    1954:	86 78       	andi	r24, 0x86	; 134
    1956:	09 f0       	breq	.+2      	; 0x195a <vfprintf+0x300>
    1958:	b3 94       	inc	r11
    195a:	a3 fc       	sbrc	r10, 3
    195c:	11 c0       	rjmp	.+34     	; 0x1980 <vfprintf+0x326>
    195e:	a0 fe       	sbrs	r10, 0
    1960:	06 c0       	rjmp	.+12     	; 0x196e <vfprintf+0x314>
    1962:	b2 14       	cp	r11, r2
    1964:	88 f4       	brcc	.+34     	; 0x1988 <vfprintf+0x32e>
    1966:	28 0c       	add	r2, r8
    1968:	92 2c       	mov	r9, r2
    196a:	9b 18       	sub	r9, r11
    196c:	0e c0       	rjmp	.+28     	; 0x198a <vfprintf+0x330>
    196e:	b2 14       	cp	r11, r2
    1970:	60 f4       	brcc	.+24     	; 0x198a <vfprintf+0x330>
    1972:	b6 01       	movw	r22, r12
    1974:	80 e2       	ldi	r24, 0x20	; 32
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    197c:	b3 94       	inc	r11
    197e:	f7 cf       	rjmp	.-18     	; 0x196e <vfprintf+0x314>
    1980:	b2 14       	cp	r11, r2
    1982:	18 f4       	brcc	.+6      	; 0x198a <vfprintf+0x330>
    1984:	2b 18       	sub	r2, r11
    1986:	02 c0       	rjmp	.+4      	; 0x198c <vfprintf+0x332>
    1988:	98 2c       	mov	r9, r8
    198a:	21 2c       	mov	r2, r1
    198c:	a4 fe       	sbrs	r10, 4
    198e:	10 c0       	rjmp	.+32     	; 0x19b0 <vfprintf+0x356>
    1990:	b6 01       	movw	r22, r12
    1992:	80 e3       	ldi	r24, 0x30	; 48
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    199a:	a2 fe       	sbrs	r10, 2
    199c:	17 c0       	rjmp	.+46     	; 0x19cc <vfprintf+0x372>
    199e:	a1 fc       	sbrc	r10, 1
    19a0:	03 c0       	rjmp	.+6      	; 0x19a8 <vfprintf+0x34e>
    19a2:	88 e7       	ldi	r24, 0x78	; 120
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	02 c0       	rjmp	.+4      	; 0x19ac <vfprintf+0x352>
    19a8:	88 e5       	ldi	r24, 0x58	; 88
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	b6 01       	movw	r22, r12
    19ae:	0c c0       	rjmp	.+24     	; 0x19c8 <vfprintf+0x36e>
    19b0:	8a 2d       	mov	r24, r10
    19b2:	86 78       	andi	r24, 0x86	; 134
    19b4:	59 f0       	breq	.+22     	; 0x19cc <vfprintf+0x372>
    19b6:	a1 fe       	sbrs	r10, 1
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <vfprintf+0x364>
    19ba:	8b e2       	ldi	r24, 0x2B	; 43
    19bc:	01 c0       	rjmp	.+2      	; 0x19c0 <vfprintf+0x366>
    19be:	80 e2       	ldi	r24, 0x20	; 32
    19c0:	a7 fc       	sbrc	r10, 7
    19c2:	8d e2       	ldi	r24, 0x2D	; 45
    19c4:	b6 01       	movw	r22, r12
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    19cc:	89 14       	cp	r8, r9
    19ce:	38 f4       	brcc	.+14     	; 0x19de <vfprintf+0x384>
    19d0:	b6 01       	movw	r22, r12
    19d2:	80 e3       	ldi	r24, 0x30	; 48
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    19da:	9a 94       	dec	r9
    19dc:	f7 cf       	rjmp	.-18     	; 0x19cc <vfprintf+0x372>
    19de:	8a 94       	dec	r8
    19e0:	f3 01       	movw	r30, r6
    19e2:	e8 0d       	add	r30, r8
    19e4:	f1 1d       	adc	r31, r1
    19e6:	80 81       	ld	r24, Z
    19e8:	b6 01       	movw	r22, r12
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    19f0:	81 10       	cpse	r8, r1
    19f2:	f5 cf       	rjmp	.-22     	; 0x19de <vfprintf+0x384>
    19f4:	22 20       	and	r2, r2
    19f6:	09 f4       	brne	.+2      	; 0x19fa <vfprintf+0x3a0>
    19f8:	42 ce       	rjmp	.-892    	; 0x167e <vfprintf+0x24>
    19fa:	b6 01       	movw	r22, r12
    19fc:	80 e2       	ldi	r24, 0x20	; 32
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <fputc>
    1a04:	2a 94       	dec	r2
    1a06:	f6 cf       	rjmp	.-20     	; 0x19f4 <vfprintf+0x39a>
    1a08:	f6 01       	movw	r30, r12
    1a0a:	86 81       	ldd	r24, Z+6	; 0x06
    1a0c:	97 81       	ldd	r25, Z+7	; 0x07
    1a0e:	02 c0       	rjmp	.+4      	; 0x1a14 <vfprintf+0x3ba>
    1a10:	8f ef       	ldi	r24, 0xFF	; 255
    1a12:	9f ef       	ldi	r25, 0xFF	; 255
    1a14:	2b 96       	adiw	r28, 0x0b	; 11
    1a16:	e2 e1       	ldi	r30, 0x12	; 18
    1a18:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__epilogue_restores__>

00001a1c <strnlen_P>:
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	05 90       	lpm	r0, Z+
    1a20:	61 50       	subi	r22, 0x01	; 1
    1a22:	70 40       	sbci	r23, 0x00	; 0
    1a24:	01 10       	cpse	r0, r1
    1a26:	d8 f7       	brcc	.-10     	; 0x1a1e <strnlen_P+0x2>
    1a28:	80 95       	com	r24
    1a2a:	90 95       	com	r25
    1a2c:	8e 0f       	add	r24, r30
    1a2e:	9f 1f       	adc	r25, r31
    1a30:	08 95       	ret

00001a32 <strnlen>:
    1a32:	fc 01       	movw	r30, r24
    1a34:	61 50       	subi	r22, 0x01	; 1
    1a36:	70 40       	sbci	r23, 0x00	; 0
    1a38:	01 90       	ld	r0, Z+
    1a3a:	01 10       	cpse	r0, r1
    1a3c:	d8 f7       	brcc	.-10     	; 0x1a34 <strnlen+0x2>
    1a3e:	80 95       	com	r24
    1a40:	90 95       	com	r25
    1a42:	8e 0f       	add	r24, r30
    1a44:	9f 1f       	adc	r25, r31
    1a46:	08 95       	ret

00001a48 <fputc>:
    1a48:	0f 93       	push	r16
    1a4a:	1f 93       	push	r17
    1a4c:	cf 93       	push	r28
    1a4e:	df 93       	push	r29
    1a50:	fb 01       	movw	r30, r22
    1a52:	23 81       	ldd	r18, Z+3	; 0x03
    1a54:	21 fd       	sbrc	r18, 1
    1a56:	03 c0       	rjmp	.+6      	; 0x1a5e <fputc+0x16>
    1a58:	8f ef       	ldi	r24, 0xFF	; 255
    1a5a:	9f ef       	ldi	r25, 0xFF	; 255
    1a5c:	2c c0       	rjmp	.+88     	; 0x1ab6 <fputc+0x6e>
    1a5e:	22 ff       	sbrs	r18, 2
    1a60:	16 c0       	rjmp	.+44     	; 0x1a8e <fputc+0x46>
    1a62:	46 81       	ldd	r20, Z+6	; 0x06
    1a64:	57 81       	ldd	r21, Z+7	; 0x07
    1a66:	24 81       	ldd	r18, Z+4	; 0x04
    1a68:	35 81       	ldd	r19, Z+5	; 0x05
    1a6a:	42 17       	cp	r20, r18
    1a6c:	53 07       	cpc	r21, r19
    1a6e:	44 f4       	brge	.+16     	; 0x1a80 <fputc+0x38>
    1a70:	a0 81       	ld	r26, Z
    1a72:	b1 81       	ldd	r27, Z+1	; 0x01
    1a74:	9d 01       	movw	r18, r26
    1a76:	2f 5f       	subi	r18, 0xFF	; 255
    1a78:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7a:	31 83       	std	Z+1, r19	; 0x01
    1a7c:	20 83       	st	Z, r18
    1a7e:	8c 93       	st	X, r24
    1a80:	26 81       	ldd	r18, Z+6	; 0x06
    1a82:	37 81       	ldd	r19, Z+7	; 0x07
    1a84:	2f 5f       	subi	r18, 0xFF	; 255
    1a86:	3f 4f       	sbci	r19, 0xFF	; 255
    1a88:	37 83       	std	Z+7, r19	; 0x07
    1a8a:	26 83       	std	Z+6, r18	; 0x06
    1a8c:	14 c0       	rjmp	.+40     	; 0x1ab6 <fputc+0x6e>
    1a8e:	8b 01       	movw	r16, r22
    1a90:	ec 01       	movw	r28, r24
    1a92:	fb 01       	movw	r30, r22
    1a94:	00 84       	ldd	r0, Z+8	; 0x08
    1a96:	f1 85       	ldd	r31, Z+9	; 0x09
    1a98:	e0 2d       	mov	r30, r0
    1a9a:	09 95       	icall
    1a9c:	89 2b       	or	r24, r25
    1a9e:	e1 f6       	brne	.-72     	; 0x1a58 <fputc+0x10>
    1aa0:	d8 01       	movw	r26, r16
    1aa2:	16 96       	adiw	r26, 0x06	; 6
    1aa4:	8d 91       	ld	r24, X+
    1aa6:	9c 91       	ld	r25, X
    1aa8:	17 97       	sbiw	r26, 0x07	; 7
    1aaa:	01 96       	adiw	r24, 0x01	; 1
    1aac:	17 96       	adiw	r26, 0x07	; 7
    1aae:	9c 93       	st	X, r25
    1ab0:	8e 93       	st	-X, r24
    1ab2:	16 97       	sbiw	r26, 0x06	; 6
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	df 91       	pop	r29
    1ab8:	cf 91       	pop	r28
    1aba:	1f 91       	pop	r17
    1abc:	0f 91       	pop	r16
    1abe:	08 95       	ret

00001ac0 <__ultoa_invert>:
    1ac0:	fa 01       	movw	r30, r20
    1ac2:	aa 27       	eor	r26, r26
    1ac4:	28 30       	cpi	r18, 0x08	; 8
    1ac6:	51 f1       	breq	.+84     	; 0x1b1c <__ultoa_invert+0x5c>
    1ac8:	20 31       	cpi	r18, 0x10	; 16
    1aca:	81 f1       	breq	.+96     	; 0x1b2c <__ultoa_invert+0x6c>
    1acc:	e8 94       	clt
    1ace:	6f 93       	push	r22
    1ad0:	6e 7f       	andi	r22, 0xFE	; 254
    1ad2:	6e 5f       	subi	r22, 0xFE	; 254
    1ad4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ad8:	9f 4f       	sbci	r25, 0xFF	; 255
    1ada:	af 4f       	sbci	r26, 0xFF	; 255
    1adc:	b1 e0       	ldi	r27, 0x01	; 1
    1ade:	3e d0       	rcall	.+124    	; 0x1b5c <__ultoa_invert+0x9c>
    1ae0:	b4 e0       	ldi	r27, 0x04	; 4
    1ae2:	3c d0       	rcall	.+120    	; 0x1b5c <__ultoa_invert+0x9c>
    1ae4:	67 0f       	add	r22, r23
    1ae6:	78 1f       	adc	r23, r24
    1ae8:	89 1f       	adc	r24, r25
    1aea:	9a 1f       	adc	r25, r26
    1aec:	a1 1d       	adc	r26, r1
    1aee:	68 0f       	add	r22, r24
    1af0:	79 1f       	adc	r23, r25
    1af2:	8a 1f       	adc	r24, r26
    1af4:	91 1d       	adc	r25, r1
    1af6:	a1 1d       	adc	r26, r1
    1af8:	6a 0f       	add	r22, r26
    1afa:	71 1d       	adc	r23, r1
    1afc:	81 1d       	adc	r24, r1
    1afe:	91 1d       	adc	r25, r1
    1b00:	a1 1d       	adc	r26, r1
    1b02:	20 d0       	rcall	.+64     	; 0x1b44 <__ultoa_invert+0x84>
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <__ultoa_invert+0x48>
    1b06:	68 94       	set
    1b08:	3f 91       	pop	r19
    1b0a:	2a e0       	ldi	r18, 0x0A	; 10
    1b0c:	26 9f       	mul	r18, r22
    1b0e:	11 24       	eor	r1, r1
    1b10:	30 19       	sub	r19, r0
    1b12:	30 5d       	subi	r19, 0xD0	; 208
    1b14:	31 93       	st	Z+, r19
    1b16:	de f6       	brtc	.-74     	; 0x1ace <__ultoa_invert+0xe>
    1b18:	cf 01       	movw	r24, r30
    1b1a:	08 95       	ret
    1b1c:	46 2f       	mov	r20, r22
    1b1e:	47 70       	andi	r20, 0x07	; 7
    1b20:	40 5d       	subi	r20, 0xD0	; 208
    1b22:	41 93       	st	Z+, r20
    1b24:	b3 e0       	ldi	r27, 0x03	; 3
    1b26:	0f d0       	rcall	.+30     	; 0x1b46 <__ultoa_invert+0x86>
    1b28:	c9 f7       	brne	.-14     	; 0x1b1c <__ultoa_invert+0x5c>
    1b2a:	f6 cf       	rjmp	.-20     	; 0x1b18 <__ultoa_invert+0x58>
    1b2c:	46 2f       	mov	r20, r22
    1b2e:	4f 70       	andi	r20, 0x0F	; 15
    1b30:	40 5d       	subi	r20, 0xD0	; 208
    1b32:	4a 33       	cpi	r20, 0x3A	; 58
    1b34:	18 f0       	brcs	.+6      	; 0x1b3c <__ultoa_invert+0x7c>
    1b36:	49 5d       	subi	r20, 0xD9	; 217
    1b38:	31 fd       	sbrc	r19, 1
    1b3a:	40 52       	subi	r20, 0x20	; 32
    1b3c:	41 93       	st	Z+, r20
    1b3e:	02 d0       	rcall	.+4      	; 0x1b44 <__ultoa_invert+0x84>
    1b40:	a9 f7       	brne	.-22     	; 0x1b2c <__ultoa_invert+0x6c>
    1b42:	ea cf       	rjmp	.-44     	; 0x1b18 <__ultoa_invert+0x58>
    1b44:	b4 e0       	ldi	r27, 0x04	; 4
    1b46:	a6 95       	lsr	r26
    1b48:	97 95       	ror	r25
    1b4a:	87 95       	ror	r24
    1b4c:	77 95       	ror	r23
    1b4e:	67 95       	ror	r22
    1b50:	ba 95       	dec	r27
    1b52:	c9 f7       	brne	.-14     	; 0x1b46 <__ultoa_invert+0x86>
    1b54:	00 97       	sbiw	r24, 0x00	; 0
    1b56:	61 05       	cpc	r22, r1
    1b58:	71 05       	cpc	r23, r1
    1b5a:	08 95       	ret
    1b5c:	9b 01       	movw	r18, r22
    1b5e:	ac 01       	movw	r20, r24
    1b60:	0a 2e       	mov	r0, r26
    1b62:	06 94       	lsr	r0
    1b64:	57 95       	ror	r21
    1b66:	47 95       	ror	r20
    1b68:	37 95       	ror	r19
    1b6a:	27 95       	ror	r18
    1b6c:	ba 95       	dec	r27
    1b6e:	c9 f7       	brne	.-14     	; 0x1b62 <__ultoa_invert+0xa2>
    1b70:	62 0f       	add	r22, r18
    1b72:	73 1f       	adc	r23, r19
    1b74:	84 1f       	adc	r24, r20
    1b76:	95 1f       	adc	r25, r21
    1b78:	a0 1d       	adc	r26, r0
    1b7a:	08 95       	ret

00001b7c <__prologue_saves__>:
    1b7c:	2f 92       	push	r2
    1b7e:	3f 92       	push	r3
    1b80:	4f 92       	push	r4
    1b82:	5f 92       	push	r5
    1b84:	6f 92       	push	r6
    1b86:	7f 92       	push	r7
    1b88:	8f 92       	push	r8
    1b8a:	9f 92       	push	r9
    1b8c:	af 92       	push	r10
    1b8e:	bf 92       	push	r11
    1b90:	cf 92       	push	r12
    1b92:	df 92       	push	r13
    1b94:	ef 92       	push	r14
    1b96:	ff 92       	push	r15
    1b98:	0f 93       	push	r16
    1b9a:	1f 93       	push	r17
    1b9c:	cf 93       	push	r28
    1b9e:	df 93       	push	r29
    1ba0:	cd b7       	in	r28, 0x3d	; 61
    1ba2:	de b7       	in	r29, 0x3e	; 62
    1ba4:	ca 1b       	sub	r28, r26
    1ba6:	db 0b       	sbc	r29, r27
    1ba8:	0f b6       	in	r0, 0x3f	; 63
    1baa:	f8 94       	cli
    1bac:	de bf       	out	0x3e, r29	; 62
    1bae:	0f be       	out	0x3f, r0	; 63
    1bb0:	cd bf       	out	0x3d, r28	; 61
    1bb2:	09 94       	ijmp

00001bb4 <__epilogue_restores__>:
    1bb4:	2a 88       	ldd	r2, Y+18	; 0x12
    1bb6:	39 88       	ldd	r3, Y+17	; 0x11
    1bb8:	48 88       	ldd	r4, Y+16	; 0x10
    1bba:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bbc:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bbe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bc0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bc2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bc4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bc6:	b9 84       	ldd	r11, Y+9	; 0x09
    1bc8:	c8 84       	ldd	r12, Y+8	; 0x08
    1bca:	df 80       	ldd	r13, Y+7	; 0x07
    1bcc:	ee 80       	ldd	r14, Y+6	; 0x06
    1bce:	fd 80       	ldd	r15, Y+5	; 0x05
    1bd0:	0c 81       	ldd	r16, Y+4	; 0x04
    1bd2:	1b 81       	ldd	r17, Y+3	; 0x03
    1bd4:	aa 81       	ldd	r26, Y+2	; 0x02
    1bd6:	b9 81       	ldd	r27, Y+1	; 0x01
    1bd8:	ce 0f       	add	r28, r30
    1bda:	d1 1d       	adc	r29, r1
    1bdc:	0f b6       	in	r0, 0x3f	; 63
    1bde:	f8 94       	cli
    1be0:	de bf       	out	0x3e, r29	; 62
    1be2:	0f be       	out	0x3f, r0	; 63
    1be4:	cd bf       	out	0x3d, r28	; 61
    1be6:	ed 01       	movw	r28, r26
    1be8:	08 95       	ret

00001bea <_exit>:
    1bea:	f8 94       	cli

00001bec <__stop_program>:
    1bec:	ff cf       	rjmp	.-2      	; 0x1bec <__stop_program>
