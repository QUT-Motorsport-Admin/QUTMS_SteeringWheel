
oled_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000073c  00800100  00001f48  00001fdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  0080083c  0080083c  00002718  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  000027b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002530  00000000  00000000  000029ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc2  00000000  00000000  00004f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001bfc  00000000  00000000  00005bde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000980  00000000  00000000  000077dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000da6  00000000  00000000  0000815c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014a9  00000000  00000000  00008f02  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000a3ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_10>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__vector_18>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	18 e0       	ldi	r17, 0x08	; 8
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e8 e4       	ldi	r30, 0x48	; 72
      90:	ff e1       	ldi	r31, 0x1F	; 31
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ac 33       	cpi	r26, 0x3C	; 60
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	28 e0       	ldi	r18, 0x08	; 8
      a0:	ac e3       	ldi	r26, 0x3C	; 60
      a2:	b8 e0       	ldi	r27, 0x08	; 8
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a4 36       	cpi	r26, 0x64	; 100
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 0d 01 	call	0x21a	; 0x21a <main>
      b2:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <countDigits>:
unsigned char Super[] = "Azoz158";
//"supPeeps69";
//https://www.diffnow.com/compare-files


uint16_t countDigits(uint16_t tempInt){
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
      c2:	2d 97       	sbiw	r28, 0x0d	; 13
      c4:	0f b6       	in	r0, 0x3f	; 63
      c6:	f8 94       	cli
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	cd bf       	out	0x3d, r28	; 61
      ce:	9d 87       	std	Y+13, r25	; 0x0d
      d0:	8c 87       	std	Y+12, r24	; 0x0c
	unsigned char intCountingArray[10];
	sprintf(intCountingArray, "%d", tempInt);
      d2:	8d 85       	ldd	r24, Y+13	; 0x0d
      d4:	8f 93       	push	r24
      d6:	8c 85       	ldd	r24, Y+12	; 0x0c
      d8:	8f 93       	push	r24
      da:	87 ee       	ldi	r24, 0xE7	; 231
      dc:	97 e0       	ldi	r25, 0x07	; 7
      de:	89 2f       	mov	r24, r25
      e0:	8f 93       	push	r24
      e2:	87 ee       	ldi	r24, 0xE7	; 231
      e4:	97 e0       	ldi	r25, 0x07	; 7
      e6:	8f 93       	push	r24
      e8:	ce 01       	movw	r24, r28
      ea:	02 96       	adiw	r24, 0x02	; 2
      ec:	29 2f       	mov	r18, r25
      ee:	2f 93       	push	r18
      f0:	8f 93       	push	r24
      f2:	0e 94 a8 0c 	call	0x1950	; 0x1950 <sprintf>
      f6:	0f 90       	pop	r0
      f8:	0f 90       	pop	r0
      fa:	0f 90       	pop	r0
      fc:	0f 90       	pop	r0
      fe:	0f 90       	pop	r0
     100:	0f 90       	pop	r0
	for(uint8_t i = 0; i < sizeof intCountingArray; i++){
     102:	19 82       	std	Y+1, r1	; 0x01
     104:	13 c0       	rjmp	.+38     	; 0x12c <countDigits+0x72>
		if(intCountingArray[i] == '\0'){
     106:	89 81       	ldd	r24, Y+1	; 0x01
     108:	88 2f       	mov	r24, r24
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	9e 01       	movw	r18, r28
     10e:	2e 5f       	subi	r18, 0xFE	; 254
     110:	3f 4f       	sbci	r19, 0xFF	; 255
     112:	82 0f       	add	r24, r18
     114:	93 1f       	adc	r25, r19
     116:	fc 01       	movw	r30, r24
     118:	80 81       	ld	r24, Z
     11a:	88 23       	and	r24, r24
     11c:	21 f4       	brne	.+8      	; 0x126 <countDigits+0x6c>
			return i;
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	88 2f       	mov	r24, r24
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	06 c0       	rjmp	.+12     	; 0x132 <countDigits+0x78>


uint16_t countDigits(uint16_t tempInt){
	unsigned char intCountingArray[10];
	sprintf(intCountingArray, "%d", tempInt);
	for(uint8_t i = 0; i < sizeof intCountingArray; i++){
     126:	89 81       	ldd	r24, Y+1	; 0x01
     128:	8f 5f       	subi	r24, 0xFF	; 255
     12a:	89 83       	std	Y+1, r24	; 0x01
     12c:	89 81       	ldd	r24, Y+1	; 0x01
     12e:	8a 30       	cpi	r24, 0x0A	; 10
     130:	50 f3       	brcs	.-44     	; 0x106 <countDigits+0x4c>
		if(intCountingArray[i] == '\0'){
			return i;
		}
	}
}
     132:	2d 96       	adiw	r28, 0x0d	; 13
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	08 95       	ret

00000144 <parseCharArrayForDisplay>:

void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
     14c:	28 97       	sbiw	r28, 0x08	; 8
     14e:	0f b6       	in	r0, 0x3f	; 63
     150:	f8 94       	cli
     152:	de bf       	out	0x3e, r29	; 62
     154:	0f be       	out	0x3f, r0	; 63
     156:	cd bf       	out	0x3d, r28	; 61
     158:	9e 83       	std	Y+6, r25	; 0x06
     15a:	8d 83       	std	Y+5, r24	; 0x05
     15c:	78 87       	std	Y+8, r23	; 0x08
     15e:	6f 83       	std	Y+7, r22	; 0x07
	uint16_t digitsNumber = 0;
     160:	1c 82       	std	Y+4, r1	; 0x04
     162:	1b 82       	std	Y+3, r1	; 0x03
	for(uint8_t i = 0; i < sizeof temp; i++){
     164:	19 82       	std	Y+1, r1	; 0x01
     166:	4b c0       	rjmp	.+150    	; 0x1fe <parseCharArrayForDisplay+0xba>
		if(temp[i] == '\0'){
     168:	89 81       	ldd	r24, Y+1	; 0x01
     16a:	88 2f       	mov	r24, r24
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	2d 81       	ldd	r18, Y+5	; 0x05
     170:	3e 81       	ldd	r19, Y+6	; 0x06
     172:	82 0f       	add	r24, r18
     174:	93 1f       	adc	r25, r19
     176:	fc 01       	movw	r30, r24
     178:	80 81       	ld	r24, Z
     17a:	88 23       	and	r24, r24
     17c:	e9 f5       	brne	.+122    	; 0x1f8 <parseCharArrayForDisplay+0xb4>
			digitsNumber = countDigits(maximumNumberExpected);
     17e:	8f 81       	ldd	r24, Y+7	; 0x07
     180:	98 85       	ldd	r25, Y+8	; 0x08
     182:	0e 94 5d 00 	call	0xba	; 0xba <countDigits>
     186:	9c 83       	std	Y+4, r25	; 0x04
     188:	8b 83       	std	Y+3, r24	; 0x03
			for (uint8_t k = 0; k < digitsNumber; k++)
     18a:	1a 82       	std	Y+2, r1	; 0x02
     18c:	2b c0       	rjmp	.+86     	; 0x1e4 <parseCharArrayForDisplay+0xa0>
			{
				temp[i+k] = '`';
     18e:	89 81       	ldd	r24, Y+1	; 0x01
     190:	28 2f       	mov	r18, r24
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	8a 81       	ldd	r24, Y+2	; 0x02
     196:	88 2f       	mov	r24, r24
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	82 0f       	add	r24, r18
     19c:	93 1f       	adc	r25, r19
     19e:	9c 01       	movw	r18, r24
     1a0:	8d 81       	ldd	r24, Y+5	; 0x05
     1a2:	9e 81       	ldd	r25, Y+6	; 0x06
     1a4:	82 0f       	add	r24, r18
     1a6:	93 1f       	adc	r25, r19
     1a8:	20 e6       	ldi	r18, 0x60	; 96
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
				if(k == digitsNumber - 1){
     1ae:	8a 81       	ldd	r24, Y+2	; 0x02
     1b0:	28 2f       	mov	r18, r24
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	8b 81       	ldd	r24, Y+3	; 0x03
     1b6:	9c 81       	ldd	r25, Y+4	; 0x04
     1b8:	01 97       	sbiw	r24, 0x01	; 1
     1ba:	28 17       	cp	r18, r24
     1bc:	39 07       	cpc	r19, r25
     1be:	79 f4       	brne	.+30     	; 0x1de <parseCharArrayForDisplay+0x9a>
					temp[i+k] = '\0';
     1c0:	89 81       	ldd	r24, Y+1	; 0x01
     1c2:	28 2f       	mov	r18, r24
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	8a 81       	ldd	r24, Y+2	; 0x02
     1c8:	88 2f       	mov	r24, r24
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	82 0f       	add	r24, r18
     1ce:	93 1f       	adc	r25, r19
     1d0:	9c 01       	movw	r18, r24
     1d2:	8d 81       	ldd	r24, Y+5	; 0x05
     1d4:	9e 81       	ldd	r25, Y+6	; 0x06
     1d6:	82 0f       	add	r24, r18
     1d8:	93 1f       	adc	r25, r19
     1da:	fc 01       	movw	r30, r24
     1dc:	10 82       	st	Z, r1
void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
	uint16_t digitsNumber = 0;
	for(uint8_t i = 0; i < sizeof temp; i++){
		if(temp[i] == '\0'){
			digitsNumber = countDigits(maximumNumberExpected);
			for (uint8_t k = 0; k < digitsNumber; k++)
     1de:	8a 81       	ldd	r24, Y+2	; 0x02
     1e0:	8f 5f       	subi	r24, 0xFF	; 255
     1e2:	8a 83       	std	Y+2, r24	; 0x02
     1e4:	8a 81       	ldd	r24, Y+2	; 0x02
     1e6:	28 2f       	mov	r18, r24
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	8b 81       	ldd	r24, Y+3	; 0x03
     1ec:	9c 81       	ldd	r25, Y+4	; 0x04
     1ee:	28 17       	cp	r18, r24
     1f0:	39 07       	cpc	r19, r25
     1f2:	68 f2       	brcs	.-102    	; 0x18e <parseCharArrayForDisplay+0x4a>
				temp[i+k] = '`';
				if(k == digitsNumber - 1){
					temp[i+k] = '\0';
				}
			}
			i = sizeof temp;
     1f4:	82 e0       	ldi	r24, 0x02	; 2
     1f6:	89 83       	std	Y+1, r24	; 0x01
	}
}

void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
	uint16_t digitsNumber = 0;
	for(uint8_t i = 0; i < sizeof temp; i++){
     1f8:	89 81       	ldd	r24, Y+1	; 0x01
     1fa:	8f 5f       	subi	r24, 0xFF	; 255
     1fc:	89 83       	std	Y+1, r24	; 0x01
     1fe:	89 81       	ldd	r24, Y+1	; 0x01
     200:	82 30       	cpi	r24, 0x02	; 2
     202:	08 f4       	brcc	.+2      	; 0x206 <parseCharArrayForDisplay+0xc2>
     204:	b1 cf       	rjmp	.-158    	; 0x168 <parseCharArrayForDisplay+0x24>
				}
			}
			i = sizeof temp;
		}
	}
}
     206:	00 00       	nop
     208:	28 96       	adiw	r28, 0x08	; 8
     20a:	0f b6       	in	r0, 0x3f	; 63
     20c:	f8 94       	cli
     20e:	de bf       	out	0x3e, r29	; 62
     210:	0f be       	out	0x3f, r0	; 63
     212:	cd bf       	out	0x3d, r28	; 61
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <main>:

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Main Program
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
int main()
{
     21a:	ef 92       	push	r14
     21c:	ff 92       	push	r15
     21e:	0f 93       	push	r16
     220:	1f 93       	push	r17
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	c0 59       	subi	r28, 0x90	; 144
     22c:	d1 09       	sbc	r29, r1
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
	
	DDRB = 0b11100011;	//b7 - SCK; b1 - MOSI
     238:	84 e2       	ldi	r24, 0x24	; 36
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	23 ee       	ldi	r18, 0xE3	; 227
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18
	DDRD = 0b00001001;	//b3 - SS pin
     242:	8a e2       	ldi	r24, 0x2A	; 42
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	29 e0       	ldi	r18, 0x09	; 9
     248:	fc 01       	movw	r30, r24
     24a:	20 83       	st	Z, r18
	SPI_clock_high;
     24c:	85 e2       	ldi	r24, 0x25	; 37
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	25 e2       	ldi	r18, 0x25	; 37
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	f9 01       	movw	r30, r18
     256:	20 81       	ld	r18, Z
     258:	20 68       	ori	r18, 0x80	; 128
     25a:	fc 01       	movw	r30, r24
     25c:	20 83       	st	Z, r18

	ADC_init();		// Initialise ADC
     25e:	0e 94 4e 05 	call	0xa9c	; 0xa9c <ADC_init>
	spi_init();
     262:	0e 94 69 05 	call	0xad2	; 0xad2 <spi_init>
	OLED_Init();
     266:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <OLED_Init>

	CAN_init();		// Initialise CAN
     26a:	0e 94 7e 03 	call	0x6fc	; 0x6fc <CAN_init>
	CAN_RXInit(5,8,0x400000, 0x400000);
     26e:	e1 2c       	mov	r14, r1
     270:	f1 2c       	mov	r15, r1
     272:	00 e4       	ldi	r16, 0x40	; 64
     274:	10 e0       	ldi	r17, 0x00	; 0
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e4       	ldi	r20, 0x40	; 64
     27c:	50 e0       	ldi	r21, 0x00	; 0
     27e:	68 e0       	ldi	r22, 0x08	; 8
     280:	85 e0       	ldi	r24, 0x05	; 5
     282:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <CAN_RXInit>

	sei();
     286:	78 94       	sei

	//Fill_RAM(0x00);			// Clear Screen
	unsigned int index33 = 0x17;
     288:	87 e1       	ldi	r24, 0x17	; 23
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	9a 83       	std	Y+2, r25	; 0x02
     28e:	89 83       	std	Y+1, r24	; 0x01
	unsigned char character66 = 65;
     290:	81 e4       	ldi	r24, 0x41	; 65
     292:	8b 83       	std	Y+3, r24	; 0x03

	unsigned char temp_brightness = 0;
     294:	1c 82       	std	Y+4, r1	; 0x04
	int LeftDialADCScaled;
	uint16_t RightDialADC;
	int RightDialADCScaled;
	uint8_t mob;

	unsigned char Acceleration[]= {'A','C','C','E','L','E','R','A','T','I','O','N'};
     296:	8c e0       	ldi	r24, 0x0C	; 12
     298:	ea ee       	ldi	r30, 0xEA	; 234
     29a:	f7 e0       	ldi	r31, 0x07	; 7
     29c:	de 01       	movw	r26, r28
     29e:	9b 96       	adiw	r26, 0x2b	; 43
     2a0:	01 90       	ld	r0, Z+
     2a2:	0d 92       	st	X+, r0
     2a4:	8a 95       	dec	r24
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x86>
	unsigned char SkidPad[]= {'S','K','I','D','P','A','D'};
     2a8:	87 e0       	ldi	r24, 0x07	; 7
     2aa:	e6 ef       	ldi	r30, 0xF6	; 246
     2ac:	f7 e0       	ldi	r31, 0x07	; 7
     2ae:	de 01       	movw	r26, r28
     2b0:	d7 96       	adiw	r26, 0x37	; 55
     2b2:	01 90       	ld	r0, Z+
     2b4:	0d 92       	st	X+, r0
     2b6:	8a 95       	dec	r24
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <main+0x98>
	unsigned char AutoCross[]= {'A','U','T','O','C','R','O','S','S'};
     2ba:	89 e0       	ldi	r24, 0x09	; 9
     2bc:	ed ef       	ldi	r30, 0xFD	; 253
     2be:	f7 e0       	ldi	r31, 0x07	; 7
     2c0:	de 01       	movw	r26, r28
     2c2:	de 96       	adiw	r26, 0x3e	; 62
     2c4:	01 90       	ld	r0, Z+
     2c6:	0d 92       	st	X+, r0
     2c8:	8a 95       	dec	r24
     2ca:	e1 f7       	brne	.-8      	; 0x2c4 <main+0xaa>
	unsigned char Endurance[]= {'E','N','D','U','R','A','N,','C','E'};
     2cc:	ce 01       	movw	r24, r28
     2ce:	89 5b       	subi	r24, 0xB9	; 185
     2d0:	9f 4f       	sbci	r25, 0xFF	; 255
     2d2:	29 e0       	ldi	r18, 0x09	; 9
     2d4:	e6 e0       	ldi	r30, 0x06	; 6
     2d6:	f8 e0       	ldi	r31, 0x08	; 8
     2d8:	dc 01       	movw	r26, r24
     2da:	01 90       	ld	r0, Z+
     2dc:	0d 92       	st	X+, r0
     2de:	2a 95       	dec	r18
     2e0:	e1 f7       	brne	.-8      	; 0x2da <main+0xc0>
	unsigned char SelectionRight[]= {'>','>','>','>'};
     2e2:	ce 01       	movw	r24, r28
     2e4:	80 5b       	subi	r24, 0xB0	; 176
     2e6:	9f 4f       	sbci	r25, 0xFF	; 255
     2e8:	2e e3       	ldi	r18, 0x3E	; 62
     2ea:	fc 01       	movw	r30, r24
     2ec:	20 83       	st	Z, r18
     2ee:	ce 01       	movw	r24, r28
     2f0:	80 5b       	subi	r24, 0xB0	; 176
     2f2:	9f 4f       	sbci	r25, 0xFF	; 255
     2f4:	2e e3       	ldi	r18, 0x3E	; 62
     2f6:	fc 01       	movw	r30, r24
     2f8:	21 83       	std	Z+1, r18	; 0x01
     2fa:	ce 01       	movw	r24, r28
     2fc:	80 5b       	subi	r24, 0xB0	; 176
     2fe:	9f 4f       	sbci	r25, 0xFF	; 255
     300:	2e e3       	ldi	r18, 0x3E	; 62
     302:	fc 01       	movw	r30, r24
     304:	22 83       	std	Z+2, r18	; 0x02
     306:	ce 01       	movw	r24, r28
     308:	80 5b       	subi	r24, 0xB0	; 176
     30a:	9f 4f       	sbci	r25, 0xFF	; 255
     30c:	2e e3       	ldi	r18, 0x3E	; 62
     30e:	fc 01       	movw	r30, r24
     310:	23 83       	std	Z+3, r18	; 0x03
	unsigned char SelectionLeft[]= {'<','<','<','<'};
     312:	ce 01       	movw	r24, r28
     314:	8c 5a       	subi	r24, 0xAC	; 172
     316:	9f 4f       	sbci	r25, 0xFF	; 255
     318:	2c e3       	ldi	r18, 0x3C	; 60
     31a:	fc 01       	movw	r30, r24
     31c:	20 83       	st	Z, r18
     31e:	ce 01       	movw	r24, r28
     320:	8c 5a       	subi	r24, 0xAC	; 172
     322:	9f 4f       	sbci	r25, 0xFF	; 255
     324:	2c e3       	ldi	r18, 0x3C	; 60
     326:	fc 01       	movw	r30, r24
     328:	21 83       	std	Z+1, r18	; 0x01
     32a:	ce 01       	movw	r24, r28
     32c:	8c 5a       	subi	r24, 0xAC	; 172
     32e:	9f 4f       	sbci	r25, 0xFF	; 255
     330:	2c e3       	ldi	r18, 0x3C	; 60
     332:	fc 01       	movw	r30, r24
     334:	22 83       	std	Z+2, r18	; 0x02
     336:	ce 01       	movw	r24, r28
     338:	8c 5a       	subi	r24, 0xAC	; 172
     33a:	9f 4f       	sbci	r25, 0xFF	; 255
     33c:	2c e3       	ldi	r18, 0x3C	; 60
     33e:	fc 01       	movw	r30, r24
     340:	23 83       	std	Z+3, r18	; 0x03
	unsigned char Voltage[]= {'V','O','L','T','A','G','E',' ',':'};
     342:	ce 01       	movw	r24, r28
     344:	88 5a       	subi	r24, 0xA8	; 168
     346:	9f 4f       	sbci	r25, 0xFF	; 255
     348:	29 e0       	ldi	r18, 0x09	; 9
     34a:	ef e0       	ldi	r30, 0x0F	; 15
     34c:	f8 e0       	ldi	r31, 0x08	; 8
     34e:	dc 01       	movw	r26, r24
     350:	01 90       	ld	r0, Z+
     352:	0d 92       	st	X+, r0
     354:	2a 95       	dec	r18
     356:	e1 f7       	brne	.-8      	; 0x350 <main+0x136>
	unsigned char RPM[] = {'R','P','M',' ',':'};
     358:	ce 01       	movw	r24, r28
     35a:	8f 59       	subi	r24, 0x9F	; 159
     35c:	9f 4f       	sbci	r25, 0xFF	; 255
     35e:	25 e0       	ldi	r18, 0x05	; 5
     360:	e8 e1       	ldi	r30, 0x18	; 24
     362:	f8 e0       	ldi	r31, 0x08	; 8
     364:	dc 01       	movw	r26, r24
     366:	01 90       	ld	r0, Z+
     368:	0d 92       	st	X+, r0
     36a:	2a 95       	dec	r18
     36c:	e1 f7       	brne	.-8      	; 0x366 <main+0x14c>
	unsigned char GearboxTemp[] = {'G','E','A','R','B','O','X',' ','T','E','M','P',' ',':'};
     36e:	ce 01       	movw	r24, r28
     370:	8a 59       	subi	r24, 0x9A	; 154
     372:	9f 4f       	sbci	r25, 0xFF	; 255
     374:	2e e0       	ldi	r18, 0x0E	; 14
     376:	ed e1       	ldi	r30, 0x1D	; 29
     378:	f8 e0       	ldi	r31, 0x08	; 8
     37a:	dc 01       	movw	r26, r24
     37c:	01 90       	ld	r0, Z+
     37e:	0d 92       	st	X+, r0
     380:	2a 95       	dec	r18
     382:	e1 f7       	brne	.-8      	; 0x37c <main+0x162>
	unsigned char Throttle[]= {'T','H','R','O','T','T','L','E',' ','%',' ',':'};
     384:	ce 01       	movw	r24, r28
     386:	8c 58       	subi	r24, 0x8C	; 140
     388:	9f 4f       	sbci	r25, 0xFF	; 255
     38a:	2c e0       	ldi	r18, 0x0C	; 12
     38c:	eb e2       	ldi	r30, 0x2B	; 43
     38e:	f8 e0       	ldi	r31, 0x08	; 8
     390:	dc 01       	movw	r26, r24
     392:	01 90       	ld	r0, Z+
     394:	0d 92       	st	X+, r0
     396:	2a 95       	dec	r18
     398:	e1 f7       	brne	.-8      	; 0x392 <main+0x178>
	unsigned char BlankNumber[] = {' ',' ',' ',' ',' '};
     39a:	ce 01       	movw	r24, r28
     39c:	80 58       	subi	r24, 0x80	; 128
     39e:	9f 4f       	sbci	r25, 0xFF	; 255
     3a0:	25 e0       	ldi	r18, 0x05	; 5
     3a2:	e7 e3       	ldi	r30, 0x37	; 55
     3a4:	f8 e0       	ldi	r31, 0x08	; 8
     3a6:	dc 01       	movw	r26, r24
     3a8:	01 90       	ld	r0, Z+
     3aa:	0d 92       	st	X+, r0
     3ac:	2a 95       	dec	r18
     3ae:	e1 f7       	brne	.-8      	; 0x3a8 <main+0x18e>
	unsigned char LeftArrow[]= {'<'};
     3b0:	ce 01       	movw	r24, r28
     3b2:	8b 57       	subi	r24, 0x7B	; 123
     3b4:	9f 4f       	sbci	r25, 0xFF	; 255
     3b6:	2c e3       	ldi	r18, 0x3C	; 60
     3b8:	fc 01       	movw	r30, r24
     3ba:	20 83       	st	Z, r18
	unsigned char RightArrow[]= {'>'};
     3bc:	ce 01       	movw	r24, r28
     3be:	8a 57       	subi	r24, 0x7A	; 122
     3c0:	9f 4f       	sbci	r25, 0xFF	; 255
     3c2:	2e e3       	ldi	r18, 0x3E	; 62
     3c4:	fc 01       	movw	r30, r24
     3c6:	20 83       	st	Z, r18
	unsigned char TempBuffer[10];
	unsigned int RPMMaxFlag = 0;
     3c8:	1e 82       	std	Y+6, r1	; 0x06
     3ca:	1d 82       	std	Y+5, r1	; 0x05
	unsigned int ThrottleMaxFlag = 0;
     3cc:	18 86       	std	Y+8, r1	; 0x08
     3ce:	1f 82       	std	Y+7, r1	; 0x07
	unsigned int ThrottleGreaterThan10 = 0;
     3d0:	1a 86       	std	Y+10, r1	; 0x0a
     3d2:	19 86       	std	Y+9, r1	; 0x09
	unsigned int RPMGreaterThan100 = 0;
     3d4:	1c 86       	std	Y+12, r1	; 0x0c
     3d6:	1b 86       	std	Y+11, r1	; 0x0b
	unsigned int RPMGreaterThan1000 = 0;
     3d8:	1e 86       	std	Y+14, r1	; 0x0e
     3da:	1d 86       	std	Y+13, r1	; 0x0d
	unsigned int GearboxTempCount = 0;
     3dc:	18 8a       	std	Y+16, r1	; 0x10
     3de:	1f 86       	std	Y+15, r1	; 0x0f
	unsigned int GearboxTempMaxFlag = 0;
     3e0:	1a 8a       	std	Y+18, r1	; 0x12
     3e2:	19 8a       	std	Y+17, r1	; 0x11
	unsigned int RPMCounter = 0;
     3e4:	1c 8a       	std	Y+20, r1	; 0x14
     3e6:	1b 8a       	std	Y+19, r1	; 0x13
	unsigned int BootFlag = 0;
     3e8:	1e 8a       	std	Y+22, r1	; 0x16
     3ea:	1d 8a       	std	Y+21, r1	; 0x15
	int ScreenFlag = 0;
     3ec:	18 8e       	std	Y+24, r1	; 0x18
     3ee:	1f 8a       	std	Y+23, r1	; 0x17
	int ADC_Change = 1;
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	9a 8f       	std	Y+26, r25	; 0x1a
     3f6:	89 8f       	std	Y+25, r24	; 0x19
	int ADC_Previous = 0;
     3f8:	1c 8e       	std	Y+28, r1	; 0x1c
     3fa:	1b 8e       	std	Y+27, r1	; 0x1b
	int digitLength = 0;
     3fc:	1e 8e       	std	Y+30, r1	; 0x1e
     3fe:	1d 8e       	std	Y+29, r1	; 0x1d
	uint16_t LeftDialADCOld = 0;
     400:	18 a2       	std	Y+32, r1	; 0x20
     402:	1f 8e       	std	Y+31, r1	; 0x1f
	uint16_t RightDialADCOld = 0;
     404:	1a a2       	std	Y+34, r1	; 0x22
     406:	19 a2       	std	Y+33, r1	; 0x21

	while(1)
	{
		
		readDials();
     408:	0e 94 df 04 	call	0x9be	; 0x9be <readDials>
		LeftDialADC = ADC_read(3); // 3 = LEFT DIAL
     40c:	83 e0       	ldi	r24, 0x03	; 3
     40e:	0e 94 89 04 	call	0x912	; 0x912 <ADC_read>
     412:	9c a3       	std	Y+36, r25	; 0x24
     414:	8b a3       	std	Y+35, r24	; 0x23
		LeftDialADCScaled = (int)(LeftDialADC >> 2) / 24; // Scale values from 1 to 8 - need to verify with new PCB since dials are playing up
     416:	8b a1       	ldd	r24, Y+35	; 0x23
     418:	9c a1       	ldd	r25, Y+36	; 0x24
     41a:	96 95       	lsr	r25
     41c:	87 95       	ror	r24
     41e:	96 95       	lsr	r25
     420:	87 95       	ror	r24
     422:	28 e1       	ldi	r18, 0x18	; 24
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	b9 01       	movw	r22, r18
     428:	0e 94 36 0c 	call	0x186c	; 0x186c <__divmodhi4>
     42c:	cb 01       	movw	r24, r22
     42e:	9e a3       	std	Y+38, r25	; 0x26
     430:	8d a3       	std	Y+37, r24	; 0x25
		RightDialADC = ADC_read(2); // 2 = RIGHT DIAL
     432:	82 e0       	ldi	r24, 0x02	; 2
     434:	0e 94 89 04 	call	0x912	; 0x912 <ADC_read>
     438:	98 a7       	std	Y+40, r25	; 0x28
     43a:	8f a3       	std	Y+39, r24	; 0x27
		RightDialADCScaled = (int)(RightDialADC >> 2) / 24; // Scale values from 1 to 8 - need to verify with new PCB since dials are playing up
     43c:	8f a1       	ldd	r24, Y+39	; 0x27
     43e:	98 a5       	ldd	r25, Y+40	; 0x28
     440:	96 95       	lsr	r25
     442:	87 95       	ror	r24
     444:	96 95       	lsr	r25
     446:	87 95       	ror	r24
     448:	28 e1       	ldi	r18, 0x18	; 24
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	b9 01       	movw	r22, r18
     44e:	0e 94 36 0c 	call	0x186c	; 0x186c <__divmodhi4>
     452:	cb 01       	movw	r24, r22
     454:	9a a7       	std	Y+42, r25	; 0x2a
     456:	89 a7       	std	Y+41, r24	; 0x29
		//mob = CAN_findFreeTXMOB();
		//radPoint = readDials();
		//CAN_TXMOB(0, 1, &radPoint, 0x400001,0);
		//Display_Picture(Motorsport);

		sprintf(Charge, "%d", ThrottlePercentageData);
     458:	80 91 3c 08 	lds	r24, 0x083C	; 0x80083c <__data_end>
     45c:	90 91 3d 08 	lds	r25, 0x083D	; 0x80083d <__data_end+0x1>
     460:	29 2f       	mov	r18, r25
     462:	2f 93       	push	r18
     464:	8f 93       	push	r24
     466:	87 ee       	ldi	r24, 0xE7	; 231
     468:	97 e0       	ldi	r25, 0x07	; 7
     46a:	89 2f       	mov	r24, r25
     46c:	8f 93       	push	r24
     46e:	87 ee       	ldi	r24, 0xE7	; 231
     470:	97 e0       	ldi	r25, 0x07	; 7
     472:	8f 93       	push	r24
     474:	80 e5       	ldi	r24, 0x50	; 80
     476:	98 e0       	ldi	r25, 0x08	; 8
     478:	89 2f       	mov	r24, r25
     47a:	8f 93       	push	r24
     47c:	80 e5       	ldi	r24, 0x50	; 80
     47e:	98 e0       	ldi	r25, 0x08	; 8
     480:	8f 93       	push	r24
     482:	0e 94 a8 0c 	call	0x1950	; 0x1950 <sprintf>
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
		sprintf(breakDataArray, "%d", BreakData);
     492:	80 91 3e 08 	lds	r24, 0x083E	; 0x80083e <BreakData>
     496:	90 91 3f 08 	lds	r25, 0x083F	; 0x80083f <BreakData+0x1>
     49a:	29 2f       	mov	r18, r25
     49c:	2f 93       	push	r18
     49e:	8f 93       	push	r24
     4a0:	87 ee       	ldi	r24, 0xE7	; 231
     4a2:	97 e0       	ldi	r25, 0x07	; 7
     4a4:	89 2f       	mov	r24, r25
     4a6:	8f 93       	push	r24
     4a8:	87 ee       	ldi	r24, 0xE7	; 231
     4aa:	97 e0       	ldi	r25, 0x07	; 7
     4ac:	8f 93       	push	r24
     4ae:	8a e5       	ldi	r24, 0x5A	; 90
     4b0:	98 e0       	ldi	r25, 0x08	; 8
     4b2:	89 2f       	mov	r24, r25
     4b4:	8f 93       	push	r24
     4b6:	8a e5       	ldi	r24, 0x5A	; 90
     4b8:	98 e0       	ldi	r25, 0x08	; 8
     4ba:	8f 93       	push	r24
     4bc:	0e 94 a8 0c 	call	0x1950	; 0x1950 <sprintf>
     4c0:	0f 90       	pop	r0
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	0f 90       	pop	r0
     4ca:	0f 90       	pop	r0
		sprintf(PotDataArray, "%d", PotData);
     4cc:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <PotData>
     4d0:	90 91 41 08 	lds	r25, 0x0841	; 0x800841 <PotData+0x1>
     4d4:	a0 91 42 08 	lds	r26, 0x0842	; 0x800842 <PotData+0x2>
     4d8:	b0 91 43 08 	lds	r27, 0x0843	; 0x800843 <PotData+0x3>
     4dc:	2b 2f       	mov	r18, r27
     4de:	2f 93       	push	r18
     4e0:	2a 2f       	mov	r18, r26
     4e2:	2f 93       	push	r18
     4e4:	29 2f       	mov	r18, r25
     4e6:	2f 93       	push	r18
     4e8:	8f 93       	push	r24
     4ea:	87 ee       	ldi	r24, 0xE7	; 231
     4ec:	97 e0       	ldi	r25, 0x07	; 7
     4ee:	89 2f       	mov	r24, r25
     4f0:	8f 93       	push	r24
     4f2:	87 ee       	ldi	r24, 0xE7	; 231
     4f4:	97 e0       	ldi	r25, 0x07	; 7
     4f6:	8f 93       	push	r24
     4f8:	85 e4       	ldi	r24, 0x45	; 69
     4fa:	98 e0       	ldi	r25, 0x08	; 8
     4fc:	89 2f       	mov	r24, r25
     4fe:	8f 93       	push	r24
     500:	85 e4       	ldi	r24, 0x45	; 69
     502:	98 e0       	ldi	r25, 0x08	; 8
     504:	8f 93       	push	r24
     506:	0e 94 a8 0c 	call	0x1950	; 0x1950 <sprintf>
     50a:	8d b7       	in	r24, 0x3d	; 61
     50c:	9e b7       	in	r25, 0x3e	; 62
     50e:	08 96       	adiw	r24, 0x08	; 8
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	f8 94       	cli
     514:	de bf       	out	0x3e, r29	; 62
     516:	0f be       	out	0x3f, r0	; 63
     518:	cd bf       	out	0x3d, r28	; 61
				Charge[i+2] = '\0';//0x2302;
				i = sizeof Charge;
			}
		}
		*/
		parseCharArrayForDisplay(Charge, 75);
     51a:	6b e4       	ldi	r22, 0x4B	; 75
     51c:	70 e0       	ldi	r23, 0x00	; 0
     51e:	80 e5       	ldi	r24, 0x50	; 80
     520:	98 e0       	ldi	r25, 0x08	; 8
     522:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>
		parseCharArrayForDisplay(breakDataArray, 100);
     526:	64 e6       	ldi	r22, 0x64	; 100
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	8a e5       	ldi	r24, 0x5A	; 90
     52c:	98 e0       	ldi	r25, 0x08	; 8
     52e:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>
		parseCharArrayForDisplay(PotDataArray, 100);
     532:	64 e6       	ldi	r22, 0x64	; 100
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	85 e4       	ldi	r24, 0x45	; 69
     538:	98 e0       	ldi	r25, 0x08	; 8
     53a:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>

		Delay(100);
     53e:	84 e6       	ldi	r24, 0x64	; 100
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	0e 94 b9 05 	call	0xb72	; 0xb72 <Delay>

		//Fill_RAM(0x00);			// Clear Screen

		//Delay(10);
		
		Show_String(1,&MTemp1,0x05,0x05);
     546:	25 e0       	ldi	r18, 0x05	; 5
     548:	45 e0       	ldi	r20, 0x05	; 5
     54a:	60 e0       	ldi	r22, 0x00	; 0
     54c:	71 e0       	ldi	r23, 0x01	; 1
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>
		Show_String(1,&Charge,0x27,0x05);
     554:	25 e0       	ldi	r18, 0x05	; 5
     556:	47 e2       	ldi	r20, 0x27	; 39
     558:	60 e5       	ldi	r22, 0x50	; 80
     55a:	78 e0       	ldi	r23, 0x08	; 8
     55c:	81 e0       	ldi	r24, 0x01	; 1
     55e:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>

		Show_String(1,&MTemp2,0x05,0x15);
     562:	25 e1       	ldi	r18, 0x15	; 21
     564:	45 e0       	ldi	r20, 0x05	; 5
     566:	6a e0       	ldi	r22, 0x0A	; 10
     568:	71 e0       	ldi	r23, 0x01	; 1
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>
		Show_String(1,&breakDataArray,0x27,0x15);
     570:	25 e1       	ldi	r18, 0x15	; 21
     572:	47 e2       	ldi	r20, 0x27	; 39
     574:	6a e5       	ldi	r22, 0x5A	; 90
     576:	78 e0       	ldi	r23, 0x08	; 8
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>

		Show_String(1,&MTemp3,0x05,0x25);
     57e:	25 e2       	ldi	r18, 0x25	; 37
     580:	45 e0       	ldi	r20, 0x05	; 5
     582:	61 e1       	ldi	r22, 0x11	; 17
     584:	71 e0       	ldi	r23, 0x01	; 1
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>
		Show_String(1,&PotDataArray,0x27,0x25);
     58c:	25 e2       	ldi	r18, 0x25	; 37
     58e:	47 e2       	ldi	r20, 0x27	; 39
     590:	65 e4       	ldi	r22, 0x45	; 69
     592:	78 e0       	ldi	r23, 0x08	; 8
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <Show_String>
	}
     59a:	36 cf       	rjmp	.-404    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

0000059c <__vector_10>:
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Interrupts
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

ISR(INT3_vect)
{
     59c:	1f 92       	push	r1
     59e:	0f 92       	push	r0
     5a0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5a4:	0f 92       	push	r0
     5a6:	11 24       	eor	r1, r1
     5a8:	2f 93       	push	r18
     5aa:	8f 93       	push	r24
     5ac:	9f 93       	push	r25
     5ae:	ef 93       	push	r30
     5b0:	ff 93       	push	r31
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	cd b7       	in	r28, 0x3d	; 61
     5b8:	de b7       	in	r29, 0x3e	; 62
	SMCR = (0<<SM2)|(0<<SM1)|(1<<SM0)|(0<<SE);		//disable the mode, and disable the enable bit.
     5ba:	83 e5       	ldi	r24, 0x53	; 83
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	22 e0       	ldi	r18, 0x02	; 2
     5c0:	fc 01       	movw	r30, r24
     5c2:	20 83       	st	Z, r18
}
     5c4:	00 00       	nop
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	ff 91       	pop	r31
     5cc:	ef 91       	pop	r30
     5ce:	9f 91       	pop	r25
     5d0:	8f 91       	pop	r24
     5d2:	2f 91       	pop	r18
     5d4:	0f 90       	pop	r0
     5d6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5da:	0f 90       	pop	r0
     5dc:	1f 90       	pop	r1
     5de:	18 95       	reti

000005e0 <__vector_18>:

ISR(CAN_INT_vect)
{
     5e0:	1f 92       	push	r1
     5e2:	0f 92       	push	r0
     5e4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5e8:	0f 92       	push	r0
     5ea:	11 24       	eor	r1, r1
     5ec:	ef 92       	push	r14
     5ee:	ff 92       	push	r15
     5f0:	0f 93       	push	r16
     5f2:	1f 93       	push	r17
     5f4:	2f 93       	push	r18
     5f6:	3f 93       	push	r19
     5f8:	4f 93       	push	r20
     5fa:	5f 93       	push	r21
     5fc:	6f 93       	push	r22
     5fe:	7f 93       	push	r23
     600:	8f 93       	push	r24
     602:	9f 93       	push	r25
     604:	af 93       	push	r26
     606:	bf 93       	push	r27
     608:	ef 93       	push	r30
     60a:	ff 93       	push	r31
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	cd b7       	in	r28, 0x3d	; 61
     612:	de b7       	in	r29, 0x3e	; 62
	//uint8_t authority;
	//int8_t mob;
	if((CANSIT2 & (1 << SIT5)))	//we received a CAN message on mob 5, which is set up to receive exclusively from the AMU.
     614:	80 ee       	ldi	r24, 0xE0	; 224
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	fc 01       	movw	r30, r24
     61a:	80 81       	ld	r24, Z
     61c:	88 2f       	mov	r24, r24
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	80 72       	andi	r24, 0x20	; 32
     622:	99 27       	eor	r25, r25
     624:	89 2b       	or	r24, r25
     626:	a9 f1       	breq	.+106    	; 0x692 <__vector_18+0xb2>
	{
		//memset(PotDataArray, 0, sizeof PotDataArray);
		
		CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     628:	8d ee       	ldi	r24, 0xED	; 237
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	20 e5       	ldi	r18, 0x50	; 80
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18
		ThrottlePercentageData = CANMSG;
     632:	8a ef       	ldi	r24, 0xFA	; 250
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	fc 01       	movw	r30, r24
     638:	80 81       	ld	r24, Z
     63a:	88 2f       	mov	r24, r24
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <__data_end+0x1>
     642:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <__data_end>
		//MTemp2[3] = ThrottlePercentageData;
		
		//MTemp2[3] = ThrottlePercentageData;
		//CANMSG = 100000000;
		//RPMData = CANMSG << 1;
		BreakData = CANMSG;// << 1;
     646:	8a ef       	ldi	r24, 0xFA	; 250
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	fc 01       	movw	r30, r24
     64c:	80 81       	ld	r24, Z
     64e:	88 2f       	mov	r24, r24
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	90 93 3f 08 	sts	0x083F, r25	; 0x80083f <BreakData+0x1>
     656:	80 93 3e 08 	sts	0x083E, r24	; 0x80083e <BreakData>
		//BreakData = CANMSG;
		
		PotData = CANMSG;
     65a:	8a ef       	ldi	r24, 0xFA	; 250
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	fc 01       	movw	r30, r24
     660:	80 81       	ld	r24, Z
     662:	88 2f       	mov	r24, r24
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	a0 e0       	ldi	r26, 0x00	; 0
     668:	b0 e0       	ldi	r27, 0x00	; 0
     66a:	80 93 40 08 	sts	0x0840, r24	; 0x800840 <PotData>
     66e:	90 93 41 08 	sts	0x0841, r25	; 0x800841 <PotData+0x1>
     672:	a0 93 42 08 	sts	0x0842, r26	; 0x800842 <PotData+0x2>
     676:	b0 93 43 08 	sts	0x0843, r27	; 0x800843 <PotData+0x3>
		
		// JOhn said NO
		//radPoint = readDials();
		//CAN_TXMOB(0, 1, &radPoint, 0x400001,0);

		CAN_RXInit(5,8,0x400000, 0x400000);
     67a:	e1 2c       	mov	r14, r1
     67c:	f1 2c       	mov	r15, r1
     67e:	00 e4       	ldi	r16, 0x40	; 64
     680:	10 e0       	ldi	r17, 0x00	; 0
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	40 e4       	ldi	r20, 0x40	; 64
     688:	50 e0       	ldi	r21, 0x00	; 0
     68a:	68 e0       	ldi	r22, 0x08	; 8
     68c:	85 e0       	ldi	r24, 0x05	; 5
     68e:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <CAN_RXInit>
	}
	
	CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     692:	8d ee       	ldi	r24, 0xED	; 237
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	20 e5       	ldi	r18, 0x50	; 80
     698:	fc 01       	movw	r30, r24
     69a:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     69c:	8e ee       	ldi	r24, 0xEE	; 238
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	2e ee       	ldi	r18, 0xEE	; 238
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	f9 01       	movw	r30, r18
     6a6:	20 81       	ld	r18, Z
     6a8:	2f 7d       	andi	r18, 0xDF	; 223
     6aa:	fc 01       	movw	r30, r24
     6ac:	20 83       	st	Z, r18
	CANPAGE = (4 << 4);
     6ae:	8d ee       	ldi	r24, 0xED	; 237
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	20 e4       	ldi	r18, 0x40	; 64
     6b4:	fc 01       	movw	r30, r24
     6b6:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     6b8:	8e ee       	ldi	r24, 0xEE	; 238
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	2e ee       	ldi	r18, 0xEE	; 238
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	f9 01       	movw	r30, r18
     6c2:	20 81       	ld	r18, Z
     6c4:	2f 7d       	andi	r18, 0xDF	; 223
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18
     6ca:	00 00       	nop
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	ff 91       	pop	r31
     6d2:	ef 91       	pop	r30
     6d4:	bf 91       	pop	r27
     6d6:	af 91       	pop	r26
     6d8:	9f 91       	pop	r25
     6da:	8f 91       	pop	r24
     6dc:	7f 91       	pop	r23
     6de:	6f 91       	pop	r22
     6e0:	5f 91       	pop	r21
     6e2:	4f 91       	pop	r20
     6e4:	3f 91       	pop	r19
     6e6:	2f 91       	pop	r18
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	ff 90       	pop	r15
     6ee:	ef 90       	pop	r14
     6f0:	0f 90       	pop	r0
     6f2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     6f6:	0f 90       	pop	r0
     6f8:	1f 90       	pop	r1
     6fa:	18 95       	reti

000006fc <CAN_init>:
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	1f 92       	push	r1
     702:	cd b7       	in	r28, 0x3d	; 61
     704:	de b7       	in	r29, 0x3e	; 62
     706:	88 ed       	ldi	r24, 0xD8	; 216
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	21 e0       	ldi	r18, 0x01	; 1
     70c:	fc 01       	movw	r30, r24
     70e:	20 83       	st	Z, r18
     710:	19 82       	std	Y+1, r1	; 0x01
     712:	22 c0       	rjmp	.+68     	; 0x758 <CAN_init+0x5c>
     714:	8d ee       	ldi	r24, 0xED	; 237
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	29 81       	ldd	r18, Y+1	; 0x01
     71a:	22 95       	swap	r18
     71c:	20 7f       	andi	r18, 0xF0	; 240
     71e:	fc 01       	movw	r30, r24
     720:	20 83       	st	Z, r18
     722:	8f ee       	ldi	r24, 0xEF	; 239
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	fc 01       	movw	r30, r24
     728:	10 82       	st	Z, r1
     72a:	8e ee       	ldi	r24, 0xEE	; 238
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	fc 01       	movw	r30, r24
     730:	10 82       	st	Z, r1
     732:	87 ef       	ldi	r24, 0xF7	; 247
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	fc 01       	movw	r30, r24
     738:	10 82       	st	Z, r1
     73a:	86 ef       	ldi	r24, 0xF6	; 246
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	fc 01       	movw	r30, r24
     740:	10 82       	st	Z, r1
     742:	85 ef       	ldi	r24, 0xF5	; 245
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	fc 01       	movw	r30, r24
     748:	10 82       	st	Z, r1
     74a:	84 ef       	ldi	r24, 0xF4	; 244
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	fc 01       	movw	r30, r24
     750:	10 82       	st	Z, r1
     752:	89 81       	ldd	r24, Y+1	; 0x01
     754:	8f 5f       	subi	r24, 0xFF	; 255
     756:	89 83       	std	Y+1, r24	; 0x01
     758:	89 81       	ldd	r24, Y+1	; 0x01
     75a:	86 30       	cpi	r24, 0x06	; 6
     75c:	d8 f2       	brcs	.-74     	; 0x714 <CAN_init+0x18>
     75e:	82 ee       	ldi	r24, 0xE2	; 226
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	2e e0       	ldi	r18, 0x0E	; 14
     764:	fc 01       	movw	r30, r24
     766:	20 83       	st	Z, r18
     768:	83 ee       	ldi	r24, 0xE3	; 227
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	24 e0       	ldi	r18, 0x04	; 4
     76e:	fc 01       	movw	r30, r24
     770:	20 83       	st	Z, r18
     772:	84 ee       	ldi	r24, 0xE4	; 228
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	23 e1       	ldi	r18, 0x13	; 19
     778:	fc 01       	movw	r30, r24
     77a:	20 83       	st	Z, r18
     77c:	8e ed       	ldi	r24, 0xDE	; 222
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	20 e3       	ldi	r18, 0x30	; 48
     782:	fc 01       	movw	r30, r24
     784:	20 83       	st	Z, r18
     786:	8b ed       	ldi	r24, 0xDB	; 219
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	20 ea       	ldi	r18, 0xA0	; 160
     78c:	fc 01       	movw	r30, r24
     78e:	20 83       	st	Z, r18
     790:	88 ed       	ldi	r24, 0xD8	; 216
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	22 e0       	ldi	r18, 0x02	; 2
     796:	fc 01       	movw	r30, r24
     798:	20 83       	st	Z, r18
     79a:	82 e3       	ldi	r24, 0x32	; 50
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	0e 94 b9 05 	call	0xb72	; 0xb72 <Delay>
     7a2:	89 ed       	ldi	r24, 0xD9	; 217
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	fc 01       	movw	r30, r24
     7a8:	80 81       	ld	r24, Z
     7aa:	88 2f       	mov	r24, r24
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	84 70       	andi	r24, 0x04	; 4
     7b0:	99 27       	eor	r25, r25
     7b2:	89 2b       	or	r24, r25
     7b4:	11 f4       	brne	.+4      	; 0x7ba <CAN_init+0xbe>
     7b6:	81 e0       	ldi	r24, 0x01	; 1
     7b8:	01 c0       	rjmp	.+2      	; 0x7bc <CAN_init+0xc0>
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	0f 90       	pop	r0
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	08 95       	ret

000007c4 <CAN_RXInit>:
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	cd b7       	in	r28, 0x3d	; 61
     7d2:	de b7       	in	r29, 0x3e	; 62
     7d4:	2a 97       	sbiw	r28, 0x0a	; 10
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	f8 94       	cli
     7da:	de bf       	out	0x3e, r29	; 62
     7dc:	0f be       	out	0x3f, r0	; 63
     7de:	cd bf       	out	0x3d, r28	; 61
     7e0:	89 83       	std	Y+1, r24	; 0x01
     7e2:	6a 83       	std	Y+2, r22	; 0x02
     7e4:	2b 83       	std	Y+3, r18	; 0x03
     7e6:	3c 83       	std	Y+4, r19	; 0x04
     7e8:	4d 83       	std	Y+5, r20	; 0x05
     7ea:	5e 83       	std	Y+6, r21	; 0x06
     7ec:	ef 82       	std	Y+7, r14	; 0x07
     7ee:	f8 86       	std	Y+8, r15	; 0x08
     7f0:	09 87       	std	Y+9, r16	; 0x09
     7f2:	1a 87       	std	Y+10, r17	; 0x0a
     7f4:	8d ee       	ldi	r24, 0xED	; 237
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	29 81       	ldd	r18, Y+1	; 0x01
     7fa:	22 95       	swap	r18
     7fc:	20 7f       	andi	r18, 0xF0	; 240
     7fe:	fc 01       	movw	r30, r24
     800:	20 83       	st	Z, r18
     802:	84 ef       	ldi	r24, 0xF4	; 244
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	2b 81       	ldd	r18, Y+3	; 0x03
     808:	22 0f       	add	r18, r18
     80a:	22 0f       	add	r18, r18
     80c:	22 0f       	add	r18, r18
     80e:	fc 01       	movw	r30, r24
     810:	20 83       	st	Z, r18
     812:	25 ef       	ldi	r18, 0xF5	; 245
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	8b 81       	ldd	r24, Y+3	; 0x03
     818:	9c 81       	ldd	r25, Y+4	; 0x04
     81a:	ad 81       	ldd	r26, Y+5	; 0x05
     81c:	be 81       	ldd	r27, Y+6	; 0x06
     81e:	68 94       	set
     820:	14 f8       	bld	r1, 4
     822:	b6 95       	lsr	r27
     824:	a7 95       	ror	r26
     826:	97 95       	ror	r25
     828:	87 95       	ror	r24
     82a:	16 94       	lsr	r1
     82c:	d1 f7       	brne	.-12     	; 0x822 <CAN_RXInit+0x5e>
     82e:	f9 01       	movw	r30, r18
     830:	80 83       	st	Z, r24
     832:	26 ef       	ldi	r18, 0xF6	; 246
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	8b 81       	ldd	r24, Y+3	; 0x03
     838:	9c 81       	ldd	r25, Y+4	; 0x04
     83a:	ad 81       	ldd	r26, Y+5	; 0x05
     83c:	be 81       	ldd	r27, Y+6	; 0x06
     83e:	07 2e       	mov	r0, r23
     840:	7d e0       	ldi	r23, 0x0D	; 13
     842:	b6 95       	lsr	r27
     844:	a7 95       	ror	r26
     846:	97 95       	ror	r25
     848:	87 95       	ror	r24
     84a:	7a 95       	dec	r23
     84c:	d1 f7       	brne	.-12     	; 0x842 <CAN_RXInit+0x7e>
     84e:	70 2d       	mov	r23, r0
     850:	f9 01       	movw	r30, r18
     852:	80 83       	st	Z, r24
     854:	27 ef       	ldi	r18, 0xF7	; 247
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	8b 81       	ldd	r24, Y+3	; 0x03
     85a:	9c 81       	ldd	r25, Y+4	; 0x04
     85c:	ad 81       	ldd	r26, Y+5	; 0x05
     85e:	be 81       	ldd	r27, Y+6	; 0x06
     860:	07 2e       	mov	r0, r23
     862:	75 e1       	ldi	r23, 0x15	; 21
     864:	b6 95       	lsr	r27
     866:	a7 95       	ror	r26
     868:	97 95       	ror	r25
     86a:	87 95       	ror	r24
     86c:	7a 95       	dec	r23
     86e:	d1 f7       	brne	.-12     	; 0x864 <CAN_RXInit+0xa0>
     870:	70 2d       	mov	r23, r0
     872:	f9 01       	movw	r30, r18
     874:	80 83       	st	Z, r24
     876:	80 ef       	ldi	r24, 0xF0	; 240
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	2f 81       	ldd	r18, Y+7	; 0x07
     87c:	22 0f       	add	r18, r18
     87e:	22 0f       	add	r18, r18
     880:	22 0f       	add	r18, r18
     882:	fc 01       	movw	r30, r24
     884:	20 83       	st	Z, r18
     886:	21 ef       	ldi	r18, 0xF1	; 241
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	8f 81       	ldd	r24, Y+7	; 0x07
     88c:	98 85       	ldd	r25, Y+8	; 0x08
     88e:	a9 85       	ldd	r26, Y+9	; 0x09
     890:	ba 85       	ldd	r27, Y+10	; 0x0a
     892:	68 94       	set
     894:	14 f8       	bld	r1, 4
     896:	b6 95       	lsr	r27
     898:	a7 95       	ror	r26
     89a:	97 95       	ror	r25
     89c:	87 95       	ror	r24
     89e:	16 94       	lsr	r1
     8a0:	d1 f7       	brne	.-12     	; 0x896 <CAN_RXInit+0xd2>
     8a2:	f9 01       	movw	r30, r18
     8a4:	80 83       	st	Z, r24
     8a6:	22 ef       	ldi	r18, 0xF2	; 242
     8a8:	30 e0       	ldi	r19, 0x00	; 0
     8aa:	8f 81       	ldd	r24, Y+7	; 0x07
     8ac:	98 85       	ldd	r25, Y+8	; 0x08
     8ae:	a9 85       	ldd	r26, Y+9	; 0x09
     8b0:	ba 85       	ldd	r27, Y+10	; 0x0a
     8b2:	07 2e       	mov	r0, r23
     8b4:	7d e0       	ldi	r23, 0x0D	; 13
     8b6:	b6 95       	lsr	r27
     8b8:	a7 95       	ror	r26
     8ba:	97 95       	ror	r25
     8bc:	87 95       	ror	r24
     8be:	7a 95       	dec	r23
     8c0:	d1 f7       	brne	.-12     	; 0x8b6 <CAN_RXInit+0xf2>
     8c2:	70 2d       	mov	r23, r0
     8c4:	f9 01       	movw	r30, r18
     8c6:	80 83       	st	Z, r24
     8c8:	23 ef       	ldi	r18, 0xF3	; 243
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	8f 81       	ldd	r24, Y+7	; 0x07
     8ce:	98 85       	ldd	r25, Y+8	; 0x08
     8d0:	a9 85       	ldd	r26, Y+9	; 0x09
     8d2:	ba 85       	ldd	r27, Y+10	; 0x0a
     8d4:	07 2e       	mov	r0, r23
     8d6:	75 e1       	ldi	r23, 0x15	; 21
     8d8:	b6 95       	lsr	r27
     8da:	a7 95       	ror	r26
     8dc:	97 95       	ror	r25
     8de:	87 95       	ror	r24
     8e0:	7a 95       	dec	r23
     8e2:	d1 f7       	brne	.-12     	; 0x8d8 <CAN_RXInit+0x114>
     8e4:	70 2d       	mov	r23, r0
     8e6:	f9 01       	movw	r30, r18
     8e8:	80 83       	st	Z, r24
     8ea:	8f ee       	ldi	r24, 0xEF	; 239
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	2a 81       	ldd	r18, Y+2	; 0x02
     8f0:	20 69       	ori	r18, 0x90	; 144
     8f2:	fc 01       	movw	r30, r24
     8f4:	20 83       	st	Z, r18
     8f6:	00 00       	nop
     8f8:	2a 96       	adiw	r28, 0x0a	; 10
     8fa:	0f b6       	in	r0, 0x3f	; 63
     8fc:	f8 94       	cli
     8fe:	de bf       	out	0x3e, r29	; 62
     900:	0f be       	out	0x3f, r0	; 63
     902:	cd bf       	out	0x3d, r28	; 61
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	1f 91       	pop	r17
     90a:	0f 91       	pop	r16
     90c:	ff 90       	pop	r15
     90e:	ef 90       	pop	r14
     910:	08 95       	ret

00000912 <ADC_read>:
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	00 d0       	rcall	.+0      	; 0x918 <ADC_read+0x6>
     918:	1f 92       	push	r1
     91a:	cd b7       	in	r28, 0x3d	; 61
     91c:	de b7       	in	r29, 0x3e	; 62
     91e:	8b 83       	std	Y+3, r24	; 0x03
     920:	8c e7       	ldi	r24, 0x7C	; 124
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	fc 01       	movw	r30, r24
     926:	80 81       	ld	r24, Z
     928:	98 2f       	mov	r25, r24
     92a:	90 7e       	andi	r25, 0xE0	; 224
     92c:	8b 81       	ldd	r24, Y+3	; 0x03
     92e:	8f 71       	andi	r24, 0x1F	; 31
     930:	89 2b       	or	r24, r25
     932:	8b 83       	std	Y+3, r24	; 0x03
     934:	8c e7       	ldi	r24, 0x7C	; 124
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	2b 81       	ldd	r18, Y+3	; 0x03
     93a:	fc 01       	movw	r30, r24
     93c:	20 83       	st	Z, r18
     93e:	8a e7       	ldi	r24, 0x7A	; 122
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	2a e7       	ldi	r18, 0x7A	; 122
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	f9 01       	movw	r30, r18
     948:	20 81       	ld	r18, Z
     94a:	20 64       	ori	r18, 0x40	; 64
     94c:	fc 01       	movw	r30, r24
     94e:	20 83       	st	Z, r18
     950:	00 00       	nop
     952:	8a e7       	ldi	r24, 0x7A	; 122
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	fc 01       	movw	r30, r24
     958:	80 81       	ld	r24, Z
     95a:	88 2f       	mov	r24, r24
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	80 71       	andi	r24, 0x10	; 16
     960:	99 27       	eor	r25, r25
     962:	89 2b       	or	r24, r25
     964:	b1 f3       	breq	.-20     	; 0x952 <ADC_read+0x40>
     966:	1a 82       	std	Y+2, r1	; 0x02
     968:	19 82       	std	Y+1, r1	; 0x01
     96a:	88 e7       	ldi	r24, 0x78	; 120
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	fc 01       	movw	r30, r24
     970:	80 81       	ld	r24, Z
     972:	88 2f       	mov	r24, r24
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	9a 83       	std	Y+2, r25	; 0x02
     978:	89 83       	std	Y+1, r24	; 0x01
     97a:	89 e7       	ldi	r24, 0x79	; 121
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	fc 01       	movw	r30, r24
     980:	80 81       	ld	r24, Z
     982:	88 2f       	mov	r24, r24
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	83 70       	andi	r24, 0x03	; 3
     988:	99 27       	eor	r25, r25
     98a:	98 2f       	mov	r25, r24
     98c:	88 27       	eor	r24, r24
     98e:	9c 01       	movw	r18, r24
     990:	89 81       	ldd	r24, Y+1	; 0x01
     992:	9a 81       	ldd	r25, Y+2	; 0x02
     994:	82 2b       	or	r24, r18
     996:	93 2b       	or	r25, r19
     998:	9a 83       	std	Y+2, r25	; 0x02
     99a:	89 83       	std	Y+1, r24	; 0x01
     99c:	8a e7       	ldi	r24, 0x7A	; 122
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	2a e7       	ldi	r18, 0x7A	; 122
     9a2:	30 e0       	ldi	r19, 0x00	; 0
     9a4:	f9 01       	movw	r30, r18
     9a6:	20 81       	ld	r18, Z
     9a8:	20 61       	ori	r18, 0x10	; 16
     9aa:	fc 01       	movw	r30, r24
     9ac:	20 83       	st	Z, r18
     9ae:	89 81       	ldd	r24, Y+1	; 0x01
     9b0:	9a 81       	ldd	r25, Y+2	; 0x02
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	0f 90       	pop	r0
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	08 95       	ret

000009be <readDials>:
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
     9c6:	6d 97       	sbiw	r28, 0x1d	; 29
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	f8 94       	cli
     9cc:	de bf       	out	0x3e, r29	; 62
     9ce:	0f be       	out	0x3f, r0	; 63
     9d0:	cd bf       	out	0x3d, r28	; 61
     9d2:	19 82       	std	Y+1, r1	; 0x01
     9d4:	82 e0       	ldi	r24, 0x02	; 2
     9d6:	0e 94 89 04 	call	0x912	; 0x912 <ADC_read>
     9da:	9b 83       	std	Y+3, r25	; 0x03
     9dc:	8a 83       	std	Y+2, r24	; 0x02
     9de:	83 e0       	ldi	r24, 0x03	; 3
     9e0:	0e 94 89 04 	call	0x912	; 0x912 <ADC_read>
     9e4:	9d 83       	std	Y+5, r25	; 0x05
     9e6:	8c 83       	std	Y+4, r24	; 0x04
     9e8:	8c 81       	ldd	r24, Y+4	; 0x04
     9ea:	9d 81       	ldd	r25, Y+5	; 0x05
     9ec:	96 95       	lsr	r25
     9ee:	87 95       	ror	r24
     9f0:	96 95       	lsr	r25
     9f2:	87 95       	ror	r24
     9f4:	9c 01       	movw	r18, r24
     9f6:	ab ea       	ldi	r26, 0xAB	; 171
     9f8:	ba ea       	ldi	r27, 0xAA	; 170
     9fa:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__umulhisi3>
     9fe:	92 95       	swap	r25
     a00:	82 95       	swap	r24
     a02:	8f 70       	andi	r24, 0x0F	; 15
     a04:	89 27       	eor	r24, r25
     a06:	9f 70       	andi	r25, 0x0F	; 15
     a08:	89 27       	eor	r24, r25
     a0a:	9f 83       	std	Y+7, r25	; 0x07
     a0c:	8e 83       	std	Y+6, r24	; 0x06
     a0e:	8a 81       	ldd	r24, Y+2	; 0x02
     a10:	9b 81       	ldd	r25, Y+3	; 0x03
     a12:	96 95       	lsr	r25
     a14:	87 95       	ror	r24
     a16:	96 95       	lsr	r25
     a18:	87 95       	ror	r24
     a1a:	9c 01       	movw	r18, r24
     a1c:	ab ea       	ldi	r26, 0xAB	; 171
     a1e:	ba ea       	ldi	r27, 0xAA	; 170
     a20:	0e 94 4a 0c 	call	0x1894	; 0x1894 <__umulhisi3>
     a24:	92 95       	swap	r25
     a26:	82 95       	swap	r24
     a28:	8f 70       	andi	r24, 0x0F	; 15
     a2a:	89 27       	eor	r24, r25
     a2c:	9f 70       	andi	r25, 0x0F	; 15
     a2e:	89 27       	eor	r24, r25
     a30:	99 87       	std	Y+9, r25	; 0x09
     a32:	88 87       	std	Y+8, r24	; 0x08
     a34:	9e 01       	movw	r18, r28
     a36:	2c 5e       	subi	r18, 0xEC	; 236
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	88 85       	ldd	r24, Y+8	; 0x08
     a3c:	99 85       	ldd	r25, Y+9	; 0x09
     a3e:	4a e0       	ldi	r20, 0x0A	; 10
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	b9 01       	movw	r22, r18
     a44:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <itoa>
     a48:	9e 01       	movw	r18, r28
     a4a:	26 5f       	subi	r18, 0xF6	; 246
     a4c:	3f 4f       	sbci	r19, 0xFF	; 255
     a4e:	8e 81       	ldd	r24, Y+6	; 0x06
     a50:	9f 81       	ldd	r25, Y+7	; 0x07
     a52:	4a e0       	ldi	r20, 0x0A	; 10
     a54:	50 e0       	ldi	r21, 0x00	; 0
     a56:	b9 01       	movw	r22, r18
     a58:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <itoa>
     a5c:	9e 01       	movw	r18, r28
     a5e:	2c 5e       	subi	r18, 0xEC	; 236
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	ce 01       	movw	r24, r28
     a64:	0a 96       	adiw	r24, 0x0a	; 10
     a66:	b9 01       	movw	r22, r18
     a68:	0e 94 6d 0c 	call	0x18da	; 0x18da <strcat>
     a6c:	8e 81       	ldd	r24, Y+6	; 0x06
     a6e:	9f 81       	ldd	r25, Y+7	; 0x07
     a70:	82 95       	swap	r24
     a72:	92 95       	swap	r25
     a74:	90 7f       	andi	r25, 0xF0	; 240
     a76:	98 27       	eor	r25, r24
     a78:	80 7f       	andi	r24, 0xF0	; 240
     a7a:	98 27       	eor	r25, r24
     a7c:	98 2f       	mov	r25, r24
     a7e:	88 85       	ldd	r24, Y+8	; 0x08
     a80:	89 2b       	or	r24, r25
     a82:	80 93 44 08 	sts	0x0844, r24	; 0x800844 <CAN_Dial>
     a86:	80 91 44 08 	lds	r24, 0x0844	; 0x800844 <CAN_Dial>
     a8a:	6d 96       	adiw	r28, 0x1d	; 29
     a8c:	0f b6       	in	r0, 0x3f	; 63
     a8e:	f8 94       	cli
     a90:	de bf       	out	0x3e, r29	; 62
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	cd bf       	out	0x3d, r28	; 61
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	08 95       	ret

00000a9c <ADC_init>:
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	cd b7       	in	r28, 0x3d	; 61
     aa2:	de b7       	in	r29, 0x3e	; 62
     aa4:	8c e7       	ldi	r24, 0x7C	; 124
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	20 e6       	ldi	r18, 0x60	; 96
     aaa:	fc 01       	movw	r30, r24
     aac:	20 83       	st	Z, r18
     aae:	8c e7       	ldi	r24, 0x7C	; 124
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	2c e7       	ldi	r18, 0x7C	; 124
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	f9 01       	movw	r30, r18
     ab8:	20 81       	ld	r18, Z
     aba:	2f 7d       	andi	r18, 0xDF	; 223
     abc:	fc 01       	movw	r30, r24
     abe:	20 83       	st	Z, r18
     ac0:	8a e7       	ldi	r24, 0x7A	; 122
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	27 e8       	ldi	r18, 0x87	; 135
     ac6:	fc 01       	movw	r30, r24
     ac8:	20 83       	st	Z, r18
     aca:	00 00       	nop
     acc:	df 91       	pop	r29
     ace:	cf 91       	pop	r28
     ad0:	08 95       	ret

00000ad2 <spi_init>:
     ad2:	cf 93       	push	r28
     ad4:	df 93       	push	r29
     ad6:	cd b7       	in	r28, 0x3d	; 61
     ad8:	de b7       	in	r29, 0x3e	; 62
     ada:	85 e5       	ldi	r24, 0x55	; 85
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	25 e5       	ldi	r18, 0x55	; 85
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	f9 01       	movw	r30, r18
     ae4:	20 81       	ld	r18, Z
     ae6:	2f 77       	andi	r18, 0x7F	; 127
     ae8:	fc 01       	movw	r30, r24
     aea:	20 83       	st	Z, r18
     aec:	8c e4       	ldi	r24, 0x4C	; 76
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	20 e5       	ldi	r18, 0x50	; 80
     af2:	fc 01       	movw	r30, r24
     af4:	20 83       	st	Z, r18
     af6:	8d e4       	ldi	r24, 0x4D	; 77
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	21 e0       	ldi	r18, 0x01	; 1
     afc:	fc 01       	movw	r30, r24
     afe:	20 83       	st	Z, r18
     b00:	8e e4       	ldi	r24, 0x4E	; 78
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	fc 01       	movw	r30, r24
     b06:	10 82       	st	Z, r1
     b08:	00 00       	nop
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	08 95       	ret

00000b10 <spi_send_byte>:
     b10:	cf 93       	push	r28
     b12:	df 93       	push	r29
     b14:	1f 92       	push	r1
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	89 83       	std	Y+1, r24	; 0x01
     b1c:	8e e4       	ldi	r24, 0x4E	; 78
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	29 81       	ldd	r18, Y+1	; 0x01
     b22:	fc 01       	movw	r30, r24
     b24:	20 83       	st	Z, r18
     b26:	00 00       	nop
     b28:	8d e4       	ldi	r24, 0x4D	; 77
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	fc 01       	movw	r30, r24
     b2e:	80 81       	ld	r24, Z
     b30:	88 23       	and	r24, r24
     b32:	d4 f7       	brge	.-12     	; 0xb28 <spi_send_byte+0x18>
     b34:	8e e4       	ldi	r24, 0x4E	; 78
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	fc 01       	movw	r30, r24
     b3a:	80 81       	ld	r24, Z
     b3c:	0f 90       	pop	r0
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	08 95       	ret

00000b44 <uDelay>:
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	00 d0       	rcall	.+0      	; 0xb4a <uDelay+0x6>
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	9a 83       	std	Y+2, r25	; 0x02
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	00 00       	nop
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	9a 81       	ldd	r25, Y+2	; 0x02
     b58:	9c 01       	movw	r18, r24
     b5a:	21 50       	subi	r18, 0x01	; 1
     b5c:	31 09       	sbc	r19, r1
     b5e:	3a 83       	std	Y+2, r19	; 0x02
     b60:	29 83       	std	Y+1, r18	; 0x01
     b62:	89 2b       	or	r24, r25
     b64:	b9 f7       	brne	.-18     	; 0xb54 <uDelay+0x10>
     b66:	00 00       	nop
     b68:	0f 90       	pop	r0
     b6a:	0f 90       	pop	r0
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	08 95       	ret

00000b72 <Delay>:
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	00 d0       	rcall	.+0      	; 0xb78 <Delay+0x6>
     b78:	00 d0       	rcall	.+0      	; 0xb7a <Delay+0x8>
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	9c 83       	std	Y+4, r25	; 0x04
     b80:	8b 83       	std	Y+3, r24	; 0x03
     b82:	1a 82       	std	Y+2, r1	; 0x02
     b84:	19 82       	std	Y+1, r1	; 0x01
     b86:	09 c0       	rjmp	.+18     	; 0xb9a <Delay+0x28>
     b88:	80 e6       	ldi	r24, 0x60	; 96
     b8a:	94 e0       	ldi	r25, 0x04	; 4
     b8c:	0e 94 a2 05 	call	0xb44	; 0xb44 <uDelay>
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	9a 83       	std	Y+2, r25	; 0x02
     b98:	89 83       	std	Y+1, r24	; 0x01
     b9a:	29 81       	ldd	r18, Y+1	; 0x01
     b9c:	3a 81       	ldd	r19, Y+2	; 0x02
     b9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ba0:	9c 81       	ldd	r25, Y+4	; 0x04
     ba2:	28 17       	cp	r18, r24
     ba4:	39 07       	cpc	r19, r25
     ba6:	80 f3       	brcs	.-32     	; 0xb88 <Delay+0x16>
     ba8:	00 00       	nop
     baa:	0f 90       	pop	r0
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	df 91       	pop	r29
     bb4:	cf 91       	pop	r28
     bb6:	08 95       	ret

00000bb8 <Write_Command>:
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	1f 92       	push	r1
     bbe:	cd b7       	in	r28, 0x3d	; 61
     bc0:	de b7       	in	r29, 0x3e	; 62
     bc2:	89 83       	std	Y+1, r24	; 0x01
     bc4:	85 e2       	ldi	r24, 0x25	; 37
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	25 e2       	ldi	r18, 0x25	; 37
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	f9 01       	movw	r30, r18
     bce:	20 81       	ld	r18, Z
     bd0:	2f 7d       	andi	r18, 0xDF	; 223
     bd2:	fc 01       	movw	r30, r24
     bd4:	20 83       	st	Z, r18
     bd6:	8b e2       	ldi	r24, 0x2B	; 43
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	2b e2       	ldi	r18, 0x2B	; 43
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	f9 01       	movw	r30, r18
     be0:	20 81       	ld	r18, Z
     be2:	2e 7f       	andi	r18, 0xFE	; 254
     be4:	fc 01       	movw	r30, r24
     be6:	20 83       	st	Z, r18
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	0e 94 88 05 	call	0xb10	; 0xb10 <spi_send_byte>
     bee:	85 e2       	ldi	r24, 0x25	; 37
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	25 e2       	ldi	r18, 0x25	; 37
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	f9 01       	movw	r30, r18
     bf8:	20 81       	ld	r18, Z
     bfa:	20 62       	ori	r18, 0x20	; 32
     bfc:	fc 01       	movw	r30, r24
     bfe:	20 83       	st	Z, r18
     c00:	8b e2       	ldi	r24, 0x2B	; 43
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	2b e2       	ldi	r18, 0x2B	; 43
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	f9 01       	movw	r30, r18
     c0a:	20 81       	ld	r18, Z
     c0c:	21 60       	ori	r18, 0x01	; 1
     c0e:	fc 01       	movw	r30, r24
     c10:	20 83       	st	Z, r18
     c12:	00 00       	nop
     c14:	0f 90       	pop	r0
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	08 95       	ret

00000c1c <Write_Data>:
     c1c:	cf 93       	push	r28
     c1e:	df 93       	push	r29
     c20:	1f 92       	push	r1
     c22:	cd b7       	in	r28, 0x3d	; 61
     c24:	de b7       	in	r29, 0x3e	; 62
     c26:	89 83       	std	Y+1, r24	; 0x01
     c28:	8b e2       	ldi	r24, 0x2B	; 43
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	2b e2       	ldi	r18, 0x2B	; 43
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	f9 01       	movw	r30, r18
     c32:	20 81       	ld	r18, Z
     c34:	2e 7f       	andi	r18, 0xFE	; 254
     c36:	fc 01       	movw	r30, r24
     c38:	20 83       	st	Z, r18
     c3a:	85 e2       	ldi	r24, 0x25	; 37
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	25 e2       	ldi	r18, 0x25	; 37
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	f9 01       	movw	r30, r18
     c44:	20 81       	ld	r18, Z
     c46:	20 62       	ori	r18, 0x20	; 32
     c48:	fc 01       	movw	r30, r24
     c4a:	20 83       	st	Z, r18
     c4c:	89 81       	ldd	r24, Y+1	; 0x01
     c4e:	0e 94 88 05 	call	0xb10	; 0xb10 <spi_send_byte>
     c52:	85 e2       	ldi	r24, 0x25	; 37
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	25 e2       	ldi	r18, 0x25	; 37
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	f9 01       	movw	r30, r18
     c5c:	20 81       	ld	r18, Z
     c5e:	20 62       	ori	r18, 0x20	; 32
     c60:	fc 01       	movw	r30, r24
     c62:	20 83       	st	Z, r18
     c64:	8b e2       	ldi	r24, 0x2B	; 43
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	2b e2       	ldi	r18, 0x2B	; 43
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	f9 01       	movw	r30, r18
     c6e:	20 81       	ld	r18, Z
     c70:	21 60       	ori	r18, 0x01	; 1
     c72:	fc 01       	movw	r30, r24
     c74:	20 83       	st	Z, r18
     c76:	00 00       	nop
     c78:	0f 90       	pop	r0
     c7a:	df 91       	pop	r29
     c7c:	cf 91       	pop	r28
     c7e:	08 95       	ret

00000c80 <Set_Column_Address>:
     c80:	cf 93       	push	r28
     c82:	df 93       	push	r29
     c84:	00 d0       	rcall	.+0      	; 0xc86 <Set_Column_Address+0x6>
     c86:	cd b7       	in	r28, 0x3d	; 61
     c88:	de b7       	in	r29, 0x3e	; 62
     c8a:	89 83       	std	Y+1, r24	; 0x01
     c8c:	6a 83       	std	Y+2, r22	; 0x02
     c8e:	85 e1       	ldi	r24, 0x15	; 21
     c90:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     c94:	89 81       	ldd	r24, Y+1	; 0x01
     c96:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     c9a:	8a 81       	ldd	r24, Y+2	; 0x02
     c9c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     ca0:	00 00       	nop
     ca2:	0f 90       	pop	r0
     ca4:	0f 90       	pop	r0
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	08 95       	ret

00000cac <Set_Row_Address>:
     cac:	cf 93       	push	r28
     cae:	df 93       	push	r29
     cb0:	00 d0       	rcall	.+0      	; 0xcb2 <Set_Row_Address+0x6>
     cb2:	cd b7       	in	r28, 0x3d	; 61
     cb4:	de b7       	in	r29, 0x3e	; 62
     cb6:	89 83       	std	Y+1, r24	; 0x01
     cb8:	6a 83       	std	Y+2, r22	; 0x02
     cba:	85 e7       	ldi	r24, 0x75	; 117
     cbc:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     cc0:	89 81       	ldd	r24, Y+1	; 0x01
     cc2:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     cc6:	8a 81       	ldd	r24, Y+2	; 0x02
     cc8:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     ccc:	00 00       	nop
     cce:	0f 90       	pop	r0
     cd0:	0f 90       	pop	r0
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	08 95       	ret

00000cd8 <Set_Write_RAM>:
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	8c e5       	ldi	r24, 0x5C	; 92
     ce2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     ce6:	00 00       	nop
     ce8:	df 91       	pop	r29
     cea:	cf 91       	pop	r28
     cec:	08 95       	ret

00000cee <Set_Remap_Format>:
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	1f 92       	push	r1
     cf4:	cd b7       	in	r28, 0x3d	; 61
     cf6:	de b7       	in	r29, 0x3e	; 62
     cf8:	89 83       	std	Y+1, r24	; 0x01
     cfa:	80 ea       	ldi	r24, 0xA0	; 160
     cfc:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     d06:	81 e1       	ldi	r24, 0x11	; 17
     d08:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     d0c:	00 00       	nop
     d0e:	0f 90       	pop	r0
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	08 95       	ret

00000d16 <Set_Start_Line>:
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	1f 92       	push	r1
     d1c:	cd b7       	in	r28, 0x3d	; 61
     d1e:	de b7       	in	r29, 0x3e	; 62
     d20:	89 83       	std	Y+1, r24	; 0x01
     d22:	81 ea       	ldi	r24, 0xA1	; 161
     d24:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     d28:	89 81       	ldd	r24, Y+1	; 0x01
     d2a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     d2e:	00 00       	nop
     d30:	0f 90       	pop	r0
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <Set_Display_Offset>:
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	1f 92       	push	r1
     d3e:	cd b7       	in	r28, 0x3d	; 61
     d40:	de b7       	in	r29, 0x3e	; 62
     d42:	89 83       	std	Y+1, r24	; 0x01
     d44:	82 ea       	ldi	r24, 0xA2	; 162
     d46:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
     d4c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     d50:	00 00       	nop
     d52:	0f 90       	pop	r0
     d54:	df 91       	pop	r29
     d56:	cf 91       	pop	r28
     d58:	08 95       	ret

00000d5a <Set_Display_Mode>:
     d5a:	cf 93       	push	r28
     d5c:	df 93       	push	r29
     d5e:	1f 92       	push	r1
     d60:	cd b7       	in	r28, 0x3d	; 61
     d62:	de b7       	in	r29, 0x3e	; 62
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	89 81       	ldd	r24, Y+1	; 0x01
     d68:	84 6a       	ori	r24, 0xA4	; 164
     d6a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     d6e:	00 00       	nop
     d70:	0f 90       	pop	r0
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	08 95       	ret

00000d78 <Set_Partial_Display>:
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	00 d0       	rcall	.+0      	; 0xd7e <Set_Partial_Display+0x6>
     d7e:	1f 92       	push	r1
     d80:	cd b7       	in	r28, 0x3d	; 61
     d82:	de b7       	in	r29, 0x3e	; 62
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	6a 83       	std	Y+2, r22	; 0x02
     d88:	4b 83       	std	Y+3, r20	; 0x03
     d8a:	89 81       	ldd	r24, Y+1	; 0x01
     d8c:	88 6a       	ori	r24, 0xA8	; 168
     d8e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     d92:	89 81       	ldd	r24, Y+1	; 0x01
     d94:	88 23       	and	r24, r24
     d96:	31 f4       	brne	.+12     	; 0xda4 <Set_Partial_Display+0x2c>
     d98:	8a 81       	ldd	r24, Y+2	; 0x02
     d9a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     d9e:	8b 81       	ldd	r24, Y+3	; 0x03
     da0:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     da4:	00 00       	nop
     da6:	0f 90       	pop	r0
     da8:	0f 90       	pop	r0
     daa:	0f 90       	pop	r0
     dac:	df 91       	pop	r29
     dae:	cf 91       	pop	r28
     db0:	08 95       	ret

00000db2 <Set_Function_Selection>:
     db2:	cf 93       	push	r28
     db4:	df 93       	push	r29
     db6:	1f 92       	push	r1
     db8:	cd b7       	in	r28, 0x3d	; 61
     dba:	de b7       	in	r29, 0x3e	; 62
     dbc:	89 83       	std	Y+1, r24	; 0x01
     dbe:	8b ea       	ldi	r24, 0xAB	; 171
     dc0:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     dca:	00 00       	nop
     dcc:	0f 90       	pop	r0
     dce:	df 91       	pop	r29
     dd0:	cf 91       	pop	r28
     dd2:	08 95       	ret

00000dd4 <Set_Display_On_Off>:
     dd4:	cf 93       	push	r28
     dd6:	df 93       	push	r29
     dd8:	1f 92       	push	r1
     dda:	cd b7       	in	r28, 0x3d	; 61
     ddc:	de b7       	in	r29, 0x3e	; 62
     dde:	89 83       	std	Y+1, r24	; 0x01
     de0:	89 81       	ldd	r24, Y+1	; 0x01
     de2:	8e 6a       	ori	r24, 0xAE	; 174
     de4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     de8:	00 00       	nop
     dea:	0f 90       	pop	r0
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <Set_Phase_Length>:
     df2:	cf 93       	push	r28
     df4:	df 93       	push	r29
     df6:	1f 92       	push	r1
     df8:	cd b7       	in	r28, 0x3d	; 61
     dfa:	de b7       	in	r29, 0x3e	; 62
     dfc:	89 83       	std	Y+1, r24	; 0x01
     dfe:	81 eb       	ldi	r24, 0xB1	; 177
     e00:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     e04:	89 81       	ldd	r24, Y+1	; 0x01
     e06:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     e0a:	00 00       	nop
     e0c:	0f 90       	pop	r0
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	08 95       	ret

00000e14 <Set_Display_Clock>:
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	1f 92       	push	r1
     e1a:	cd b7       	in	r28, 0x3d	; 61
     e1c:	de b7       	in	r29, 0x3e	; 62
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	83 eb       	ldi	r24, 0xB3	; 179
     e22:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     e26:	89 81       	ldd	r24, Y+1	; 0x01
     e28:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     e2c:	00 00       	nop
     e2e:	0f 90       	pop	r0
     e30:	df 91       	pop	r29
     e32:	cf 91       	pop	r28
     e34:	08 95       	ret

00000e36 <Set_Display_Enhancement_A>:
     e36:	cf 93       	push	r28
     e38:	df 93       	push	r29
     e3a:	00 d0       	rcall	.+0      	; 0xe3c <Set_Display_Enhancement_A+0x6>
     e3c:	cd b7       	in	r28, 0x3d	; 61
     e3e:	de b7       	in	r29, 0x3e	; 62
     e40:	89 83       	std	Y+1, r24	; 0x01
     e42:	6a 83       	std	Y+2, r22	; 0x02
     e44:	84 eb       	ldi	r24, 0xB4	; 180
     e46:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     e4a:	89 81       	ldd	r24, Y+1	; 0x01
     e4c:	80 6a       	ori	r24, 0xA0	; 160
     e4e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     e52:	8a 81       	ldd	r24, Y+2	; 0x02
     e54:	85 60       	ori	r24, 0x05	; 5
     e56:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     e5a:	00 00       	nop
     e5c:	0f 90       	pop	r0
     e5e:	0f 90       	pop	r0
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	08 95       	ret

00000e66 <Set_GPIO>:
     e66:	cf 93       	push	r28
     e68:	df 93       	push	r29
     e6a:	1f 92       	push	r1
     e6c:	cd b7       	in	r28, 0x3d	; 61
     e6e:	de b7       	in	r29, 0x3e	; 62
     e70:	89 83       	std	Y+1, r24	; 0x01
     e72:	85 eb       	ldi	r24, 0xB5	; 181
     e74:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     e78:	89 81       	ldd	r24, Y+1	; 0x01
     e7a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     e7e:	00 00       	nop
     e80:	0f 90       	pop	r0
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	08 95       	ret

00000e88 <Set_Precharge_Period>:
     e88:	cf 93       	push	r28
     e8a:	df 93       	push	r29
     e8c:	1f 92       	push	r1
     e8e:	cd b7       	in	r28, 0x3d	; 61
     e90:	de b7       	in	r29, 0x3e	; 62
     e92:	89 83       	std	Y+1, r24	; 0x01
     e94:	86 eb       	ldi	r24, 0xB6	; 182
     e96:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     e9a:	89 81       	ldd	r24, Y+1	; 0x01
     e9c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     ea0:	00 00       	nop
     ea2:	0f 90       	pop	r0
     ea4:	df 91       	pop	r29
     ea6:	cf 91       	pop	r28
     ea8:	08 95       	ret

00000eaa <Set_Precharge_Voltage>:
     eaa:	cf 93       	push	r28
     eac:	df 93       	push	r29
     eae:	1f 92       	push	r1
     eb0:	cd b7       	in	r28, 0x3d	; 61
     eb2:	de b7       	in	r29, 0x3e	; 62
     eb4:	89 83       	std	Y+1, r24	; 0x01
     eb6:	8b eb       	ldi	r24, 0xBB	; 187
     eb8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     ebc:	89 81       	ldd	r24, Y+1	; 0x01
     ebe:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     ec2:	00 00       	nop
     ec4:	0f 90       	pop	r0
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	08 95       	ret

00000ecc <Set_VCOMH>:
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	1f 92       	push	r1
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	89 83       	std	Y+1, r24	; 0x01
     ed8:	8e eb       	ldi	r24, 0xBE	; 190
     eda:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     ede:	89 81       	ldd	r24, Y+1	; 0x01
     ee0:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     ee4:	00 00       	nop
     ee6:	0f 90       	pop	r0
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	08 95       	ret

00000eee <Set_Contrast_Current>:
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	1f 92       	push	r1
     ef4:	cd b7       	in	r28, 0x3d	; 61
     ef6:	de b7       	in	r29, 0x3e	; 62
     ef8:	89 83       	std	Y+1, r24	; 0x01
     efa:	81 ec       	ldi	r24, 0xC1	; 193
     efc:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     f00:	89 81       	ldd	r24, Y+1	; 0x01
     f02:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f06:	00 00       	nop
     f08:	0f 90       	pop	r0
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	08 95       	ret

00000f10 <Set_Master_Current>:
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	1f 92       	push	r1
     f16:	cd b7       	in	r28, 0x3d	; 61
     f18:	de b7       	in	r29, 0x3e	; 62
     f1a:	89 83       	std	Y+1, r24	; 0x01
     f1c:	87 ec       	ldi	r24, 0xC7	; 199
     f1e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f28:	00 00       	nop
     f2a:	0f 90       	pop	r0
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	08 95       	ret

00000f32 <Set_Multiplex_Ratio>:
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	1f 92       	push	r1
     f38:	cd b7       	in	r28, 0x3d	; 61
     f3a:	de b7       	in	r29, 0x3e	; 62
     f3c:	89 83       	std	Y+1, r24	; 0x01
     f3e:	8a ec       	ldi	r24, 0xCA	; 202
     f40:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     f44:	89 81       	ldd	r24, Y+1	; 0x01
     f46:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f4a:	00 00       	nop
     f4c:	0f 90       	pop	r0
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	08 95       	ret

00000f54 <Set_Display_Enhancement_B>:
     f54:	cf 93       	push	r28
     f56:	df 93       	push	r29
     f58:	1f 92       	push	r1
     f5a:	cd b7       	in	r28, 0x3d	; 61
     f5c:	de b7       	in	r29, 0x3e	; 62
     f5e:	89 83       	std	Y+1, r24	; 0x01
     f60:	81 ed       	ldi	r24, 0xD1	; 209
     f62:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     f66:	89 81       	ldd	r24, Y+1	; 0x01
     f68:	82 68       	ori	r24, 0x82	; 130
     f6a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f6e:	80 e2       	ldi	r24, 0x20	; 32
     f70:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f74:	00 00       	nop
     f76:	0f 90       	pop	r0
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	08 95       	ret

00000f7e <Set_Command_Lock>:
     f7e:	cf 93       	push	r28
     f80:	df 93       	push	r29
     f82:	1f 92       	push	r1
     f84:	cd b7       	in	r28, 0x3d	; 61
     f86:	de b7       	in	r29, 0x3e	; 62
     f88:	89 83       	std	Y+1, r24	; 0x01
     f8a:	8d ef       	ldi	r24, 0xFD	; 253
     f8c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
     f90:	89 81       	ldd	r24, Y+1	; 0x01
     f92:	82 61       	ori	r24, 0x12	; 18
     f94:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     f98:	00 00       	nop
     f9a:	0f 90       	pop	r0
     f9c:	df 91       	pop	r29
     f9e:	cf 91       	pop	r28
     fa0:	08 95       	ret

00000fa2 <Fill_RAM>:
     fa2:	cf 93       	push	r28
     fa4:	df 93       	push	r29
     fa6:	00 d0       	rcall	.+0      	; 0xfa8 <Fill_RAM+0x6>
     fa8:	1f 92       	push	r1
     faa:	cd b7       	in	r28, 0x3d	; 61
     fac:	de b7       	in	r29, 0x3e	; 62
     fae:	8b 83       	std	Y+3, r24	; 0x03
     fb0:	67 e7       	ldi	r22, 0x77	; 119
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	0e 94 40 06 	call	0xc80	; 0xc80 <Set_Column_Address>
     fb8:	6f e7       	ldi	r22, 0x7F	; 127
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	0e 94 56 06 	call	0xcac	; 0xcac <Set_Row_Address>
     fc0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <Set_Write_RAM>
     fc4:	19 82       	std	Y+1, r1	; 0x01
     fc6:	0e c0       	rjmp	.+28     	; 0xfe4 <Fill_RAM+0x42>
     fc8:	1a 82       	std	Y+2, r1	; 0x02
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <Fill_RAM+0x36>
     fcc:	8b 81       	ldd	r24, Y+3	; 0x03
     fce:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
     fd2:	8a 81       	ldd	r24, Y+2	; 0x02
     fd4:	8f 5f       	subi	r24, 0xFF	; 255
     fd6:	8a 83       	std	Y+2, r24	; 0x02
     fd8:	8a 81       	ldd	r24, Y+2	; 0x02
     fda:	88 37       	cpi	r24, 0x78	; 120
     fdc:	b8 f3       	brcs	.-18     	; 0xfcc <Fill_RAM+0x2a>
     fde:	89 81       	ldd	r24, Y+1	; 0x01
     fe0:	8f 5f       	subi	r24, 0xFF	; 255
     fe2:	89 83       	std	Y+1, r24	; 0x01
     fe4:	89 81       	ldd	r24, Y+1	; 0x01
     fe6:	88 23       	and	r24, r24
     fe8:	7c f7       	brge	.-34     	; 0xfc8 <Fill_RAM+0x26>
     fea:	00 00       	nop
     fec:	0f 90       	pop	r0
     fee:	0f 90       	pop	r0
     ff0:	0f 90       	pop	r0
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	08 95       	ret

00000ff8 <Show_Font57>:
     ff8:	cf 93       	push	r28
     ffa:	df 93       	push	r29
     ffc:	cd b7       	in	r28, 0x3d	; 61
     ffe:	de b7       	in	r29, 0x3e	; 62
    1000:	2e 97       	sbiw	r28, 0x0e	; 14
    1002:	0f b6       	in	r0, 0x3f	; 63
    1004:	f8 94       	cli
    1006:	de bf       	out	0x3e, r29	; 62
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	cd bf       	out	0x3d, r28	; 61
    100c:	8b 87       	std	Y+11, r24	; 0x0b
    100e:	6c 87       	std	Y+12, r22	; 0x0c
    1010:	4d 87       	std	Y+13, r20	; 0x0d
    1012:	2e 87       	std	Y+14, r18	; 0x0e
    1014:	8c 85       	ldd	r24, Y+12	; 0x0c
    1016:	88 2f       	mov	r24, r24
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	81 97       	sbiw	r24, 0x21	; 33
    101c:	98 87       	std	Y+8, r25	; 0x08
    101e:	8f 83       	std	Y+7, r24	; 0x07
    1020:	8b 85       	ldd	r24, Y+11	; 0x0b
    1022:	88 2f       	mov	r24, r24
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	81 30       	cpi	r24, 0x01	; 1
    1028:	91 05       	cpc	r25, r1
    102a:	19 f0       	breq	.+6      	; 0x1032 <Show_Font57+0x3a>
    102c:	02 97       	sbiw	r24, 0x02	; 2
    102e:	79 f0       	breq	.+30     	; 0x104e <Show_Font57+0x56>
    1030:	20 c0       	rjmp	.+64     	; 0x1072 <Show_Font57+0x7a>
    1032:	2f 81       	ldd	r18, Y+7	; 0x07
    1034:	38 85       	ldd	r19, Y+8	; 0x08
    1036:	c9 01       	movw	r24, r18
    1038:	88 0f       	add	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	88 0f       	add	r24, r24
    103e:	99 1f       	adc	r25, r25
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	80 5e       	subi	r24, 0xE0	; 224
    1046:	9e 4f       	sbci	r25, 0xFE	; 254
    1048:	9a 83       	std	Y+2, r25	; 0x02
    104a:	89 83       	std	Y+1, r24	; 0x01
    104c:	12 c0       	rjmp	.+36     	; 0x1072 <Show_Font57+0x7a>
    104e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1050:	88 2f       	mov	r24, r24
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	9c 01       	movw	r18, r24
    1056:	21 50       	subi	r18, 0x01	; 1
    1058:	31 09       	sbc	r19, r1
    105a:	c9 01       	movw	r24, r18
    105c:	88 0f       	add	r24, r24
    105e:	99 1f       	adc	r25, r25
    1060:	88 0f       	add	r24, r24
    1062:	99 1f       	adc	r25, r25
    1064:	82 0f       	add	r24, r18
    1066:	93 1f       	adc	r25, r19
    1068:	80 53       	subi	r24, 0x30	; 48
    106a:	9a 4f       	sbci	r25, 0xFA	; 250
    106c:	9a 83       	std	Y+2, r25	; 0x02
    106e:	89 83       	std	Y+1, r24	; 0x01
    1070:	00 00       	nop
    1072:	85 e1       	ldi	r24, 0x15	; 21
    1074:	0e 94 77 06 	call	0xcee	; 0xcee <Set_Remap_Format>
    1078:	1b 82       	std	Y+3, r1	; 0x03
    107a:	0d c3       	rjmp	.+1562   	; 0x1696 <__stack+0x597>
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	9a 81       	ldd	r25, Y+2	; 0x02
    1080:	fc 01       	movw	r30, r24
    1082:	80 81       	ld	r24, Z
    1084:	89 87       	std	Y+9, r24	; 0x09
    1086:	89 81       	ldd	r24, Y+1	; 0x01
    1088:	9a 81       	ldd	r25, Y+2	; 0x02
    108a:	01 96       	adiw	r24, 0x01	; 1
    108c:	9a 83       	std	Y+2, r25	; 0x02
    108e:	89 83       	std	Y+1, r24	; 0x01
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	81 30       	cpi	r24, 0x01	; 1
    1094:	21 f4       	brne	.+8      	; 0x109e <Show_Font57+0xa6>
    1096:	1c 82       	std	Y+4, r1	; 0x04
    1098:	1d 82       	std	Y+5, r1	; 0x05
    109a:	1e 82       	std	Y+6, r1	; 0x06
    109c:	1e c0       	rjmp	.+60     	; 0x10da <Show_Font57+0xe2>
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	9a 81       	ldd	r25, Y+2	; 0x02
    10a2:	fc 01       	movw	r30, r24
    10a4:	80 81       	ld	r24, Z
    10a6:	8c 83       	std	Y+4, r24	; 0x04
    10a8:	89 81       	ldd	r24, Y+1	; 0x01
    10aa:	9a 81       	ldd	r25, Y+2	; 0x02
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	9a 83       	std	Y+2, r25	; 0x02
    10b0:	89 83       	std	Y+1, r24	; 0x01
    10b2:	89 81       	ldd	r24, Y+1	; 0x01
    10b4:	9a 81       	ldd	r25, Y+2	; 0x02
    10b6:	fc 01       	movw	r30, r24
    10b8:	80 81       	ld	r24, Z
    10ba:	8d 83       	std	Y+5, r24	; 0x05
    10bc:	89 81       	ldd	r24, Y+1	; 0x01
    10be:	9a 81       	ldd	r25, Y+2	; 0x02
    10c0:	01 96       	adiw	r24, 0x01	; 1
    10c2:	9a 83       	std	Y+2, r25	; 0x02
    10c4:	89 83       	std	Y+1, r24	; 0x01
    10c6:	89 81       	ldd	r24, Y+1	; 0x01
    10c8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ca:	fc 01       	movw	r30, r24
    10cc:	80 81       	ld	r24, Z
    10ce:	8e 83       	std	Y+6, r24	; 0x06
    10d0:	89 81       	ldd	r24, Y+1	; 0x01
    10d2:	9a 81       	ldd	r25, Y+2	; 0x02
    10d4:	01 96       	adiw	r24, 0x01	; 1
    10d6:	9a 83       	std	Y+2, r25	; 0x02
    10d8:	89 83       	std	Y+1, r24	; 0x01
    10da:	8d 85       	ldd	r24, Y+13	; 0x0d
    10dc:	9c e1       	ldi	r25, 0x1C	; 28
    10de:	98 0f       	add	r25, r24
    10e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    10e2:	84 5e       	subi	r24, 0xE4	; 228
    10e4:	69 2f       	mov	r22, r25
    10e6:	0e 94 40 06 	call	0xc80	; 0xc80 <Set_Column_Address>
    10ea:	8e 85       	ldd	r24, Y+14	; 0x0e
    10ec:	89 5f       	subi	r24, 0xF9	; 249
    10ee:	68 2f       	mov	r22, r24
    10f0:	8e 85       	ldd	r24, Y+14	; 0x0e
    10f2:	0e 94 56 06 	call	0xcac	; 0xcac <Set_Row_Address>
    10f6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <Set_Write_RAM>
    10fa:	89 85       	ldd	r24, Y+9	; 0x09
    10fc:	88 2f       	mov	r24, r24
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	81 70       	andi	r24, 0x01	; 1
    1102:	99 27       	eor	r25, r25
    1104:	82 95       	swap	r24
    1106:	92 95       	swap	r25
    1108:	90 7f       	andi	r25, 0xF0	; 240
    110a:	98 27       	eor	r25, r24
    110c:	80 7f       	andi	r24, 0xF0	; 240
    110e:	98 27       	eor	r25, r24
    1110:	98 2f       	mov	r25, r24
    1112:	8c 81       	ldd	r24, Y+4	; 0x04
    1114:	81 70       	andi	r24, 0x01	; 1
    1116:	89 2b       	or	r24, r25
    1118:	8a 87       	std	Y+10, r24	; 0x0a
    111a:	8a 85       	ldd	r24, Y+10	; 0x0a
    111c:	88 2f       	mov	r24, r24
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	88 0f       	add	r24, r24
    1122:	99 1f       	adc	r25, r25
    1124:	98 2f       	mov	r25, r24
    1126:	8a 85       	ldd	r24, Y+10	; 0x0a
    1128:	29 2f       	mov	r18, r25
    112a:	28 2b       	or	r18, r24
    112c:	8a 85       	ldd	r24, Y+10	; 0x0a
    112e:	88 2f       	mov	r24, r24
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	88 0f       	add	r24, r24
    1134:	99 1f       	adc	r25, r25
    1136:	88 0f       	add	r24, r24
    1138:	99 1f       	adc	r25, r25
    113a:	28 2b       	or	r18, r24
    113c:	8a 85       	ldd	r24, Y+10	; 0x0a
    113e:	88 2f       	mov	r24, r24
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	88 0f       	add	r24, r24
    1144:	99 1f       	adc	r25, r25
    1146:	88 0f       	add	r24, r24
    1148:	99 1f       	adc	r25, r25
    114a:	88 0f       	add	r24, r24
    114c:	99 1f       	adc	r25, r25
    114e:	82 2b       	or	r24, r18
    1150:	8a 87       	std	Y+10, r24	; 0x0a
    1152:	8a 85       	ldd	r24, Y+10	; 0x0a
    1154:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1158:	8d 81       	ldd	r24, Y+5	; 0x05
    115a:	88 2f       	mov	r24, r24
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	81 70       	andi	r24, 0x01	; 1
    1160:	99 27       	eor	r25, r25
    1162:	82 95       	swap	r24
    1164:	92 95       	swap	r25
    1166:	90 7f       	andi	r25, 0xF0	; 240
    1168:	98 27       	eor	r25, r24
    116a:	80 7f       	andi	r24, 0xF0	; 240
    116c:	98 27       	eor	r25, r24
    116e:	98 2f       	mov	r25, r24
    1170:	8e 81       	ldd	r24, Y+6	; 0x06
    1172:	81 70       	andi	r24, 0x01	; 1
    1174:	89 2b       	or	r24, r25
    1176:	8a 87       	std	Y+10, r24	; 0x0a
    1178:	8a 85       	ldd	r24, Y+10	; 0x0a
    117a:	88 2f       	mov	r24, r24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	88 0f       	add	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	98 2f       	mov	r25, r24
    1184:	8a 85       	ldd	r24, Y+10	; 0x0a
    1186:	29 2f       	mov	r18, r25
    1188:	28 2b       	or	r18, r24
    118a:	8a 85       	ldd	r24, Y+10	; 0x0a
    118c:	88 2f       	mov	r24, r24
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	88 0f       	add	r24, r24
    1192:	99 1f       	adc	r25, r25
    1194:	88 0f       	add	r24, r24
    1196:	99 1f       	adc	r25, r25
    1198:	28 2b       	or	r18, r24
    119a:	8a 85       	ldd	r24, Y+10	; 0x0a
    119c:	88 2f       	mov	r24, r24
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	88 0f       	add	r24, r24
    11a2:	99 1f       	adc	r25, r25
    11a4:	88 0f       	add	r24, r24
    11a6:	99 1f       	adc	r25, r25
    11a8:	88 0f       	add	r24, r24
    11aa:	99 1f       	adc	r25, r25
    11ac:	82 2b       	or	r24, r18
    11ae:	8a 87       	std	Y+10, r24	; 0x0a
    11b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    11b2:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    11b6:	89 85       	ldd	r24, Y+9	; 0x09
    11b8:	88 2f       	mov	r24, r24
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	82 70       	andi	r24, 0x02	; 2
    11be:	99 27       	eor	r25, r25
    11c0:	88 0f       	add	r24, r24
    11c2:	99 1f       	adc	r25, r25
    11c4:	88 0f       	add	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	88 0f       	add	r24, r24
    11ca:	99 1f       	adc	r25, r25
    11cc:	28 2f       	mov	r18, r24
    11ce:	8c 81       	ldd	r24, Y+4	; 0x04
    11d0:	88 2f       	mov	r24, r24
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	82 70       	andi	r24, 0x02	; 2
    11d6:	99 27       	eor	r25, r25
    11d8:	95 95       	asr	r25
    11da:	87 95       	ror	r24
    11dc:	82 2b       	or	r24, r18
    11de:	8a 87       	std	Y+10, r24	; 0x0a
    11e0:	8a 85       	ldd	r24, Y+10	; 0x0a
    11e2:	88 2f       	mov	r24, r24
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	88 0f       	add	r24, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	98 2f       	mov	r25, r24
    11ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    11ee:	29 2f       	mov	r18, r25
    11f0:	28 2b       	or	r18, r24
    11f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    11f4:	88 2f       	mov	r24, r24
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	88 0f       	add	r24, r24
    11fe:	99 1f       	adc	r25, r25
    1200:	28 2b       	or	r18, r24
    1202:	8a 85       	ldd	r24, Y+10	; 0x0a
    1204:	88 2f       	mov	r24, r24
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	88 0f       	add	r24, r24
    120a:	99 1f       	adc	r25, r25
    120c:	88 0f       	add	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	88 0f       	add	r24, r24
    1212:	99 1f       	adc	r25, r25
    1214:	82 2b       	or	r24, r18
    1216:	8a 87       	std	Y+10, r24	; 0x0a
    1218:	8a 85       	ldd	r24, Y+10	; 0x0a
    121a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    121e:	8d 81       	ldd	r24, Y+5	; 0x05
    1220:	88 2f       	mov	r24, r24
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	82 70       	andi	r24, 0x02	; 2
    1226:	99 27       	eor	r25, r25
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	88 0f       	add	r24, r24
    122e:	99 1f       	adc	r25, r25
    1230:	88 0f       	add	r24, r24
    1232:	99 1f       	adc	r25, r25
    1234:	28 2f       	mov	r18, r24
    1236:	8e 81       	ldd	r24, Y+6	; 0x06
    1238:	88 2f       	mov	r24, r24
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	82 70       	andi	r24, 0x02	; 2
    123e:	99 27       	eor	r25, r25
    1240:	95 95       	asr	r25
    1242:	87 95       	ror	r24
    1244:	82 2b       	or	r24, r18
    1246:	8a 87       	std	Y+10, r24	; 0x0a
    1248:	8a 85       	ldd	r24, Y+10	; 0x0a
    124a:	88 2f       	mov	r24, r24
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	88 0f       	add	r24, r24
    1250:	99 1f       	adc	r25, r25
    1252:	98 2f       	mov	r25, r24
    1254:	8a 85       	ldd	r24, Y+10	; 0x0a
    1256:	29 2f       	mov	r18, r25
    1258:	28 2b       	or	r18, r24
    125a:	8a 85       	ldd	r24, Y+10	; 0x0a
    125c:	88 2f       	mov	r24, r24
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	88 0f       	add	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	88 0f       	add	r24, r24
    1266:	99 1f       	adc	r25, r25
    1268:	28 2b       	or	r18, r24
    126a:	8a 85       	ldd	r24, Y+10	; 0x0a
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	88 0f       	add	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	88 0f       	add	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	88 0f       	add	r24, r24
    127a:	99 1f       	adc	r25, r25
    127c:	82 2b       	or	r24, r18
    127e:	8a 87       	std	Y+10, r24	; 0x0a
    1280:	8a 85       	ldd	r24, Y+10	; 0x0a
    1282:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1286:	89 85       	ldd	r24, Y+9	; 0x09
    1288:	88 2f       	mov	r24, r24
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	84 70       	andi	r24, 0x04	; 4
    128e:	99 27       	eor	r25, r25
    1290:	88 0f       	add	r24, r24
    1292:	99 1f       	adc	r25, r25
    1294:	88 0f       	add	r24, r24
    1296:	99 1f       	adc	r25, r25
    1298:	28 2f       	mov	r18, r24
    129a:	8c 81       	ldd	r24, Y+4	; 0x04
    129c:	88 2f       	mov	r24, r24
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	84 70       	andi	r24, 0x04	; 4
    12a2:	99 27       	eor	r25, r25
    12a4:	95 95       	asr	r25
    12a6:	87 95       	ror	r24
    12a8:	95 95       	asr	r25
    12aa:	87 95       	ror	r24
    12ac:	82 2b       	or	r24, r18
    12ae:	8a 87       	std	Y+10, r24	; 0x0a
    12b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    12b2:	88 2f       	mov	r24, r24
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	88 0f       	add	r24, r24
    12b8:	99 1f       	adc	r25, r25
    12ba:	98 2f       	mov	r25, r24
    12bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    12be:	29 2f       	mov	r18, r25
    12c0:	28 2b       	or	r18, r24
    12c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    12c4:	88 2f       	mov	r24, r24
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	88 0f       	add	r24, r24
    12ca:	99 1f       	adc	r25, r25
    12cc:	88 0f       	add	r24, r24
    12ce:	99 1f       	adc	r25, r25
    12d0:	28 2b       	or	r18, r24
    12d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    12d4:	88 2f       	mov	r24, r24
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	88 0f       	add	r24, r24
    12da:	99 1f       	adc	r25, r25
    12dc:	88 0f       	add	r24, r24
    12de:	99 1f       	adc	r25, r25
    12e0:	88 0f       	add	r24, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	82 2b       	or	r24, r18
    12e6:	8a 87       	std	Y+10, r24	; 0x0a
    12e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    12ea:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    12ee:	8d 81       	ldd	r24, Y+5	; 0x05
    12f0:	88 2f       	mov	r24, r24
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	84 70       	andi	r24, 0x04	; 4
    12f6:	99 27       	eor	r25, r25
    12f8:	88 0f       	add	r24, r24
    12fa:	99 1f       	adc	r25, r25
    12fc:	88 0f       	add	r24, r24
    12fe:	99 1f       	adc	r25, r25
    1300:	28 2f       	mov	r18, r24
    1302:	8e 81       	ldd	r24, Y+6	; 0x06
    1304:	88 2f       	mov	r24, r24
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	84 70       	andi	r24, 0x04	; 4
    130a:	99 27       	eor	r25, r25
    130c:	95 95       	asr	r25
    130e:	87 95       	ror	r24
    1310:	95 95       	asr	r25
    1312:	87 95       	ror	r24
    1314:	82 2b       	or	r24, r18
    1316:	8a 87       	std	Y+10, r24	; 0x0a
    1318:	8a 85       	ldd	r24, Y+10	; 0x0a
    131a:	88 2f       	mov	r24, r24
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	88 0f       	add	r24, r24
    1320:	99 1f       	adc	r25, r25
    1322:	98 2f       	mov	r25, r24
    1324:	8a 85       	ldd	r24, Y+10	; 0x0a
    1326:	29 2f       	mov	r18, r25
    1328:	28 2b       	or	r18, r24
    132a:	8a 85       	ldd	r24, Y+10	; 0x0a
    132c:	88 2f       	mov	r24, r24
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	88 0f       	add	r24, r24
    1332:	99 1f       	adc	r25, r25
    1334:	88 0f       	add	r24, r24
    1336:	99 1f       	adc	r25, r25
    1338:	28 2b       	or	r18, r24
    133a:	8a 85       	ldd	r24, Y+10	; 0x0a
    133c:	88 2f       	mov	r24, r24
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	88 0f       	add	r24, r24
    1342:	99 1f       	adc	r25, r25
    1344:	88 0f       	add	r24, r24
    1346:	99 1f       	adc	r25, r25
    1348:	88 0f       	add	r24, r24
    134a:	99 1f       	adc	r25, r25
    134c:	82 2b       	or	r24, r18
    134e:	8a 87       	std	Y+10, r24	; 0x0a
    1350:	8a 85       	ldd	r24, Y+10	; 0x0a
    1352:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1356:	89 85       	ldd	r24, Y+9	; 0x09
    1358:	88 2f       	mov	r24, r24
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	88 70       	andi	r24, 0x08	; 8
    135e:	99 27       	eor	r25, r25
    1360:	88 0f       	add	r24, r24
    1362:	99 1f       	adc	r25, r25
    1364:	28 2f       	mov	r18, r24
    1366:	8c 81       	ldd	r24, Y+4	; 0x04
    1368:	88 2f       	mov	r24, r24
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	88 70       	andi	r24, 0x08	; 8
    136e:	99 27       	eor	r25, r25
    1370:	95 95       	asr	r25
    1372:	87 95       	ror	r24
    1374:	95 95       	asr	r25
    1376:	87 95       	ror	r24
    1378:	95 95       	asr	r25
    137a:	87 95       	ror	r24
    137c:	82 2b       	or	r24, r18
    137e:	8a 87       	std	Y+10, r24	; 0x0a
    1380:	8a 85       	ldd	r24, Y+10	; 0x0a
    1382:	88 2f       	mov	r24, r24
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	88 0f       	add	r24, r24
    1388:	99 1f       	adc	r25, r25
    138a:	98 2f       	mov	r25, r24
    138c:	8a 85       	ldd	r24, Y+10	; 0x0a
    138e:	29 2f       	mov	r18, r25
    1390:	28 2b       	or	r18, r24
    1392:	8a 85       	ldd	r24, Y+10	; 0x0a
    1394:	88 2f       	mov	r24, r24
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	88 0f       	add	r24, r24
    139a:	99 1f       	adc	r25, r25
    139c:	88 0f       	add	r24, r24
    139e:	99 1f       	adc	r25, r25
    13a0:	28 2b       	or	r18, r24
    13a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13a4:	88 2f       	mov	r24, r24
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	88 0f       	add	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	88 0f       	add	r24, r24
    13ae:	99 1f       	adc	r25, r25
    13b0:	88 0f       	add	r24, r24
    13b2:	99 1f       	adc	r25, r25
    13b4:	82 2b       	or	r24, r18
    13b6:	8a 87       	std	Y+10, r24	; 0x0a
    13b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ba:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    13be:	8d 81       	ldd	r24, Y+5	; 0x05
    13c0:	88 2f       	mov	r24, r24
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	88 70       	andi	r24, 0x08	; 8
    13c6:	99 27       	eor	r25, r25
    13c8:	88 0f       	add	r24, r24
    13ca:	99 1f       	adc	r25, r25
    13cc:	28 2f       	mov	r18, r24
    13ce:	8e 81       	ldd	r24, Y+6	; 0x06
    13d0:	88 2f       	mov	r24, r24
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	88 70       	andi	r24, 0x08	; 8
    13d6:	99 27       	eor	r25, r25
    13d8:	95 95       	asr	r25
    13da:	87 95       	ror	r24
    13dc:	95 95       	asr	r25
    13de:	87 95       	ror	r24
    13e0:	95 95       	asr	r25
    13e2:	87 95       	ror	r24
    13e4:	82 2b       	or	r24, r18
    13e6:	8a 87       	std	Y+10, r24	; 0x0a
    13e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ea:	88 2f       	mov	r24, r24
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	88 0f       	add	r24, r24
    13f0:	99 1f       	adc	r25, r25
    13f2:	98 2f       	mov	r25, r24
    13f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    13f6:	29 2f       	mov	r18, r25
    13f8:	28 2b       	or	r18, r24
    13fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    13fc:	88 2f       	mov	r24, r24
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	88 0f       	add	r24, r24
    1402:	99 1f       	adc	r25, r25
    1404:	88 0f       	add	r24, r24
    1406:	99 1f       	adc	r25, r25
    1408:	28 2b       	or	r18, r24
    140a:	8a 85       	ldd	r24, Y+10	; 0x0a
    140c:	88 2f       	mov	r24, r24
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	88 0f       	add	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	88 0f       	add	r24, r24
    1416:	99 1f       	adc	r25, r25
    1418:	88 0f       	add	r24, r24
    141a:	99 1f       	adc	r25, r25
    141c:	82 2b       	or	r24, r18
    141e:	8a 87       	std	Y+10, r24	; 0x0a
    1420:	8a 85       	ldd	r24, Y+10	; 0x0a
    1422:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1426:	89 85       	ldd	r24, Y+9	; 0x09
    1428:	88 2f       	mov	r24, r24
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	80 71       	andi	r24, 0x10	; 16
    142e:	99 27       	eor	r25, r25
    1430:	88 0f       	add	r24, r24
    1432:	99 1f       	adc	r25, r25
    1434:	88 0f       	add	r24, r24
    1436:	99 1f       	adc	r25, r25
    1438:	88 0f       	add	r24, r24
    143a:	99 1f       	adc	r25, r25
    143c:	28 2f       	mov	r18, r24
    143e:	8c 81       	ldd	r24, Y+4	; 0x04
    1440:	88 2f       	mov	r24, r24
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	80 71       	andi	r24, 0x10	; 16
    1446:	99 27       	eor	r25, r25
    1448:	95 95       	asr	r25
    144a:	87 95       	ror	r24
    144c:	82 2b       	or	r24, r18
    144e:	8a 87       	std	Y+10, r24	; 0x0a
    1450:	8a 85       	ldd	r24, Y+10	; 0x0a
    1452:	98 2f       	mov	r25, r24
    1454:	96 95       	lsr	r25
    1456:	8a 85       	ldd	r24, Y+10	; 0x0a
    1458:	98 2b       	or	r25, r24
    145a:	8a 85       	ldd	r24, Y+10	; 0x0a
    145c:	86 95       	lsr	r24
    145e:	86 95       	lsr	r24
    1460:	98 2b       	or	r25, r24
    1462:	8a 85       	ldd	r24, Y+10	; 0x0a
    1464:	86 95       	lsr	r24
    1466:	86 95       	lsr	r24
    1468:	86 95       	lsr	r24
    146a:	89 2b       	or	r24, r25
    146c:	8a 87       	std	Y+10, r24	; 0x0a
    146e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1470:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1474:	8d 81       	ldd	r24, Y+5	; 0x05
    1476:	88 2f       	mov	r24, r24
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	80 71       	andi	r24, 0x10	; 16
    147c:	99 27       	eor	r25, r25
    147e:	88 0f       	add	r24, r24
    1480:	99 1f       	adc	r25, r25
    1482:	88 0f       	add	r24, r24
    1484:	99 1f       	adc	r25, r25
    1486:	88 0f       	add	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	28 2f       	mov	r18, r24
    148c:	8e 81       	ldd	r24, Y+6	; 0x06
    148e:	88 2f       	mov	r24, r24
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	80 71       	andi	r24, 0x10	; 16
    1494:	99 27       	eor	r25, r25
    1496:	95 95       	asr	r25
    1498:	87 95       	ror	r24
    149a:	82 2b       	or	r24, r18
    149c:	8a 87       	std	Y+10, r24	; 0x0a
    149e:	8a 85       	ldd	r24, Y+10	; 0x0a
    14a0:	98 2f       	mov	r25, r24
    14a2:	96 95       	lsr	r25
    14a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    14a6:	98 2b       	or	r25, r24
    14a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14aa:	86 95       	lsr	r24
    14ac:	86 95       	lsr	r24
    14ae:	98 2b       	or	r25, r24
    14b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    14b2:	86 95       	lsr	r24
    14b4:	86 95       	lsr	r24
    14b6:	86 95       	lsr	r24
    14b8:	89 2b       	or	r24, r25
    14ba:	8a 87       	std	Y+10, r24	; 0x0a
    14bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    14be:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    14c2:	89 85       	ldd	r24, Y+9	; 0x09
    14c4:	88 2f       	mov	r24, r24
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	80 72       	andi	r24, 0x20	; 32
    14ca:	99 27       	eor	r25, r25
    14cc:	88 0f       	add	r24, r24
    14ce:	99 1f       	adc	r25, r25
    14d0:	88 0f       	add	r24, r24
    14d2:	99 1f       	adc	r25, r25
    14d4:	28 2f       	mov	r18, r24
    14d6:	8c 81       	ldd	r24, Y+4	; 0x04
    14d8:	88 2f       	mov	r24, r24
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	80 72       	andi	r24, 0x20	; 32
    14de:	99 27       	eor	r25, r25
    14e0:	95 95       	asr	r25
    14e2:	87 95       	ror	r24
    14e4:	95 95       	asr	r25
    14e6:	87 95       	ror	r24
    14e8:	82 2b       	or	r24, r18
    14ea:	8a 87       	std	Y+10, r24	; 0x0a
    14ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ee:	98 2f       	mov	r25, r24
    14f0:	96 95       	lsr	r25
    14f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    14f4:	98 2b       	or	r25, r24
    14f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    14f8:	86 95       	lsr	r24
    14fa:	86 95       	lsr	r24
    14fc:	98 2b       	or	r25, r24
    14fe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1500:	86 95       	lsr	r24
    1502:	86 95       	lsr	r24
    1504:	86 95       	lsr	r24
    1506:	89 2b       	or	r24, r25
    1508:	8a 87       	std	Y+10, r24	; 0x0a
    150a:	8a 85       	ldd	r24, Y+10	; 0x0a
    150c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1510:	8d 81       	ldd	r24, Y+5	; 0x05
    1512:	88 2f       	mov	r24, r24
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	80 72       	andi	r24, 0x20	; 32
    1518:	99 27       	eor	r25, r25
    151a:	88 0f       	add	r24, r24
    151c:	99 1f       	adc	r25, r25
    151e:	88 0f       	add	r24, r24
    1520:	99 1f       	adc	r25, r25
    1522:	28 2f       	mov	r18, r24
    1524:	8e 81       	ldd	r24, Y+6	; 0x06
    1526:	88 2f       	mov	r24, r24
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	80 72       	andi	r24, 0x20	; 32
    152c:	99 27       	eor	r25, r25
    152e:	95 95       	asr	r25
    1530:	87 95       	ror	r24
    1532:	95 95       	asr	r25
    1534:	87 95       	ror	r24
    1536:	82 2b       	or	r24, r18
    1538:	8a 87       	std	Y+10, r24	; 0x0a
    153a:	8a 85       	ldd	r24, Y+10	; 0x0a
    153c:	98 2f       	mov	r25, r24
    153e:	96 95       	lsr	r25
    1540:	8a 85       	ldd	r24, Y+10	; 0x0a
    1542:	98 2b       	or	r25, r24
    1544:	8a 85       	ldd	r24, Y+10	; 0x0a
    1546:	86 95       	lsr	r24
    1548:	86 95       	lsr	r24
    154a:	98 2b       	or	r25, r24
    154c:	8a 85       	ldd	r24, Y+10	; 0x0a
    154e:	86 95       	lsr	r24
    1550:	86 95       	lsr	r24
    1552:	86 95       	lsr	r24
    1554:	89 2b       	or	r24, r25
    1556:	8a 87       	std	Y+10, r24	; 0x0a
    1558:	8a 85       	ldd	r24, Y+10	; 0x0a
    155a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    155e:	89 85       	ldd	r24, Y+9	; 0x09
    1560:	88 2f       	mov	r24, r24
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	80 74       	andi	r24, 0x40	; 64
    1566:	99 27       	eor	r25, r25
    1568:	88 0f       	add	r24, r24
    156a:	99 1f       	adc	r25, r25
    156c:	28 2f       	mov	r18, r24
    156e:	8c 81       	ldd	r24, Y+4	; 0x04
    1570:	88 2f       	mov	r24, r24
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	80 74       	andi	r24, 0x40	; 64
    1576:	99 27       	eor	r25, r25
    1578:	95 95       	asr	r25
    157a:	87 95       	ror	r24
    157c:	95 95       	asr	r25
    157e:	87 95       	ror	r24
    1580:	95 95       	asr	r25
    1582:	87 95       	ror	r24
    1584:	82 2b       	or	r24, r18
    1586:	8a 87       	std	Y+10, r24	; 0x0a
    1588:	8a 85       	ldd	r24, Y+10	; 0x0a
    158a:	98 2f       	mov	r25, r24
    158c:	96 95       	lsr	r25
    158e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1590:	98 2b       	or	r25, r24
    1592:	8a 85       	ldd	r24, Y+10	; 0x0a
    1594:	86 95       	lsr	r24
    1596:	86 95       	lsr	r24
    1598:	98 2b       	or	r25, r24
    159a:	8a 85       	ldd	r24, Y+10	; 0x0a
    159c:	86 95       	lsr	r24
    159e:	86 95       	lsr	r24
    15a0:	86 95       	lsr	r24
    15a2:	89 2b       	or	r24, r25
    15a4:	8a 87       	std	Y+10, r24	; 0x0a
    15a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    15a8:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    15ac:	8d 81       	ldd	r24, Y+5	; 0x05
    15ae:	88 2f       	mov	r24, r24
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	80 74       	andi	r24, 0x40	; 64
    15b4:	99 27       	eor	r25, r25
    15b6:	88 0f       	add	r24, r24
    15b8:	99 1f       	adc	r25, r25
    15ba:	28 2f       	mov	r18, r24
    15bc:	8e 81       	ldd	r24, Y+6	; 0x06
    15be:	88 2f       	mov	r24, r24
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	80 74       	andi	r24, 0x40	; 64
    15c4:	99 27       	eor	r25, r25
    15c6:	95 95       	asr	r25
    15c8:	87 95       	ror	r24
    15ca:	95 95       	asr	r25
    15cc:	87 95       	ror	r24
    15ce:	95 95       	asr	r25
    15d0:	87 95       	ror	r24
    15d2:	82 2b       	or	r24, r18
    15d4:	8a 87       	std	Y+10, r24	; 0x0a
    15d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    15d8:	98 2f       	mov	r25, r24
    15da:	96 95       	lsr	r25
    15dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    15de:	98 2b       	or	r25, r24
    15e0:	8a 85       	ldd	r24, Y+10	; 0x0a
    15e2:	86 95       	lsr	r24
    15e4:	86 95       	lsr	r24
    15e6:	98 2b       	or	r25, r24
    15e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    15ea:	86 95       	lsr	r24
    15ec:	86 95       	lsr	r24
    15ee:	86 95       	lsr	r24
    15f0:	89 2b       	or	r24, r25
    15f2:	8a 87       	std	Y+10, r24	; 0x0a
    15f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    15f6:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    15fa:	89 85       	ldd	r24, Y+9	; 0x09
    15fc:	28 2f       	mov	r18, r24
    15fe:	20 78       	andi	r18, 0x80	; 128
    1600:	8c 81       	ldd	r24, Y+4	; 0x04
    1602:	88 2f       	mov	r24, r24
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	80 78       	andi	r24, 0x80	; 128
    1608:	99 27       	eor	r25, r25
    160a:	95 95       	asr	r25
    160c:	87 95       	ror	r24
    160e:	95 95       	asr	r25
    1610:	87 95       	ror	r24
    1612:	95 95       	asr	r25
    1614:	87 95       	ror	r24
    1616:	95 95       	asr	r25
    1618:	87 95       	ror	r24
    161a:	82 2b       	or	r24, r18
    161c:	8a 87       	std	Y+10, r24	; 0x0a
    161e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1620:	98 2f       	mov	r25, r24
    1622:	96 95       	lsr	r25
    1624:	8a 85       	ldd	r24, Y+10	; 0x0a
    1626:	98 2b       	or	r25, r24
    1628:	8a 85       	ldd	r24, Y+10	; 0x0a
    162a:	86 95       	lsr	r24
    162c:	86 95       	lsr	r24
    162e:	98 2b       	or	r25, r24
    1630:	8a 85       	ldd	r24, Y+10	; 0x0a
    1632:	86 95       	lsr	r24
    1634:	86 95       	lsr	r24
    1636:	86 95       	lsr	r24
    1638:	89 2b       	or	r24, r25
    163a:	8a 87       	std	Y+10, r24	; 0x0a
    163c:	8a 85       	ldd	r24, Y+10	; 0x0a
    163e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1642:	8d 81       	ldd	r24, Y+5	; 0x05
    1644:	28 2f       	mov	r18, r24
    1646:	20 78       	andi	r18, 0x80	; 128
    1648:	8e 81       	ldd	r24, Y+6	; 0x06
    164a:	88 2f       	mov	r24, r24
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	80 78       	andi	r24, 0x80	; 128
    1650:	99 27       	eor	r25, r25
    1652:	95 95       	asr	r25
    1654:	87 95       	ror	r24
    1656:	95 95       	asr	r25
    1658:	87 95       	ror	r24
    165a:	95 95       	asr	r25
    165c:	87 95       	ror	r24
    165e:	95 95       	asr	r25
    1660:	87 95       	ror	r24
    1662:	82 2b       	or	r24, r18
    1664:	8a 87       	std	Y+10, r24	; 0x0a
    1666:	8a 85       	ldd	r24, Y+10	; 0x0a
    1668:	98 2f       	mov	r25, r24
    166a:	96 95       	lsr	r25
    166c:	8a 85       	ldd	r24, Y+10	; 0x0a
    166e:	98 2b       	or	r25, r24
    1670:	8a 85       	ldd	r24, Y+10	; 0x0a
    1672:	86 95       	lsr	r24
    1674:	86 95       	lsr	r24
    1676:	98 2b       	or	r25, r24
    1678:	8a 85       	ldd	r24, Y+10	; 0x0a
    167a:	86 95       	lsr	r24
    167c:	86 95       	lsr	r24
    167e:	86 95       	lsr	r24
    1680:	89 2b       	or	r24, r25
    1682:	8a 87       	std	Y+10, r24	; 0x0a
    1684:	8a 85       	ldd	r24, Y+10	; 0x0a
    1686:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    168a:	8d 85       	ldd	r24, Y+13	; 0x0d
    168c:	8f 5f       	subi	r24, 0xFF	; 255
    168e:	8d 87       	std	Y+13, r24	; 0x0d
    1690:	8b 81       	ldd	r24, Y+3	; 0x03
    1692:	8f 5f       	subi	r24, 0xFF	; 255
    1694:	8b 83       	std	Y+3, r24	; 0x03
    1696:	8b 81       	ldd	r24, Y+3	; 0x03
    1698:	82 30       	cpi	r24, 0x02	; 2
    169a:	08 f4       	brcc	.+2      	; 0x169e <__stack+0x59f>
    169c:	ef cc       	rjmp	.-1570   	; 0x107c <Show_Font57+0x84>
    169e:	84 e1       	ldi	r24, 0x14	; 20
    16a0:	0e 94 77 06 	call	0xcee	; 0xcee <Set_Remap_Format>
    16a4:	00 00       	nop
    16a6:	2e 96       	adiw	r28, 0x0e	; 14
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	f8 94       	cli
    16ac:	de bf       	out	0x3e, r29	; 62
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	cd bf       	out	0x3d, r28	; 61
    16b2:	df 91       	pop	r29
    16b4:	cf 91       	pop	r28
    16b6:	08 95       	ret

000016b8 <Show_String>:
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
    16bc:	cd b7       	in	r28, 0x3d	; 61
    16be:	de b7       	in	r29, 0x3e	; 62
    16c0:	27 97       	sbiw	r28, 0x07	; 7
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	f8 94       	cli
    16c6:	de bf       	out	0x3e, r29	; 62
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	cd bf       	out	0x3d, r28	; 61
    16cc:	8b 83       	std	Y+3, r24	; 0x03
    16ce:	7d 83       	std	Y+5, r23	; 0x05
    16d0:	6c 83       	std	Y+4, r22	; 0x04
    16d2:	4e 83       	std	Y+6, r20	; 0x06
    16d4:	2f 83       	std	Y+7, r18	; 0x07
    16d6:	8c 81       	ldd	r24, Y+4	; 0x04
    16d8:	9d 81       	ldd	r25, Y+5	; 0x05
    16da:	9a 83       	std	Y+2, r25	; 0x02
    16dc:	89 83       	std	Y+1, r24	; 0x01
    16de:	2f 81       	ldd	r18, Y+7	; 0x07
    16e0:	4e 81       	ldd	r20, Y+6	; 0x06
    16e2:	60 e6       	ldi	r22, 0x60	; 96
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	0e 94 fc 07 	call	0xff8	; 0xff8 <Show_Font57>
    16ea:	89 81       	ldd	r24, Y+1	; 0x01
    16ec:	9a 81       	ldd	r25, Y+2	; 0x02
    16ee:	fc 01       	movw	r30, r24
    16f0:	80 81       	ld	r24, Z
    16f2:	2f 81       	ldd	r18, Y+7	; 0x07
    16f4:	4e 81       	ldd	r20, Y+6	; 0x06
    16f6:	68 2f       	mov	r22, r24
    16f8:	8b 81       	ldd	r24, Y+3	; 0x03
    16fa:	0e 94 fc 07 	call	0xff8	; 0xff8 <Show_Font57>
    16fe:	89 81       	ldd	r24, Y+1	; 0x01
    1700:	9a 81       	ldd	r25, Y+2	; 0x02
    1702:	01 96       	adiw	r24, 0x01	; 1
    1704:	9a 83       	std	Y+2, r25	; 0x02
    1706:	89 83       	std	Y+1, r24	; 0x01
    1708:	8e 81       	ldd	r24, Y+6	; 0x06
    170a:	8e 5f       	subi	r24, 0xFE	; 254
    170c:	8e 83       	std	Y+6, r24	; 0x06
    170e:	89 81       	ldd	r24, Y+1	; 0x01
    1710:	9a 81       	ldd	r25, Y+2	; 0x02
    1712:	fc 01       	movw	r30, r24
    1714:	80 81       	ld	r24, Z
    1716:	88 23       	and	r24, r24
    1718:	09 f0       	breq	.+2      	; 0x171c <Show_String+0x64>
    171a:	e7 cf       	rjmp	.-50     	; 0x16ea <Show_String+0x32>
    171c:	00 00       	nop
    171e:	00 00       	nop
    1720:	27 96       	adiw	r28, 0x07	; 7
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	f8 94       	cli
    1726:	de bf       	out	0x3e, r29	; 62
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	cd bf       	out	0x3d, r28	; 61
    172c:	df 91       	pop	r29
    172e:	cf 91       	pop	r28
    1730:	08 95       	ret

00001732 <Set_Gray_Scale_Table>:
    1732:	cf 93       	push	r28
    1734:	df 93       	push	r29
    1736:	cd b7       	in	r28, 0x3d	; 61
    1738:	de b7       	in	r29, 0x3e	; 62
    173a:	88 eb       	ldi	r24, 0xB8	; 184
    173c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
    1740:	8c e0       	ldi	r24, 0x0C	; 12
    1742:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1746:	88 e1       	ldi	r24, 0x18	; 24
    1748:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    174c:	84 e2       	ldi	r24, 0x24	; 36
    174e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1752:	80 e3       	ldi	r24, 0x30	; 48
    1754:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1758:	8c e3       	ldi	r24, 0x3C	; 60
    175a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    175e:	88 e4       	ldi	r24, 0x48	; 72
    1760:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1764:	84 e5       	ldi	r24, 0x54	; 84
    1766:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    176a:	80 e6       	ldi	r24, 0x60	; 96
    176c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1770:	8c e6       	ldi	r24, 0x6C	; 108
    1772:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1776:	88 e7       	ldi	r24, 0x78	; 120
    1778:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    177c:	84 e8       	ldi	r24, 0x84	; 132
    177e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1782:	80 e9       	ldi	r24, 0x90	; 144
    1784:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1788:	8c e9       	ldi	r24, 0x9C	; 156
    178a:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    178e:	88 ea       	ldi	r24, 0xA8	; 168
    1790:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    1794:	84 eb       	ldi	r24, 0xB4	; 180
    1796:	0e 94 0e 06 	call	0xc1c	; 0xc1c <Write_Data>
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <Write_Command>
    17a0:	00 00       	nop
    17a2:	df 91       	pop	r29
    17a4:	cf 91       	pop	r28
    17a6:	08 95       	ret

000017a8 <OLED_Init>:
    17a8:	cf 93       	push	r28
    17aa:	df 93       	push	r29
    17ac:	cd b7       	in	r28, 0x3d	; 61
    17ae:	de b7       	in	r29, 0x3e	; 62
    17b0:	85 e2       	ldi	r24, 0x25	; 37
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	25 e2       	ldi	r18, 0x25	; 37
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	f9 01       	movw	r30, r18
    17ba:	20 81       	ld	r18, Z
    17bc:	2f 7b       	andi	r18, 0xBF	; 191
    17be:	fc 01       	movw	r30, r24
    17c0:	20 83       	st	Z, r18
    17c2:	88 ee       	ldi	r24, 0xE8	; 232
    17c4:	93 e0       	ldi	r25, 0x03	; 3
    17c6:	0e 94 b9 05 	call	0xb72	; 0xb72 <Delay>
    17ca:	85 e2       	ldi	r24, 0x25	; 37
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	25 e2       	ldi	r18, 0x25	; 37
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	f9 01       	movw	r30, r18
    17d4:	20 81       	ld	r18, Z
    17d6:	20 64       	ori	r18, 0x40	; 64
    17d8:	fc 01       	movw	r30, r24
    17da:	20 83       	st	Z, r18
    17dc:	82 e1       	ldi	r24, 0x12	; 18
    17de:	0e 94 bf 07 	call	0xf7e	; 0xf7e <Set_Command_Lock>
    17e2:	80 e0       	ldi	r24, 0x00	; 0
    17e4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <Set_Display_On_Off>
    17e8:	81 e9       	ldi	r24, 0x91	; 145
    17ea:	0e 94 0a 07 	call	0xe14	; 0xe14 <Set_Display_Clock>
    17ee:	8f e3       	ldi	r24, 0x3F	; 63
    17f0:	0e 94 99 07 	call	0xf32	; 0xf32 <Set_Multiplex_Ratio>
    17f4:	80 e0       	ldi	r24, 0x00	; 0
    17f6:	0e 94 9c 06 	call	0xd38	; 0xd38 <Set_Display_Offset>
    17fa:	80 e0       	ldi	r24, 0x00	; 0
    17fc:	0e 94 8b 06 	call	0xd16	; 0xd16 <Set_Start_Line>
    1800:	84 e1       	ldi	r24, 0x14	; 20
    1802:	0e 94 77 06 	call	0xcee	; 0xcee <Set_Remap_Format>
    1806:	80 e0       	ldi	r24, 0x00	; 0
    1808:	0e 94 33 07 	call	0xe66	; 0xe66 <Set_GPIO>
    180c:	81 e0       	ldi	r24, 0x01	; 1
    180e:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <Set_Function_Selection>
    1812:	6d ef       	ldi	r22, 0xFD	; 253
    1814:	80 ea       	ldi	r24, 0xA0	; 160
    1816:	0e 94 1b 07 	call	0xe36	; 0xe36 <Set_Display_Enhancement_A>
    181a:	8f e7       	ldi	r24, 0x7F	; 127
    181c:	0e 94 77 07 	call	0xeee	; 0xeee <Set_Contrast_Current>
    1820:	8f e0       	ldi	r24, 0x0F	; 15
    1822:	0e 94 88 07 	call	0xf10	; 0xf10 <Set_Master_Current>
    1826:	0e 94 99 0b 	call	0x1732	; 0x1732 <Set_Gray_Scale_Table>
    182a:	82 ee       	ldi	r24, 0xE2	; 226
    182c:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <Set_Phase_Length>
    1830:	80 e2       	ldi	r24, 0x20	; 32
    1832:	0e 94 aa 07 	call	0xf54	; 0xf54 <Set_Display_Enhancement_B>
    1836:	8f e1       	ldi	r24, 0x1F	; 31
    1838:	0e 94 55 07 	call	0xeaa	; 0xeaa <Set_Precharge_Voltage>
    183c:	88 e0       	ldi	r24, 0x08	; 8
    183e:	0e 94 44 07 	call	0xe88	; 0xe88 <Set_Precharge_Period>
    1842:	87 e0       	ldi	r24, 0x07	; 7
    1844:	0e 94 66 07 	call	0xecc	; 0xecc <Set_VCOMH>
    1848:	82 e0       	ldi	r24, 0x02	; 2
    184a:	0e 94 ad 06 	call	0xd5a	; 0xd5a <Set_Display_Mode>
    184e:	40 e0       	ldi	r20, 0x00	; 0
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	0e 94 bc 06 	call	0xd78	; 0xd78 <Set_Partial_Display>
    1858:	80 e0       	ldi	r24, 0x00	; 0
    185a:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <Fill_RAM>
    185e:	81 e0       	ldi	r24, 0x01	; 1
    1860:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <Set_Display_On_Off>
    1864:	00 00       	nop
    1866:	df 91       	pop	r29
    1868:	cf 91       	pop	r28
    186a:	08 95       	ret

0000186c <__divmodhi4>:
    186c:	97 fb       	bst	r25, 7
    186e:	07 2e       	mov	r0, r23
    1870:	16 f4       	brtc	.+4      	; 0x1876 <__divmodhi4+0xa>
    1872:	00 94       	com	r0
    1874:	07 d0       	rcall	.+14     	; 0x1884 <__divmodhi4_neg1>
    1876:	77 fd       	sbrc	r23, 7
    1878:	09 d0       	rcall	.+18     	; 0x188c <__divmodhi4_neg2>
    187a:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__udivmodhi4>
    187e:	07 fc       	sbrc	r0, 7
    1880:	05 d0       	rcall	.+10     	; 0x188c <__divmodhi4_neg2>
    1882:	3e f4       	brtc	.+14     	; 0x1892 <__divmodhi4_exit>

00001884 <__divmodhi4_neg1>:
    1884:	90 95       	com	r25
    1886:	81 95       	neg	r24
    1888:	9f 4f       	sbci	r25, 0xFF	; 255
    188a:	08 95       	ret

0000188c <__divmodhi4_neg2>:
    188c:	70 95       	com	r23
    188e:	61 95       	neg	r22
    1890:	7f 4f       	sbci	r23, 0xFF	; 255

00001892 <__divmodhi4_exit>:
    1892:	08 95       	ret

00001894 <__umulhisi3>:
    1894:	a2 9f       	mul	r26, r18
    1896:	b0 01       	movw	r22, r0
    1898:	b3 9f       	mul	r27, r19
    189a:	c0 01       	movw	r24, r0
    189c:	a3 9f       	mul	r26, r19
    189e:	70 0d       	add	r23, r0
    18a0:	81 1d       	adc	r24, r1
    18a2:	11 24       	eor	r1, r1
    18a4:	91 1d       	adc	r25, r1
    18a6:	b2 9f       	mul	r27, r18
    18a8:	70 0d       	add	r23, r0
    18aa:	81 1d       	adc	r24, r1
    18ac:	11 24       	eor	r1, r1
    18ae:	91 1d       	adc	r25, r1
    18b0:	08 95       	ret

000018b2 <__udivmodhi4>:
    18b2:	aa 1b       	sub	r26, r26
    18b4:	bb 1b       	sub	r27, r27
    18b6:	51 e1       	ldi	r21, 0x11	; 17
    18b8:	07 c0       	rjmp	.+14     	; 0x18c8 <__udivmodhi4_ep>

000018ba <__udivmodhi4_loop>:
    18ba:	aa 1f       	adc	r26, r26
    18bc:	bb 1f       	adc	r27, r27
    18be:	a6 17       	cp	r26, r22
    18c0:	b7 07       	cpc	r27, r23
    18c2:	10 f0       	brcs	.+4      	; 0x18c8 <__udivmodhi4_ep>
    18c4:	a6 1b       	sub	r26, r22
    18c6:	b7 0b       	sbc	r27, r23

000018c8 <__udivmodhi4_ep>:
    18c8:	88 1f       	adc	r24, r24
    18ca:	99 1f       	adc	r25, r25
    18cc:	5a 95       	dec	r21
    18ce:	a9 f7       	brne	.-22     	; 0x18ba <__udivmodhi4_loop>
    18d0:	80 95       	com	r24
    18d2:	90 95       	com	r25
    18d4:	bc 01       	movw	r22, r24
    18d6:	cd 01       	movw	r24, r26
    18d8:	08 95       	ret

000018da <strcat>:
    18da:	fb 01       	movw	r30, r22
    18dc:	dc 01       	movw	r26, r24
    18de:	0d 90       	ld	r0, X+
    18e0:	00 20       	and	r0, r0
    18e2:	e9 f7       	brne	.-6      	; 0x18de <strcat+0x4>
    18e4:	11 97       	sbiw	r26, 0x01	; 1
    18e6:	01 90       	ld	r0, Z+
    18e8:	0d 92       	st	X+, r0
    18ea:	00 20       	and	r0, r0
    18ec:	e1 f7       	brne	.-8      	; 0x18e6 <strcat+0xc>
    18ee:	08 95       	ret

000018f0 <itoa>:
    18f0:	45 32       	cpi	r20, 0x25	; 37
    18f2:	51 05       	cpc	r21, r1
    18f4:	20 f4       	brcc	.+8      	; 0x18fe <itoa+0xe>
    18f6:	42 30       	cpi	r20, 0x02	; 2
    18f8:	10 f0       	brcs	.+4      	; 0x18fe <itoa+0xe>
    18fa:	0c 94 83 0c 	jmp	0x1906	; 0x1906 <__itoa_ncheck>
    18fe:	fb 01       	movw	r30, r22
    1900:	10 82       	st	Z, r1
    1902:	cb 01       	movw	r24, r22
    1904:	08 95       	ret

00001906 <__itoa_ncheck>:
    1906:	bb 27       	eor	r27, r27
    1908:	4a 30       	cpi	r20, 0x0A	; 10
    190a:	31 f4       	brne	.+12     	; 0x1918 <__itoa_ncheck+0x12>
    190c:	99 23       	and	r25, r25
    190e:	22 f4       	brpl	.+8      	; 0x1918 <__itoa_ncheck+0x12>
    1910:	bd e2       	ldi	r27, 0x2D	; 45
    1912:	90 95       	com	r25
    1914:	81 95       	neg	r24
    1916:	9f 4f       	sbci	r25, 0xFF	; 255
    1918:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <__utoa_common>

0000191c <__utoa_ncheck>:
    191c:	bb 27       	eor	r27, r27

0000191e <__utoa_common>:
    191e:	fb 01       	movw	r30, r22
    1920:	55 27       	eor	r21, r21
    1922:	aa 27       	eor	r26, r26
    1924:	88 0f       	add	r24, r24
    1926:	99 1f       	adc	r25, r25
    1928:	aa 1f       	adc	r26, r26
    192a:	a4 17       	cp	r26, r20
    192c:	10 f0       	brcs	.+4      	; 0x1932 <__utoa_common+0x14>
    192e:	a4 1b       	sub	r26, r20
    1930:	83 95       	inc	r24
    1932:	50 51       	subi	r21, 0x10	; 16
    1934:	b9 f7       	brne	.-18     	; 0x1924 <__utoa_common+0x6>
    1936:	a0 5d       	subi	r26, 0xD0	; 208
    1938:	aa 33       	cpi	r26, 0x3A	; 58
    193a:	08 f0       	brcs	.+2      	; 0x193e <__utoa_common+0x20>
    193c:	a9 5d       	subi	r26, 0xD9	; 217
    193e:	a1 93       	st	Z+, r26
    1940:	00 97       	sbiw	r24, 0x00	; 0
    1942:	79 f7       	brne	.-34     	; 0x1922 <__utoa_common+0x4>
    1944:	b1 11       	cpse	r27, r1
    1946:	b1 93       	st	Z+, r27
    1948:	11 92       	st	Z+, r1
    194a:	cb 01       	movw	r24, r22
    194c:	0c 94 c1 0e 	jmp	0x1d82	; 0x1d82 <strrev>

00001950 <sprintf>:
    1950:	ae e0       	ldi	r26, 0x0E	; 14
    1952:	b0 e0       	ldi	r27, 0x00	; 0
    1954:	ee ea       	ldi	r30, 0xAE	; 174
    1956:	fc e0       	ldi	r31, 0x0C	; 12
    1958:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <__prologue_saves__+0x1c>
    195c:	0d 89       	ldd	r16, Y+21	; 0x15
    195e:	1e 89       	ldd	r17, Y+22	; 0x16
    1960:	86 e0       	ldi	r24, 0x06	; 6
    1962:	8c 83       	std	Y+4, r24	; 0x04
    1964:	1a 83       	std	Y+2, r17	; 0x02
    1966:	09 83       	std	Y+1, r16	; 0x01
    1968:	8f ef       	ldi	r24, 0xFF	; 255
    196a:	9f e7       	ldi	r25, 0x7F	; 127
    196c:	9e 83       	std	Y+6, r25	; 0x06
    196e:	8d 83       	std	Y+5, r24	; 0x05
    1970:	ae 01       	movw	r20, r28
    1972:	47 5e       	subi	r20, 0xE7	; 231
    1974:	5f 4f       	sbci	r21, 0xFF	; 255
    1976:	6f 89       	ldd	r22, Y+23	; 0x17
    1978:	78 8d       	ldd	r23, Y+24	; 0x18
    197a:	ce 01       	movw	r24, r28
    197c:	01 96       	adiw	r24, 0x01	; 1
    197e:	0e 94 ca 0c 	call	0x1994	; 0x1994 <vfprintf>
    1982:	ef 81       	ldd	r30, Y+7	; 0x07
    1984:	f8 85       	ldd	r31, Y+8	; 0x08
    1986:	e0 0f       	add	r30, r16
    1988:	f1 1f       	adc	r31, r17
    198a:	10 82       	st	Z, r1
    198c:	2e 96       	adiw	r28, 0x0e	; 14
    198e:	e4 e0       	ldi	r30, 0x04	; 4
    1990:	0c 94 95 0f 	jmp	0x1f2a	; 0x1f2a <__epilogue_restores__+0x1c>

00001994 <vfprintf>:
    1994:	ab e0       	ldi	r26, 0x0B	; 11
    1996:	b0 e0       	ldi	r27, 0x00	; 0
    1998:	e0 ed       	ldi	r30, 0xD0	; 208
    199a:	fc e0       	ldi	r31, 0x0C	; 12
    199c:	0c 94 6b 0f 	jmp	0x1ed6	; 0x1ed6 <__prologue_saves__>
    19a0:	6c 01       	movw	r12, r24
    19a2:	7b 01       	movw	r14, r22
    19a4:	8a 01       	movw	r16, r20
    19a6:	fc 01       	movw	r30, r24
    19a8:	17 82       	std	Z+7, r1	; 0x07
    19aa:	16 82       	std	Z+6, r1	; 0x06
    19ac:	83 81       	ldd	r24, Z+3	; 0x03
    19ae:	81 ff       	sbrs	r24, 1
    19b0:	cc c1       	rjmp	.+920    	; 0x1d4a <vfprintf+0x3b6>
    19b2:	ce 01       	movw	r24, r28
    19b4:	01 96       	adiw	r24, 0x01	; 1
    19b6:	3c 01       	movw	r6, r24
    19b8:	f6 01       	movw	r30, r12
    19ba:	93 81       	ldd	r25, Z+3	; 0x03
    19bc:	f7 01       	movw	r30, r14
    19be:	93 fd       	sbrc	r25, 3
    19c0:	85 91       	lpm	r24, Z+
    19c2:	93 ff       	sbrs	r25, 3
    19c4:	81 91       	ld	r24, Z+
    19c6:	7f 01       	movw	r14, r30
    19c8:	88 23       	and	r24, r24
    19ca:	09 f4       	brne	.+2      	; 0x19ce <vfprintf+0x3a>
    19cc:	ba c1       	rjmp	.+884    	; 0x1d42 <vfprintf+0x3ae>
    19ce:	85 32       	cpi	r24, 0x25	; 37
    19d0:	39 f4       	brne	.+14     	; 0x19e0 <vfprintf+0x4c>
    19d2:	93 fd       	sbrc	r25, 3
    19d4:	85 91       	lpm	r24, Z+
    19d6:	93 ff       	sbrs	r25, 3
    19d8:	81 91       	ld	r24, Z+
    19da:	7f 01       	movw	r14, r30
    19dc:	85 32       	cpi	r24, 0x25	; 37
    19de:	29 f4       	brne	.+10     	; 0x19ea <vfprintf+0x56>
    19e0:	b6 01       	movw	r22, r12
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    19e8:	e7 cf       	rjmp	.-50     	; 0x19b8 <vfprintf+0x24>
    19ea:	91 2c       	mov	r9, r1
    19ec:	21 2c       	mov	r2, r1
    19ee:	31 2c       	mov	r3, r1
    19f0:	ff e1       	ldi	r31, 0x1F	; 31
    19f2:	f3 15       	cp	r31, r3
    19f4:	d8 f0       	brcs	.+54     	; 0x1a2c <vfprintf+0x98>
    19f6:	8b 32       	cpi	r24, 0x2B	; 43
    19f8:	79 f0       	breq	.+30     	; 0x1a18 <vfprintf+0x84>
    19fa:	38 f4       	brcc	.+14     	; 0x1a0a <vfprintf+0x76>
    19fc:	80 32       	cpi	r24, 0x20	; 32
    19fe:	79 f0       	breq	.+30     	; 0x1a1e <vfprintf+0x8a>
    1a00:	83 32       	cpi	r24, 0x23	; 35
    1a02:	a1 f4       	brne	.+40     	; 0x1a2c <vfprintf+0x98>
    1a04:	23 2d       	mov	r18, r3
    1a06:	20 61       	ori	r18, 0x10	; 16
    1a08:	1d c0       	rjmp	.+58     	; 0x1a44 <vfprintf+0xb0>
    1a0a:	8d 32       	cpi	r24, 0x2D	; 45
    1a0c:	61 f0       	breq	.+24     	; 0x1a26 <vfprintf+0x92>
    1a0e:	80 33       	cpi	r24, 0x30	; 48
    1a10:	69 f4       	brne	.+26     	; 0x1a2c <vfprintf+0x98>
    1a12:	23 2d       	mov	r18, r3
    1a14:	21 60       	ori	r18, 0x01	; 1
    1a16:	16 c0       	rjmp	.+44     	; 0x1a44 <vfprintf+0xb0>
    1a18:	83 2d       	mov	r24, r3
    1a1a:	82 60       	ori	r24, 0x02	; 2
    1a1c:	38 2e       	mov	r3, r24
    1a1e:	e3 2d       	mov	r30, r3
    1a20:	e4 60       	ori	r30, 0x04	; 4
    1a22:	3e 2e       	mov	r3, r30
    1a24:	2a c0       	rjmp	.+84     	; 0x1a7a <vfprintf+0xe6>
    1a26:	f3 2d       	mov	r31, r3
    1a28:	f8 60       	ori	r31, 0x08	; 8
    1a2a:	1d c0       	rjmp	.+58     	; 0x1a66 <vfprintf+0xd2>
    1a2c:	37 fc       	sbrc	r3, 7
    1a2e:	2d c0       	rjmp	.+90     	; 0x1a8a <vfprintf+0xf6>
    1a30:	20 ed       	ldi	r18, 0xD0	; 208
    1a32:	28 0f       	add	r18, r24
    1a34:	2a 30       	cpi	r18, 0x0A	; 10
    1a36:	40 f0       	brcs	.+16     	; 0x1a48 <vfprintf+0xb4>
    1a38:	8e 32       	cpi	r24, 0x2E	; 46
    1a3a:	b9 f4       	brne	.+46     	; 0x1a6a <vfprintf+0xd6>
    1a3c:	36 fc       	sbrc	r3, 6
    1a3e:	81 c1       	rjmp	.+770    	; 0x1d42 <vfprintf+0x3ae>
    1a40:	23 2d       	mov	r18, r3
    1a42:	20 64       	ori	r18, 0x40	; 64
    1a44:	32 2e       	mov	r3, r18
    1a46:	19 c0       	rjmp	.+50     	; 0x1a7a <vfprintf+0xe6>
    1a48:	36 fe       	sbrs	r3, 6
    1a4a:	06 c0       	rjmp	.+12     	; 0x1a58 <vfprintf+0xc4>
    1a4c:	8a e0       	ldi	r24, 0x0A	; 10
    1a4e:	98 9e       	mul	r9, r24
    1a50:	20 0d       	add	r18, r0
    1a52:	11 24       	eor	r1, r1
    1a54:	92 2e       	mov	r9, r18
    1a56:	11 c0       	rjmp	.+34     	; 0x1a7a <vfprintf+0xe6>
    1a58:	ea e0       	ldi	r30, 0x0A	; 10
    1a5a:	2e 9e       	mul	r2, r30
    1a5c:	20 0d       	add	r18, r0
    1a5e:	11 24       	eor	r1, r1
    1a60:	22 2e       	mov	r2, r18
    1a62:	f3 2d       	mov	r31, r3
    1a64:	f0 62       	ori	r31, 0x20	; 32
    1a66:	3f 2e       	mov	r3, r31
    1a68:	08 c0       	rjmp	.+16     	; 0x1a7a <vfprintf+0xe6>
    1a6a:	8c 36       	cpi	r24, 0x6C	; 108
    1a6c:	21 f4       	brne	.+8      	; 0x1a76 <vfprintf+0xe2>
    1a6e:	83 2d       	mov	r24, r3
    1a70:	80 68       	ori	r24, 0x80	; 128
    1a72:	38 2e       	mov	r3, r24
    1a74:	02 c0       	rjmp	.+4      	; 0x1a7a <vfprintf+0xe6>
    1a76:	88 36       	cpi	r24, 0x68	; 104
    1a78:	41 f4       	brne	.+16     	; 0x1a8a <vfprintf+0xf6>
    1a7a:	f7 01       	movw	r30, r14
    1a7c:	93 fd       	sbrc	r25, 3
    1a7e:	85 91       	lpm	r24, Z+
    1a80:	93 ff       	sbrs	r25, 3
    1a82:	81 91       	ld	r24, Z+
    1a84:	7f 01       	movw	r14, r30
    1a86:	81 11       	cpse	r24, r1
    1a88:	b3 cf       	rjmp	.-154    	; 0x19f0 <vfprintf+0x5c>
    1a8a:	98 2f       	mov	r25, r24
    1a8c:	9f 7d       	andi	r25, 0xDF	; 223
    1a8e:	95 54       	subi	r25, 0x45	; 69
    1a90:	93 30       	cpi	r25, 0x03	; 3
    1a92:	28 f4       	brcc	.+10     	; 0x1a9e <vfprintf+0x10a>
    1a94:	0c 5f       	subi	r16, 0xFC	; 252
    1a96:	1f 4f       	sbci	r17, 0xFF	; 255
    1a98:	9f e3       	ldi	r25, 0x3F	; 63
    1a9a:	99 83       	std	Y+1, r25	; 0x01
    1a9c:	0d c0       	rjmp	.+26     	; 0x1ab8 <vfprintf+0x124>
    1a9e:	83 36       	cpi	r24, 0x63	; 99
    1aa0:	31 f0       	breq	.+12     	; 0x1aae <vfprintf+0x11a>
    1aa2:	83 37       	cpi	r24, 0x73	; 115
    1aa4:	71 f0       	breq	.+28     	; 0x1ac2 <vfprintf+0x12e>
    1aa6:	83 35       	cpi	r24, 0x53	; 83
    1aa8:	09 f0       	breq	.+2      	; 0x1aac <vfprintf+0x118>
    1aaa:	59 c0       	rjmp	.+178    	; 0x1b5e <vfprintf+0x1ca>
    1aac:	21 c0       	rjmp	.+66     	; 0x1af0 <vfprintf+0x15c>
    1aae:	f8 01       	movw	r30, r16
    1ab0:	80 81       	ld	r24, Z
    1ab2:	89 83       	std	Y+1, r24	; 0x01
    1ab4:	0e 5f       	subi	r16, 0xFE	; 254
    1ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab8:	88 24       	eor	r8, r8
    1aba:	83 94       	inc	r8
    1abc:	91 2c       	mov	r9, r1
    1abe:	53 01       	movw	r10, r6
    1ac0:	13 c0       	rjmp	.+38     	; 0x1ae8 <vfprintf+0x154>
    1ac2:	28 01       	movw	r4, r16
    1ac4:	f2 e0       	ldi	r31, 0x02	; 2
    1ac6:	4f 0e       	add	r4, r31
    1ac8:	51 1c       	adc	r5, r1
    1aca:	f8 01       	movw	r30, r16
    1acc:	a0 80       	ld	r10, Z
    1ace:	b1 80       	ldd	r11, Z+1	; 0x01
    1ad0:	36 fe       	sbrs	r3, 6
    1ad2:	03 c0       	rjmp	.+6      	; 0x1ada <vfprintf+0x146>
    1ad4:	69 2d       	mov	r22, r9
    1ad6:	70 e0       	ldi	r23, 0x00	; 0
    1ad8:	02 c0       	rjmp	.+4      	; 0x1ade <vfprintf+0x14a>
    1ada:	6f ef       	ldi	r22, 0xFF	; 255
    1adc:	7f ef       	ldi	r23, 0xFF	; 255
    1ade:	c5 01       	movw	r24, r10
    1ae0:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <strnlen>
    1ae4:	4c 01       	movw	r8, r24
    1ae6:	82 01       	movw	r16, r4
    1ae8:	f3 2d       	mov	r31, r3
    1aea:	ff 77       	andi	r31, 0x7F	; 127
    1aec:	3f 2e       	mov	r3, r31
    1aee:	16 c0       	rjmp	.+44     	; 0x1b1c <vfprintf+0x188>
    1af0:	28 01       	movw	r4, r16
    1af2:	22 e0       	ldi	r18, 0x02	; 2
    1af4:	42 0e       	add	r4, r18
    1af6:	51 1c       	adc	r5, r1
    1af8:	f8 01       	movw	r30, r16
    1afa:	a0 80       	ld	r10, Z
    1afc:	b1 80       	ldd	r11, Z+1	; 0x01
    1afe:	36 fe       	sbrs	r3, 6
    1b00:	03 c0       	rjmp	.+6      	; 0x1b08 <vfprintf+0x174>
    1b02:	69 2d       	mov	r22, r9
    1b04:	70 e0       	ldi	r23, 0x00	; 0
    1b06:	02 c0       	rjmp	.+4      	; 0x1b0c <vfprintf+0x178>
    1b08:	6f ef       	ldi	r22, 0xFF	; 255
    1b0a:	7f ef       	ldi	r23, 0xFF	; 255
    1b0c:	c5 01       	movw	r24, r10
    1b0e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <strnlen_P>
    1b12:	4c 01       	movw	r8, r24
    1b14:	f3 2d       	mov	r31, r3
    1b16:	f0 68       	ori	r31, 0x80	; 128
    1b18:	3f 2e       	mov	r3, r31
    1b1a:	82 01       	movw	r16, r4
    1b1c:	33 fc       	sbrc	r3, 3
    1b1e:	1b c0       	rjmp	.+54     	; 0x1b56 <vfprintf+0x1c2>
    1b20:	82 2d       	mov	r24, r2
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	88 16       	cp	r8, r24
    1b26:	99 06       	cpc	r9, r25
    1b28:	b0 f4       	brcc	.+44     	; 0x1b56 <vfprintf+0x1c2>
    1b2a:	b6 01       	movw	r22, r12
    1b2c:	80 e2       	ldi	r24, 0x20	; 32
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1b34:	2a 94       	dec	r2
    1b36:	f4 cf       	rjmp	.-24     	; 0x1b20 <vfprintf+0x18c>
    1b38:	f5 01       	movw	r30, r10
    1b3a:	37 fc       	sbrc	r3, 7
    1b3c:	85 91       	lpm	r24, Z+
    1b3e:	37 fe       	sbrs	r3, 7
    1b40:	81 91       	ld	r24, Z+
    1b42:	5f 01       	movw	r10, r30
    1b44:	b6 01       	movw	r22, r12
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1b4c:	21 10       	cpse	r2, r1
    1b4e:	2a 94       	dec	r2
    1b50:	21 e0       	ldi	r18, 0x01	; 1
    1b52:	82 1a       	sub	r8, r18
    1b54:	91 08       	sbc	r9, r1
    1b56:	81 14       	cp	r8, r1
    1b58:	91 04       	cpc	r9, r1
    1b5a:	71 f7       	brne	.-36     	; 0x1b38 <vfprintf+0x1a4>
    1b5c:	e8 c0       	rjmp	.+464    	; 0x1d2e <vfprintf+0x39a>
    1b5e:	84 36       	cpi	r24, 0x64	; 100
    1b60:	11 f0       	breq	.+4      	; 0x1b66 <vfprintf+0x1d2>
    1b62:	89 36       	cpi	r24, 0x69	; 105
    1b64:	41 f5       	brne	.+80     	; 0x1bb6 <vfprintf+0x222>
    1b66:	f8 01       	movw	r30, r16
    1b68:	37 fe       	sbrs	r3, 7
    1b6a:	07 c0       	rjmp	.+14     	; 0x1b7a <vfprintf+0x1e6>
    1b6c:	60 81       	ld	r22, Z
    1b6e:	71 81       	ldd	r23, Z+1	; 0x01
    1b70:	82 81       	ldd	r24, Z+2	; 0x02
    1b72:	93 81       	ldd	r25, Z+3	; 0x03
    1b74:	0c 5f       	subi	r16, 0xFC	; 252
    1b76:	1f 4f       	sbci	r17, 0xFF	; 255
    1b78:	08 c0       	rjmp	.+16     	; 0x1b8a <vfprintf+0x1f6>
    1b7a:	60 81       	ld	r22, Z
    1b7c:	71 81       	ldd	r23, Z+1	; 0x01
    1b7e:	07 2e       	mov	r0, r23
    1b80:	00 0c       	add	r0, r0
    1b82:	88 0b       	sbc	r24, r24
    1b84:	99 0b       	sbc	r25, r25
    1b86:	0e 5f       	subi	r16, 0xFE	; 254
    1b88:	1f 4f       	sbci	r17, 0xFF	; 255
    1b8a:	f3 2d       	mov	r31, r3
    1b8c:	ff 76       	andi	r31, 0x6F	; 111
    1b8e:	3f 2e       	mov	r3, r31
    1b90:	97 ff       	sbrs	r25, 7
    1b92:	09 c0       	rjmp	.+18     	; 0x1ba6 <vfprintf+0x212>
    1b94:	90 95       	com	r25
    1b96:	80 95       	com	r24
    1b98:	70 95       	com	r23
    1b9a:	61 95       	neg	r22
    1b9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba2:	f0 68       	ori	r31, 0x80	; 128
    1ba4:	3f 2e       	mov	r3, r31
    1ba6:	2a e0       	ldi	r18, 0x0A	; 10
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	a3 01       	movw	r20, r6
    1bac:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__ultoa_invert>
    1bb0:	88 2e       	mov	r8, r24
    1bb2:	86 18       	sub	r8, r6
    1bb4:	45 c0       	rjmp	.+138    	; 0x1c40 <vfprintf+0x2ac>
    1bb6:	85 37       	cpi	r24, 0x75	; 117
    1bb8:	31 f4       	brne	.+12     	; 0x1bc6 <vfprintf+0x232>
    1bba:	23 2d       	mov	r18, r3
    1bbc:	2f 7e       	andi	r18, 0xEF	; 239
    1bbe:	b2 2e       	mov	r11, r18
    1bc0:	2a e0       	ldi	r18, 0x0A	; 10
    1bc2:	30 e0       	ldi	r19, 0x00	; 0
    1bc4:	25 c0       	rjmp	.+74     	; 0x1c10 <vfprintf+0x27c>
    1bc6:	93 2d       	mov	r25, r3
    1bc8:	99 7f       	andi	r25, 0xF9	; 249
    1bca:	b9 2e       	mov	r11, r25
    1bcc:	8f 36       	cpi	r24, 0x6F	; 111
    1bce:	c1 f0       	breq	.+48     	; 0x1c00 <vfprintf+0x26c>
    1bd0:	18 f4       	brcc	.+6      	; 0x1bd8 <vfprintf+0x244>
    1bd2:	88 35       	cpi	r24, 0x58	; 88
    1bd4:	79 f0       	breq	.+30     	; 0x1bf4 <vfprintf+0x260>
    1bd6:	b5 c0       	rjmp	.+362    	; 0x1d42 <vfprintf+0x3ae>
    1bd8:	80 37       	cpi	r24, 0x70	; 112
    1bda:	19 f0       	breq	.+6      	; 0x1be2 <vfprintf+0x24e>
    1bdc:	88 37       	cpi	r24, 0x78	; 120
    1bde:	21 f0       	breq	.+8      	; 0x1be8 <vfprintf+0x254>
    1be0:	b0 c0       	rjmp	.+352    	; 0x1d42 <vfprintf+0x3ae>
    1be2:	e9 2f       	mov	r30, r25
    1be4:	e0 61       	ori	r30, 0x10	; 16
    1be6:	be 2e       	mov	r11, r30
    1be8:	b4 fe       	sbrs	r11, 4
    1bea:	0d c0       	rjmp	.+26     	; 0x1c06 <vfprintf+0x272>
    1bec:	fb 2d       	mov	r31, r11
    1bee:	f4 60       	ori	r31, 0x04	; 4
    1bf0:	bf 2e       	mov	r11, r31
    1bf2:	09 c0       	rjmp	.+18     	; 0x1c06 <vfprintf+0x272>
    1bf4:	34 fe       	sbrs	r3, 4
    1bf6:	0a c0       	rjmp	.+20     	; 0x1c0c <vfprintf+0x278>
    1bf8:	29 2f       	mov	r18, r25
    1bfa:	26 60       	ori	r18, 0x06	; 6
    1bfc:	b2 2e       	mov	r11, r18
    1bfe:	06 c0       	rjmp	.+12     	; 0x1c0c <vfprintf+0x278>
    1c00:	28 e0       	ldi	r18, 0x08	; 8
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	05 c0       	rjmp	.+10     	; 0x1c10 <vfprintf+0x27c>
    1c06:	20 e1       	ldi	r18, 0x10	; 16
    1c08:	30 e0       	ldi	r19, 0x00	; 0
    1c0a:	02 c0       	rjmp	.+4      	; 0x1c10 <vfprintf+0x27c>
    1c0c:	20 e1       	ldi	r18, 0x10	; 16
    1c0e:	32 e0       	ldi	r19, 0x02	; 2
    1c10:	f8 01       	movw	r30, r16
    1c12:	b7 fe       	sbrs	r11, 7
    1c14:	07 c0       	rjmp	.+14     	; 0x1c24 <vfprintf+0x290>
    1c16:	60 81       	ld	r22, Z
    1c18:	71 81       	ldd	r23, Z+1	; 0x01
    1c1a:	82 81       	ldd	r24, Z+2	; 0x02
    1c1c:	93 81       	ldd	r25, Z+3	; 0x03
    1c1e:	0c 5f       	subi	r16, 0xFC	; 252
    1c20:	1f 4f       	sbci	r17, 0xFF	; 255
    1c22:	06 c0       	rjmp	.+12     	; 0x1c30 <vfprintf+0x29c>
    1c24:	60 81       	ld	r22, Z
    1c26:	71 81       	ldd	r23, Z+1	; 0x01
    1c28:	80 e0       	ldi	r24, 0x00	; 0
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	0e 5f       	subi	r16, 0xFE	; 254
    1c2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c30:	a3 01       	movw	r20, r6
    1c32:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__ultoa_invert>
    1c36:	88 2e       	mov	r8, r24
    1c38:	86 18       	sub	r8, r6
    1c3a:	fb 2d       	mov	r31, r11
    1c3c:	ff 77       	andi	r31, 0x7F	; 127
    1c3e:	3f 2e       	mov	r3, r31
    1c40:	36 fe       	sbrs	r3, 6
    1c42:	0d c0       	rjmp	.+26     	; 0x1c5e <vfprintf+0x2ca>
    1c44:	23 2d       	mov	r18, r3
    1c46:	2e 7f       	andi	r18, 0xFE	; 254
    1c48:	a2 2e       	mov	r10, r18
    1c4a:	89 14       	cp	r8, r9
    1c4c:	58 f4       	brcc	.+22     	; 0x1c64 <vfprintf+0x2d0>
    1c4e:	34 fe       	sbrs	r3, 4
    1c50:	0b c0       	rjmp	.+22     	; 0x1c68 <vfprintf+0x2d4>
    1c52:	32 fc       	sbrc	r3, 2
    1c54:	09 c0       	rjmp	.+18     	; 0x1c68 <vfprintf+0x2d4>
    1c56:	83 2d       	mov	r24, r3
    1c58:	8e 7e       	andi	r24, 0xEE	; 238
    1c5a:	a8 2e       	mov	r10, r24
    1c5c:	05 c0       	rjmp	.+10     	; 0x1c68 <vfprintf+0x2d4>
    1c5e:	b8 2c       	mov	r11, r8
    1c60:	a3 2c       	mov	r10, r3
    1c62:	03 c0       	rjmp	.+6      	; 0x1c6a <vfprintf+0x2d6>
    1c64:	b8 2c       	mov	r11, r8
    1c66:	01 c0       	rjmp	.+2      	; 0x1c6a <vfprintf+0x2d6>
    1c68:	b9 2c       	mov	r11, r9
    1c6a:	a4 fe       	sbrs	r10, 4
    1c6c:	0f c0       	rjmp	.+30     	; 0x1c8c <vfprintf+0x2f8>
    1c6e:	fe 01       	movw	r30, r28
    1c70:	e8 0d       	add	r30, r8
    1c72:	f1 1d       	adc	r31, r1
    1c74:	80 81       	ld	r24, Z
    1c76:	80 33       	cpi	r24, 0x30	; 48
    1c78:	21 f4       	brne	.+8      	; 0x1c82 <vfprintf+0x2ee>
    1c7a:	9a 2d       	mov	r25, r10
    1c7c:	99 7e       	andi	r25, 0xE9	; 233
    1c7e:	a9 2e       	mov	r10, r25
    1c80:	09 c0       	rjmp	.+18     	; 0x1c94 <vfprintf+0x300>
    1c82:	a2 fe       	sbrs	r10, 2
    1c84:	06 c0       	rjmp	.+12     	; 0x1c92 <vfprintf+0x2fe>
    1c86:	b3 94       	inc	r11
    1c88:	b3 94       	inc	r11
    1c8a:	04 c0       	rjmp	.+8      	; 0x1c94 <vfprintf+0x300>
    1c8c:	8a 2d       	mov	r24, r10
    1c8e:	86 78       	andi	r24, 0x86	; 134
    1c90:	09 f0       	breq	.+2      	; 0x1c94 <vfprintf+0x300>
    1c92:	b3 94       	inc	r11
    1c94:	a3 fc       	sbrc	r10, 3
    1c96:	11 c0       	rjmp	.+34     	; 0x1cba <vfprintf+0x326>
    1c98:	a0 fe       	sbrs	r10, 0
    1c9a:	06 c0       	rjmp	.+12     	; 0x1ca8 <vfprintf+0x314>
    1c9c:	b2 14       	cp	r11, r2
    1c9e:	88 f4       	brcc	.+34     	; 0x1cc2 <vfprintf+0x32e>
    1ca0:	28 0c       	add	r2, r8
    1ca2:	92 2c       	mov	r9, r2
    1ca4:	9b 18       	sub	r9, r11
    1ca6:	0e c0       	rjmp	.+28     	; 0x1cc4 <vfprintf+0x330>
    1ca8:	b2 14       	cp	r11, r2
    1caa:	60 f4       	brcc	.+24     	; 0x1cc4 <vfprintf+0x330>
    1cac:	b6 01       	movw	r22, r12
    1cae:	80 e2       	ldi	r24, 0x20	; 32
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1cb6:	b3 94       	inc	r11
    1cb8:	f7 cf       	rjmp	.-18     	; 0x1ca8 <vfprintf+0x314>
    1cba:	b2 14       	cp	r11, r2
    1cbc:	18 f4       	brcc	.+6      	; 0x1cc4 <vfprintf+0x330>
    1cbe:	2b 18       	sub	r2, r11
    1cc0:	02 c0       	rjmp	.+4      	; 0x1cc6 <vfprintf+0x332>
    1cc2:	98 2c       	mov	r9, r8
    1cc4:	21 2c       	mov	r2, r1
    1cc6:	a4 fe       	sbrs	r10, 4
    1cc8:	10 c0       	rjmp	.+32     	; 0x1cea <vfprintf+0x356>
    1cca:	b6 01       	movw	r22, r12
    1ccc:	80 e3       	ldi	r24, 0x30	; 48
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1cd4:	a2 fe       	sbrs	r10, 2
    1cd6:	17 c0       	rjmp	.+46     	; 0x1d06 <vfprintf+0x372>
    1cd8:	a1 fc       	sbrc	r10, 1
    1cda:	03 c0       	rjmp	.+6      	; 0x1ce2 <vfprintf+0x34e>
    1cdc:	88 e7       	ldi	r24, 0x78	; 120
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	02 c0       	rjmp	.+4      	; 0x1ce6 <vfprintf+0x352>
    1ce2:	88 e5       	ldi	r24, 0x58	; 88
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	b6 01       	movw	r22, r12
    1ce8:	0c c0       	rjmp	.+24     	; 0x1d02 <vfprintf+0x36e>
    1cea:	8a 2d       	mov	r24, r10
    1cec:	86 78       	andi	r24, 0x86	; 134
    1cee:	59 f0       	breq	.+22     	; 0x1d06 <vfprintf+0x372>
    1cf0:	a1 fe       	sbrs	r10, 1
    1cf2:	02 c0       	rjmp	.+4      	; 0x1cf8 <vfprintf+0x364>
    1cf4:	8b e2       	ldi	r24, 0x2B	; 43
    1cf6:	01 c0       	rjmp	.+2      	; 0x1cfa <vfprintf+0x366>
    1cf8:	80 e2       	ldi	r24, 0x20	; 32
    1cfa:	a7 fc       	sbrc	r10, 7
    1cfc:	8d e2       	ldi	r24, 0x2D	; 45
    1cfe:	b6 01       	movw	r22, r12
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1d06:	89 14       	cp	r8, r9
    1d08:	38 f4       	brcc	.+14     	; 0x1d18 <vfprintf+0x384>
    1d0a:	b6 01       	movw	r22, r12
    1d0c:	80 e3       	ldi	r24, 0x30	; 48
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1d14:	9a 94       	dec	r9
    1d16:	f7 cf       	rjmp	.-18     	; 0x1d06 <vfprintf+0x372>
    1d18:	8a 94       	dec	r8
    1d1a:	f3 01       	movw	r30, r6
    1d1c:	e8 0d       	add	r30, r8
    1d1e:	f1 1d       	adc	r31, r1
    1d20:	80 81       	ld	r24, Z
    1d22:	b6 01       	movw	r22, r12
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1d2a:	81 10       	cpse	r8, r1
    1d2c:	f5 cf       	rjmp	.-22     	; 0x1d18 <vfprintf+0x384>
    1d2e:	22 20       	and	r2, r2
    1d30:	09 f4       	brne	.+2      	; 0x1d34 <vfprintf+0x3a0>
    1d32:	42 ce       	rjmp	.-892    	; 0x19b8 <vfprintf+0x24>
    1d34:	b6 01       	movw	r22, r12
    1d36:	80 e2       	ldi	r24, 0x20	; 32
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <fputc>
    1d3e:	2a 94       	dec	r2
    1d40:	f6 cf       	rjmp	.-20     	; 0x1d2e <vfprintf+0x39a>
    1d42:	f6 01       	movw	r30, r12
    1d44:	86 81       	ldd	r24, Z+6	; 0x06
    1d46:	97 81       	ldd	r25, Z+7	; 0x07
    1d48:	02 c0       	rjmp	.+4      	; 0x1d4e <vfprintf+0x3ba>
    1d4a:	8f ef       	ldi	r24, 0xFF	; 255
    1d4c:	9f ef       	ldi	r25, 0xFF	; 255
    1d4e:	2b 96       	adiw	r28, 0x0b	; 11
    1d50:	e2 e1       	ldi	r30, 0x12	; 18
    1d52:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__epilogue_restores__>

00001d56 <strnlen_P>:
    1d56:	fc 01       	movw	r30, r24
    1d58:	05 90       	lpm	r0, Z+
    1d5a:	61 50       	subi	r22, 0x01	; 1
    1d5c:	70 40       	sbci	r23, 0x00	; 0
    1d5e:	01 10       	cpse	r0, r1
    1d60:	d8 f7       	brcc	.-10     	; 0x1d58 <strnlen_P+0x2>
    1d62:	80 95       	com	r24
    1d64:	90 95       	com	r25
    1d66:	8e 0f       	add	r24, r30
    1d68:	9f 1f       	adc	r25, r31
    1d6a:	08 95       	ret

00001d6c <strnlen>:
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	61 50       	subi	r22, 0x01	; 1
    1d70:	70 40       	sbci	r23, 0x00	; 0
    1d72:	01 90       	ld	r0, Z+
    1d74:	01 10       	cpse	r0, r1
    1d76:	d8 f7       	brcc	.-10     	; 0x1d6e <strnlen+0x2>
    1d78:	80 95       	com	r24
    1d7a:	90 95       	com	r25
    1d7c:	8e 0f       	add	r24, r30
    1d7e:	9f 1f       	adc	r25, r31
    1d80:	08 95       	ret

00001d82 <strrev>:
    1d82:	dc 01       	movw	r26, r24
    1d84:	fc 01       	movw	r30, r24
    1d86:	67 2f       	mov	r22, r23
    1d88:	71 91       	ld	r23, Z+
    1d8a:	77 23       	and	r23, r23
    1d8c:	e1 f7       	brne	.-8      	; 0x1d86 <strrev+0x4>
    1d8e:	32 97       	sbiw	r30, 0x02	; 2
    1d90:	04 c0       	rjmp	.+8      	; 0x1d9a <strrev+0x18>
    1d92:	7c 91       	ld	r23, X
    1d94:	6d 93       	st	X+, r22
    1d96:	70 83       	st	Z, r23
    1d98:	62 91       	ld	r22, -Z
    1d9a:	ae 17       	cp	r26, r30
    1d9c:	bf 07       	cpc	r27, r31
    1d9e:	c8 f3       	brcs	.-14     	; 0x1d92 <strrev+0x10>
    1da0:	08 95       	ret

00001da2 <fputc>:
    1da2:	0f 93       	push	r16
    1da4:	1f 93       	push	r17
    1da6:	cf 93       	push	r28
    1da8:	df 93       	push	r29
    1daa:	fb 01       	movw	r30, r22
    1dac:	23 81       	ldd	r18, Z+3	; 0x03
    1dae:	21 fd       	sbrc	r18, 1
    1db0:	03 c0       	rjmp	.+6      	; 0x1db8 <fputc+0x16>
    1db2:	8f ef       	ldi	r24, 0xFF	; 255
    1db4:	9f ef       	ldi	r25, 0xFF	; 255
    1db6:	2c c0       	rjmp	.+88     	; 0x1e10 <fputc+0x6e>
    1db8:	22 ff       	sbrs	r18, 2
    1dba:	16 c0       	rjmp	.+44     	; 0x1de8 <fputc+0x46>
    1dbc:	46 81       	ldd	r20, Z+6	; 0x06
    1dbe:	57 81       	ldd	r21, Z+7	; 0x07
    1dc0:	24 81       	ldd	r18, Z+4	; 0x04
    1dc2:	35 81       	ldd	r19, Z+5	; 0x05
    1dc4:	42 17       	cp	r20, r18
    1dc6:	53 07       	cpc	r21, r19
    1dc8:	44 f4       	brge	.+16     	; 0x1dda <fputc+0x38>
    1dca:	a0 81       	ld	r26, Z
    1dcc:	b1 81       	ldd	r27, Z+1	; 0x01
    1dce:	9d 01       	movw	r18, r26
    1dd0:	2f 5f       	subi	r18, 0xFF	; 255
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	31 83       	std	Z+1, r19	; 0x01
    1dd6:	20 83       	st	Z, r18
    1dd8:	8c 93       	st	X, r24
    1dda:	26 81       	ldd	r18, Z+6	; 0x06
    1ddc:	37 81       	ldd	r19, Z+7	; 0x07
    1dde:	2f 5f       	subi	r18, 0xFF	; 255
    1de0:	3f 4f       	sbci	r19, 0xFF	; 255
    1de2:	37 83       	std	Z+7, r19	; 0x07
    1de4:	26 83       	std	Z+6, r18	; 0x06
    1de6:	14 c0       	rjmp	.+40     	; 0x1e10 <fputc+0x6e>
    1de8:	8b 01       	movw	r16, r22
    1dea:	ec 01       	movw	r28, r24
    1dec:	fb 01       	movw	r30, r22
    1dee:	00 84       	ldd	r0, Z+8	; 0x08
    1df0:	f1 85       	ldd	r31, Z+9	; 0x09
    1df2:	e0 2d       	mov	r30, r0
    1df4:	09 95       	icall
    1df6:	89 2b       	or	r24, r25
    1df8:	e1 f6       	brne	.-72     	; 0x1db2 <fputc+0x10>
    1dfa:	d8 01       	movw	r26, r16
    1dfc:	16 96       	adiw	r26, 0x06	; 6
    1dfe:	8d 91       	ld	r24, X+
    1e00:	9c 91       	ld	r25, X
    1e02:	17 97       	sbiw	r26, 0x07	; 7
    1e04:	01 96       	adiw	r24, 0x01	; 1
    1e06:	17 96       	adiw	r26, 0x07	; 7
    1e08:	9c 93       	st	X, r25
    1e0a:	8e 93       	st	-X, r24
    1e0c:	16 97       	sbiw	r26, 0x06	; 6
    1e0e:	ce 01       	movw	r24, r28
    1e10:	df 91       	pop	r29
    1e12:	cf 91       	pop	r28
    1e14:	1f 91       	pop	r17
    1e16:	0f 91       	pop	r16
    1e18:	08 95       	ret

00001e1a <__ultoa_invert>:
    1e1a:	fa 01       	movw	r30, r20
    1e1c:	aa 27       	eor	r26, r26
    1e1e:	28 30       	cpi	r18, 0x08	; 8
    1e20:	51 f1       	breq	.+84     	; 0x1e76 <__ultoa_invert+0x5c>
    1e22:	20 31       	cpi	r18, 0x10	; 16
    1e24:	81 f1       	breq	.+96     	; 0x1e86 <__ultoa_invert+0x6c>
    1e26:	e8 94       	clt
    1e28:	6f 93       	push	r22
    1e2a:	6e 7f       	andi	r22, 0xFE	; 254
    1e2c:	6e 5f       	subi	r22, 0xFE	; 254
    1e2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e30:	8f 4f       	sbci	r24, 0xFF	; 255
    1e32:	9f 4f       	sbci	r25, 0xFF	; 255
    1e34:	af 4f       	sbci	r26, 0xFF	; 255
    1e36:	b1 e0       	ldi	r27, 0x01	; 1
    1e38:	3e d0       	rcall	.+124    	; 0x1eb6 <__ultoa_invert+0x9c>
    1e3a:	b4 e0       	ldi	r27, 0x04	; 4
    1e3c:	3c d0       	rcall	.+120    	; 0x1eb6 <__ultoa_invert+0x9c>
    1e3e:	67 0f       	add	r22, r23
    1e40:	78 1f       	adc	r23, r24
    1e42:	89 1f       	adc	r24, r25
    1e44:	9a 1f       	adc	r25, r26
    1e46:	a1 1d       	adc	r26, r1
    1e48:	68 0f       	add	r22, r24
    1e4a:	79 1f       	adc	r23, r25
    1e4c:	8a 1f       	adc	r24, r26
    1e4e:	91 1d       	adc	r25, r1
    1e50:	a1 1d       	adc	r26, r1
    1e52:	6a 0f       	add	r22, r26
    1e54:	71 1d       	adc	r23, r1
    1e56:	81 1d       	adc	r24, r1
    1e58:	91 1d       	adc	r25, r1
    1e5a:	a1 1d       	adc	r26, r1
    1e5c:	20 d0       	rcall	.+64     	; 0x1e9e <__ultoa_invert+0x84>
    1e5e:	09 f4       	brne	.+2      	; 0x1e62 <__ultoa_invert+0x48>
    1e60:	68 94       	set
    1e62:	3f 91       	pop	r19
    1e64:	2a e0       	ldi	r18, 0x0A	; 10
    1e66:	26 9f       	mul	r18, r22
    1e68:	11 24       	eor	r1, r1
    1e6a:	30 19       	sub	r19, r0
    1e6c:	30 5d       	subi	r19, 0xD0	; 208
    1e6e:	31 93       	st	Z+, r19
    1e70:	de f6       	brtc	.-74     	; 0x1e28 <__ultoa_invert+0xe>
    1e72:	cf 01       	movw	r24, r30
    1e74:	08 95       	ret
    1e76:	46 2f       	mov	r20, r22
    1e78:	47 70       	andi	r20, 0x07	; 7
    1e7a:	40 5d       	subi	r20, 0xD0	; 208
    1e7c:	41 93       	st	Z+, r20
    1e7e:	b3 e0       	ldi	r27, 0x03	; 3
    1e80:	0f d0       	rcall	.+30     	; 0x1ea0 <__ultoa_invert+0x86>
    1e82:	c9 f7       	brne	.-14     	; 0x1e76 <__ultoa_invert+0x5c>
    1e84:	f6 cf       	rjmp	.-20     	; 0x1e72 <__ultoa_invert+0x58>
    1e86:	46 2f       	mov	r20, r22
    1e88:	4f 70       	andi	r20, 0x0F	; 15
    1e8a:	40 5d       	subi	r20, 0xD0	; 208
    1e8c:	4a 33       	cpi	r20, 0x3A	; 58
    1e8e:	18 f0       	brcs	.+6      	; 0x1e96 <__ultoa_invert+0x7c>
    1e90:	49 5d       	subi	r20, 0xD9	; 217
    1e92:	31 fd       	sbrc	r19, 1
    1e94:	40 52       	subi	r20, 0x20	; 32
    1e96:	41 93       	st	Z+, r20
    1e98:	02 d0       	rcall	.+4      	; 0x1e9e <__ultoa_invert+0x84>
    1e9a:	a9 f7       	brne	.-22     	; 0x1e86 <__ultoa_invert+0x6c>
    1e9c:	ea cf       	rjmp	.-44     	; 0x1e72 <__ultoa_invert+0x58>
    1e9e:	b4 e0       	ldi	r27, 0x04	; 4
    1ea0:	a6 95       	lsr	r26
    1ea2:	97 95       	ror	r25
    1ea4:	87 95       	ror	r24
    1ea6:	77 95       	ror	r23
    1ea8:	67 95       	ror	r22
    1eaa:	ba 95       	dec	r27
    1eac:	c9 f7       	brne	.-14     	; 0x1ea0 <__ultoa_invert+0x86>
    1eae:	00 97       	sbiw	r24, 0x00	; 0
    1eb0:	61 05       	cpc	r22, r1
    1eb2:	71 05       	cpc	r23, r1
    1eb4:	08 95       	ret
    1eb6:	9b 01       	movw	r18, r22
    1eb8:	ac 01       	movw	r20, r24
    1eba:	0a 2e       	mov	r0, r26
    1ebc:	06 94       	lsr	r0
    1ebe:	57 95       	ror	r21
    1ec0:	47 95       	ror	r20
    1ec2:	37 95       	ror	r19
    1ec4:	27 95       	ror	r18
    1ec6:	ba 95       	dec	r27
    1ec8:	c9 f7       	brne	.-14     	; 0x1ebc <__ultoa_invert+0xa2>
    1eca:	62 0f       	add	r22, r18
    1ecc:	73 1f       	adc	r23, r19
    1ece:	84 1f       	adc	r24, r20
    1ed0:	95 1f       	adc	r25, r21
    1ed2:	a0 1d       	adc	r26, r0
    1ed4:	08 95       	ret

00001ed6 <__prologue_saves__>:
    1ed6:	2f 92       	push	r2
    1ed8:	3f 92       	push	r3
    1eda:	4f 92       	push	r4
    1edc:	5f 92       	push	r5
    1ede:	6f 92       	push	r6
    1ee0:	7f 92       	push	r7
    1ee2:	8f 92       	push	r8
    1ee4:	9f 92       	push	r9
    1ee6:	af 92       	push	r10
    1ee8:	bf 92       	push	r11
    1eea:	cf 92       	push	r12
    1eec:	df 92       	push	r13
    1eee:	ef 92       	push	r14
    1ef0:	ff 92       	push	r15
    1ef2:	0f 93       	push	r16
    1ef4:	1f 93       	push	r17
    1ef6:	cf 93       	push	r28
    1ef8:	df 93       	push	r29
    1efa:	cd b7       	in	r28, 0x3d	; 61
    1efc:	de b7       	in	r29, 0x3e	; 62
    1efe:	ca 1b       	sub	r28, r26
    1f00:	db 0b       	sbc	r29, r27
    1f02:	0f b6       	in	r0, 0x3f	; 63
    1f04:	f8 94       	cli
    1f06:	de bf       	out	0x3e, r29	; 62
    1f08:	0f be       	out	0x3f, r0	; 63
    1f0a:	cd bf       	out	0x3d, r28	; 61
    1f0c:	09 94       	ijmp

00001f0e <__epilogue_restores__>:
    1f0e:	2a 88       	ldd	r2, Y+18	; 0x12
    1f10:	39 88       	ldd	r3, Y+17	; 0x11
    1f12:	48 88       	ldd	r4, Y+16	; 0x10
    1f14:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f16:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f18:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f1a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f1c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f1e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f20:	b9 84       	ldd	r11, Y+9	; 0x09
    1f22:	c8 84       	ldd	r12, Y+8	; 0x08
    1f24:	df 80       	ldd	r13, Y+7	; 0x07
    1f26:	ee 80       	ldd	r14, Y+6	; 0x06
    1f28:	fd 80       	ldd	r15, Y+5	; 0x05
    1f2a:	0c 81       	ldd	r16, Y+4	; 0x04
    1f2c:	1b 81       	ldd	r17, Y+3	; 0x03
    1f2e:	aa 81       	ldd	r26, Y+2	; 0x02
    1f30:	b9 81       	ldd	r27, Y+1	; 0x01
    1f32:	ce 0f       	add	r28, r30
    1f34:	d1 1d       	adc	r29, r1
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	f8 94       	cli
    1f3a:	de bf       	out	0x3e, r29	; 62
    1f3c:	0f be       	out	0x3f, r0	; 63
    1f3e:	cd bf       	out	0x3d, r28	; 61
    1f40:	ed 01       	movw	r28, r26
    1f42:	08 95       	ret

00001f44 <_exit>:
    1f44:	f8 94       	cli

00001f46 <__stop_program>:
    1f46:	ff cf       	rjmp	.-2      	; 0x1f46 <__stop_program>
