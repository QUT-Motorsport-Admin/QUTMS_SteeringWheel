
oled_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000075e  00800100  00002130  000021c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002130  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002e  0080085e  0080085e  00002922  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002922  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002980  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  000029c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025ef  00000000  00000000  00002bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ccf  00000000  00000000  000051e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c65  00000000  00000000  00005eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000980  00000000  00000000  00007b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e61  00000000  00000000  0000849c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014a9  00000000  00000000  000092fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000a7a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__vector_10>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 0c 04 	jmp	0x818	; 0x818 <__vector_18>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d0 e1       	ldi	r29, 0x10	; 16
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	18 e0       	ldi	r17, 0x08	; 8
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e0 e3       	ldi	r30, 0x30	; 48
      90:	f1 e2       	ldi	r31, 0x21	; 33
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 35       	cpi	r26, 0x5E	; 94
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	28 e0       	ldi	r18, 0x08	; 8
      a0:	ae e5       	ldi	r26, 0x5E	; 94
      a2:	b8 e0       	ldi	r27, 0x08	; 8
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ac 38       	cpi	r26, 0x8C	; 140
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 0d 01 	call	0x21a	; 0x21a <main>
      b2:	0c 94 96 10 	jmp	0x212c	; 0x212c <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <countDigits>:
unsigned char Super[] = "Azoz158";
//"supPeeps69";
//https://www.diffnow.com/compare-files


uint16_t countDigits(uint16_t tempInt){
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
      c2:	2d 97       	sbiw	r28, 0x0d	; 13
      c4:	0f b6       	in	r0, 0x3f	; 63
      c6:	f8 94       	cli
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	cd bf       	out	0x3d, r28	; 61
      ce:	9d 87       	std	Y+13, r25	; 0x0d
      d0:	8c 87       	std	Y+12, r24	; 0x0c
	unsigned char intCountingArray[10];
	sprintf(intCountingArray, "%d", tempInt);
      d2:	8d 85       	ldd	r24, Y+13	; 0x0d
      d4:	8f 93       	push	r24
      d6:	8c 85       	ldd	r24, Y+12	; 0x0c
      d8:	8f 93       	push	r24
      da:	83 e0       	ldi	r24, 0x03	; 3
      dc:	98 e0       	ldi	r25, 0x08	; 8
      de:	89 2f       	mov	r24, r25
      e0:	8f 93       	push	r24
      e2:	83 e0       	ldi	r24, 0x03	; 3
      e4:	98 e0       	ldi	r25, 0x08	; 8
      e6:	8f 93       	push	r24
      e8:	ce 01       	movw	r24, r28
      ea:	02 96       	adiw	r24, 0x02	; 2
      ec:	29 2f       	mov	r18, r25
      ee:	2f 93       	push	r18
      f0:	8f 93       	push	r24
      f2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
      f6:	0f 90       	pop	r0
      f8:	0f 90       	pop	r0
      fa:	0f 90       	pop	r0
      fc:	0f 90       	pop	r0
      fe:	0f 90       	pop	r0
     100:	0f 90       	pop	r0
	for(uint8_t i = 0; i < sizeof intCountingArray; i++){
     102:	19 82       	std	Y+1, r1	; 0x01
     104:	13 c0       	rjmp	.+38     	; 0x12c <countDigits+0x72>
		if(intCountingArray[i] == '\0'){
     106:	89 81       	ldd	r24, Y+1	; 0x01
     108:	88 2f       	mov	r24, r24
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	9e 01       	movw	r18, r28
     10e:	2e 5f       	subi	r18, 0xFE	; 254
     110:	3f 4f       	sbci	r19, 0xFF	; 255
     112:	82 0f       	add	r24, r18
     114:	93 1f       	adc	r25, r19
     116:	fc 01       	movw	r30, r24
     118:	80 81       	ld	r24, Z
     11a:	88 23       	and	r24, r24
     11c:	21 f4       	brne	.+8      	; 0x126 <countDigits+0x6c>
			return i;
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	88 2f       	mov	r24, r24
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	06 c0       	rjmp	.+12     	; 0x132 <countDigits+0x78>


uint16_t countDigits(uint16_t tempInt){
	unsigned char intCountingArray[10];
	sprintf(intCountingArray, "%d", tempInt);
	for(uint8_t i = 0; i < sizeof intCountingArray; i++){
     126:	89 81       	ldd	r24, Y+1	; 0x01
     128:	8f 5f       	subi	r24, 0xFF	; 255
     12a:	89 83       	std	Y+1, r24	; 0x01
     12c:	89 81       	ldd	r24, Y+1	; 0x01
     12e:	8a 30       	cpi	r24, 0x0A	; 10
     130:	50 f3       	brcs	.-44     	; 0x106 <countDigits+0x4c>
		if(intCountingArray[i] == '\0'){
			return i;
		}
	}
}
     132:	2d 96       	adiw	r28, 0x0d	; 13
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	08 95       	ret

00000144 <parseCharArrayForDisplay>:

void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
     14c:	28 97       	sbiw	r28, 0x08	; 8
     14e:	0f b6       	in	r0, 0x3f	; 63
     150:	f8 94       	cli
     152:	de bf       	out	0x3e, r29	; 62
     154:	0f be       	out	0x3f, r0	; 63
     156:	cd bf       	out	0x3d, r28	; 61
     158:	9e 83       	std	Y+6, r25	; 0x06
     15a:	8d 83       	std	Y+5, r24	; 0x05
     15c:	78 87       	std	Y+8, r23	; 0x08
     15e:	6f 83       	std	Y+7, r22	; 0x07
	uint16_t digitsNumber = 0;
     160:	1c 82       	std	Y+4, r1	; 0x04
     162:	1b 82       	std	Y+3, r1	; 0x03
	for(uint8_t i = 0; i < sizeof temp; i++){
     164:	19 82       	std	Y+1, r1	; 0x01
     166:	4b c0       	rjmp	.+150    	; 0x1fe <parseCharArrayForDisplay+0xba>
		if(temp[i] == '\0'){
     168:	89 81       	ldd	r24, Y+1	; 0x01
     16a:	88 2f       	mov	r24, r24
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	2d 81       	ldd	r18, Y+5	; 0x05
     170:	3e 81       	ldd	r19, Y+6	; 0x06
     172:	82 0f       	add	r24, r18
     174:	93 1f       	adc	r25, r19
     176:	fc 01       	movw	r30, r24
     178:	80 81       	ld	r24, Z
     17a:	88 23       	and	r24, r24
     17c:	e9 f5       	brne	.+122    	; 0x1f8 <parseCharArrayForDisplay+0xb4>
			digitsNumber = countDigits(maximumNumberExpected);
     17e:	8f 81       	ldd	r24, Y+7	; 0x07
     180:	98 85       	ldd	r25, Y+8	; 0x08
     182:	0e 94 5d 00 	call	0xba	; 0xba <countDigits>
     186:	9c 83       	std	Y+4, r25	; 0x04
     188:	8b 83       	std	Y+3, r24	; 0x03
			for (uint8_t k = 0; k < digitsNumber; k++)
     18a:	1a 82       	std	Y+2, r1	; 0x02
     18c:	2b c0       	rjmp	.+86     	; 0x1e4 <parseCharArrayForDisplay+0xa0>
			{
				temp[i+k] = '`';
     18e:	89 81       	ldd	r24, Y+1	; 0x01
     190:	28 2f       	mov	r18, r24
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	8a 81       	ldd	r24, Y+2	; 0x02
     196:	88 2f       	mov	r24, r24
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	82 0f       	add	r24, r18
     19c:	93 1f       	adc	r25, r19
     19e:	9c 01       	movw	r18, r24
     1a0:	8d 81       	ldd	r24, Y+5	; 0x05
     1a2:	9e 81       	ldd	r25, Y+6	; 0x06
     1a4:	82 0f       	add	r24, r18
     1a6:	93 1f       	adc	r25, r19
     1a8:	20 e6       	ldi	r18, 0x60	; 96
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
				if(k == digitsNumber - 1){
     1ae:	8a 81       	ldd	r24, Y+2	; 0x02
     1b0:	28 2f       	mov	r18, r24
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	8b 81       	ldd	r24, Y+3	; 0x03
     1b6:	9c 81       	ldd	r25, Y+4	; 0x04
     1b8:	01 97       	sbiw	r24, 0x01	; 1
     1ba:	28 17       	cp	r18, r24
     1bc:	39 07       	cpc	r19, r25
     1be:	79 f4       	brne	.+30     	; 0x1de <parseCharArrayForDisplay+0x9a>
					temp[i+k] = '\0';
     1c0:	89 81       	ldd	r24, Y+1	; 0x01
     1c2:	28 2f       	mov	r18, r24
     1c4:	30 e0       	ldi	r19, 0x00	; 0
     1c6:	8a 81       	ldd	r24, Y+2	; 0x02
     1c8:	88 2f       	mov	r24, r24
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	82 0f       	add	r24, r18
     1ce:	93 1f       	adc	r25, r19
     1d0:	9c 01       	movw	r18, r24
     1d2:	8d 81       	ldd	r24, Y+5	; 0x05
     1d4:	9e 81       	ldd	r25, Y+6	; 0x06
     1d6:	82 0f       	add	r24, r18
     1d8:	93 1f       	adc	r25, r19
     1da:	fc 01       	movw	r30, r24
     1dc:	10 82       	st	Z, r1
void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
	uint16_t digitsNumber = 0;
	for(uint8_t i = 0; i < sizeof temp; i++){
		if(temp[i] == '\0'){
			digitsNumber = countDigits(maximumNumberExpected);
			for (uint8_t k = 0; k < digitsNumber; k++)
     1de:	8a 81       	ldd	r24, Y+2	; 0x02
     1e0:	8f 5f       	subi	r24, 0xFF	; 255
     1e2:	8a 83       	std	Y+2, r24	; 0x02
     1e4:	8a 81       	ldd	r24, Y+2	; 0x02
     1e6:	28 2f       	mov	r18, r24
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	8b 81       	ldd	r24, Y+3	; 0x03
     1ec:	9c 81       	ldd	r25, Y+4	; 0x04
     1ee:	28 17       	cp	r18, r24
     1f0:	39 07       	cpc	r19, r25
     1f2:	68 f2       	brcs	.-102    	; 0x18e <parseCharArrayForDisplay+0x4a>
				temp[i+k] = '`';
				if(k == digitsNumber - 1){
					temp[i+k] = '\0';
				}
			}
			i = sizeof temp;
     1f4:	82 e0       	ldi	r24, 0x02	; 2
     1f6:	89 83       	std	Y+1, r24	; 0x01
	}
}

void parseCharArrayForDisplay(unsigned char temp[], uint16_t maximumNumberExpected){
	uint16_t digitsNumber = 0;
	for(uint8_t i = 0; i < sizeof temp; i++){
     1f8:	89 81       	ldd	r24, Y+1	; 0x01
     1fa:	8f 5f       	subi	r24, 0xFF	; 255
     1fc:	89 83       	std	Y+1, r24	; 0x01
     1fe:	89 81       	ldd	r24, Y+1	; 0x01
     200:	82 30       	cpi	r24, 0x02	; 2
     202:	08 f4       	brcc	.+2      	; 0x206 <parseCharArrayForDisplay+0xc2>
     204:	b1 cf       	rjmp	.-158    	; 0x168 <parseCharArrayForDisplay+0x24>
				}
			}
			i = sizeof temp;
		}
	}
}
     206:	00 00       	nop
     208:	28 96       	adiw	r28, 0x08	; 8
     20a:	0f b6       	in	r0, 0x3f	; 63
     20c:	f8 94       	cli
     20e:	de bf       	out	0x3e, r29	; 62
     210:	0f be       	out	0x3f, r0	; 63
     212:	cd bf       	out	0x3d, r28	; 61
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <main>:

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Main Program
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
int main()
{
     21a:	ef 92       	push	r14
     21c:	ff 92       	push	r15
     21e:	0f 93       	push	r16
     220:	1f 93       	push	r17
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	c6 59       	subi	r28, 0x96	; 150
     22c:	d1 09       	sbc	r29, r1
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
	
	DDRB = 0b11100011;	//b7 - SCK; b1 - MOSI
     238:	84 e2       	ldi	r24, 0x24	; 36
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	23 ee       	ldi	r18, 0xE3	; 227
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18
	DDRD = 0b00001001;	//b3 - SS pin
     242:	8a e2       	ldi	r24, 0x2A	; 42
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	29 e0       	ldi	r18, 0x09	; 9
     248:	fc 01       	movw	r30, r24
     24a:	20 83       	st	Z, r18
	SPI_clock_high;
     24c:	85 e2       	ldi	r24, 0x25	; 37
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	25 e2       	ldi	r18, 0x25	; 37
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	f9 01       	movw	r30, r18
     256:	20 81       	ld	r18, Z
     258:	20 68       	ori	r18, 0x80	; 128
     25a:	fc 01       	movw	r30, r24
     25c:	20 83       	st	Z, r18

	ADC_init();		// Initialise ADC
     25e:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <ADC_init>
	spi_init();
     262:	0e 94 85 06 	call	0xd0a	; 0xd0a <spi_init>
	OLED_Init();
     266:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <OLED_Init>

	CAN_init();		// Initialise CAN
     26a:	0e 94 9a 04 	call	0x934	; 0x934 <CAN_init>
	CAN_RXInit(5,8,0x400000, 0x400000);
     26e:	e1 2c       	mov	r14, r1
     270:	f1 2c       	mov	r15, r1
     272:	00 e4       	ldi	r16, 0x40	; 64
     274:	10 e0       	ldi	r17, 0x00	; 0
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e4       	ldi	r20, 0x40	; 64
     27c:	50 e0       	ldi	r21, 0x00	; 0
     27e:	68 e0       	ldi	r22, 0x08	; 8
     280:	85 e0       	ldi	r24, 0x05	; 5
     282:	0e 94 fe 04 	call	0x9fc	; 0x9fc <CAN_RXInit>

	sei();
     286:	78 94       	sei

	//Fill_RAM(0x00);			// Clear Screen
	unsigned int index33 = 0x17;
     288:	87 e1       	ldi	r24, 0x17	; 23
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	9a 87       	std	Y+10, r25	; 0x0a
     28e:	89 87       	std	Y+9, r24	; 0x09
	unsigned char character66 = 65;
     290:	81 e4       	ldi	r24, 0x41	; 65
     292:	8b 87       	std	Y+11, r24	; 0x0b

	unsigned char temp_brightness = 0;
     294:	1c 86       	std	Y+12, r1	; 0x0c
	uint16_t LeftDialADCScaled;
	uint16_t RightDialADC;
	int RightDialADCScaled;
	uint8_t mob;

	unsigned char Acceleration[]= {'A','C','C','E','L','E','R','A','T','I','O','N'};
     296:	8c e0       	ldi	r24, 0x0C	; 12
     298:	eb e0       	ldi	r30, 0x0B	; 11
     29a:	f8 e0       	ldi	r31, 0x08	; 8
     29c:	de 01       	movw	r26, r28
     29e:	d1 96       	adiw	r26, 0x31	; 49
     2a0:	01 90       	ld	r0, Z+
     2a2:	0d 92       	st	X+, r0
     2a4:	8a 95       	dec	r24
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x86>
	unsigned char SkidPad[]= {'S','K','I','D','P','A','D'};
     2a8:	87 e0       	ldi	r24, 0x07	; 7
     2aa:	e7 e1       	ldi	r30, 0x17	; 23
     2ac:	f8 e0       	ldi	r31, 0x08	; 8
     2ae:	de 01       	movw	r26, r28
     2b0:	dd 96       	adiw	r26, 0x3d	; 61
     2b2:	01 90       	ld	r0, Z+
     2b4:	0d 92       	st	X+, r0
     2b6:	8a 95       	dec	r24
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <main+0x98>
	unsigned char AutoCross[]= {'A','U','T','O','C','R','O','S','S'};
     2ba:	ce 01       	movw	r24, r28
     2bc:	8c 5b       	subi	r24, 0xBC	; 188
     2be:	9f 4f       	sbci	r25, 0xFF	; 255
     2c0:	29 e0       	ldi	r18, 0x09	; 9
     2c2:	ee e1       	ldi	r30, 0x1E	; 30
     2c4:	f8 e0       	ldi	r31, 0x08	; 8
     2c6:	dc 01       	movw	r26, r24
     2c8:	01 90       	ld	r0, Z+
     2ca:	0d 92       	st	X+, r0
     2cc:	2a 95       	dec	r18
     2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0xae>
	unsigned char Endurance[]= {'E','N','D','U','R','A','N,','C','E'};
     2d0:	ce 01       	movw	r24, r28
     2d2:	83 5b       	subi	r24, 0xB3	; 179
     2d4:	9f 4f       	sbci	r25, 0xFF	; 255
     2d6:	29 e0       	ldi	r18, 0x09	; 9
     2d8:	e7 e2       	ldi	r30, 0x27	; 39
     2da:	f8 e0       	ldi	r31, 0x08	; 8
     2dc:	dc 01       	movw	r26, r24
     2de:	01 90       	ld	r0, Z+
     2e0:	0d 92       	st	X+, r0
     2e2:	2a 95       	dec	r18
     2e4:	e1 f7       	brne	.-8      	; 0x2de <main+0xc4>
	unsigned char SelectionRight[]= {'>','>','>','>'};
     2e6:	ce 01       	movw	r24, r28
     2e8:	8a 5a       	subi	r24, 0xAA	; 170
     2ea:	9f 4f       	sbci	r25, 0xFF	; 255
     2ec:	2e e3       	ldi	r18, 0x3E	; 62
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18
     2f2:	ce 01       	movw	r24, r28
     2f4:	8a 5a       	subi	r24, 0xAA	; 170
     2f6:	9f 4f       	sbci	r25, 0xFF	; 255
     2f8:	2e e3       	ldi	r18, 0x3E	; 62
     2fa:	fc 01       	movw	r30, r24
     2fc:	21 83       	std	Z+1, r18	; 0x01
     2fe:	ce 01       	movw	r24, r28
     300:	8a 5a       	subi	r24, 0xAA	; 170
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	2e e3       	ldi	r18, 0x3E	; 62
     306:	fc 01       	movw	r30, r24
     308:	22 83       	std	Z+2, r18	; 0x02
     30a:	ce 01       	movw	r24, r28
     30c:	8a 5a       	subi	r24, 0xAA	; 170
     30e:	9f 4f       	sbci	r25, 0xFF	; 255
     310:	2e e3       	ldi	r18, 0x3E	; 62
     312:	fc 01       	movw	r30, r24
     314:	23 83       	std	Z+3, r18	; 0x03
	unsigned char SelectionLeft[]= {'<','<','<','<'};
     316:	ce 01       	movw	r24, r28
     318:	86 5a       	subi	r24, 0xA6	; 166
     31a:	9f 4f       	sbci	r25, 0xFF	; 255
     31c:	2c e3       	ldi	r18, 0x3C	; 60
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18
     322:	ce 01       	movw	r24, r28
     324:	86 5a       	subi	r24, 0xA6	; 166
     326:	9f 4f       	sbci	r25, 0xFF	; 255
     328:	2c e3       	ldi	r18, 0x3C	; 60
     32a:	fc 01       	movw	r30, r24
     32c:	21 83       	std	Z+1, r18	; 0x01
     32e:	ce 01       	movw	r24, r28
     330:	86 5a       	subi	r24, 0xA6	; 166
     332:	9f 4f       	sbci	r25, 0xFF	; 255
     334:	2c e3       	ldi	r18, 0x3C	; 60
     336:	fc 01       	movw	r30, r24
     338:	22 83       	std	Z+2, r18	; 0x02
     33a:	ce 01       	movw	r24, r28
     33c:	86 5a       	subi	r24, 0xA6	; 166
     33e:	9f 4f       	sbci	r25, 0xFF	; 255
     340:	2c e3       	ldi	r18, 0x3C	; 60
     342:	fc 01       	movw	r30, r24
     344:	23 83       	std	Z+3, r18	; 0x03
	unsigned char Voltage[]= {'V','O','L','T','A','G','E',' ',':'};
     346:	ce 01       	movw	r24, r28
     348:	82 5a       	subi	r24, 0xA2	; 162
     34a:	9f 4f       	sbci	r25, 0xFF	; 255
     34c:	29 e0       	ldi	r18, 0x09	; 9
     34e:	e0 e3       	ldi	r30, 0x30	; 48
     350:	f8 e0       	ldi	r31, 0x08	; 8
     352:	dc 01       	movw	r26, r24
     354:	01 90       	ld	r0, Z+
     356:	0d 92       	st	X+, r0
     358:	2a 95       	dec	r18
     35a:	e1 f7       	brne	.-8      	; 0x354 <main+0x13a>
	unsigned char RPM[] = {'R','P','M',' ',':'};
     35c:	ce 01       	movw	r24, r28
     35e:	89 59       	subi	r24, 0x99	; 153
     360:	9f 4f       	sbci	r25, 0xFF	; 255
     362:	25 e0       	ldi	r18, 0x05	; 5
     364:	e9 e3       	ldi	r30, 0x39	; 57
     366:	f8 e0       	ldi	r31, 0x08	; 8
     368:	dc 01       	movw	r26, r24
     36a:	01 90       	ld	r0, Z+
     36c:	0d 92       	st	X+, r0
     36e:	2a 95       	dec	r18
     370:	e1 f7       	brne	.-8      	; 0x36a <main+0x150>
	unsigned char GearboxTemp[] = {'G','E','A','R','B','O','X',' ','T','E','M','P',' ',':'};
     372:	ce 01       	movw	r24, r28
     374:	84 59       	subi	r24, 0x94	; 148
     376:	9f 4f       	sbci	r25, 0xFF	; 255
     378:	2e e0       	ldi	r18, 0x0E	; 14
     37a:	ee e3       	ldi	r30, 0x3E	; 62
     37c:	f8 e0       	ldi	r31, 0x08	; 8
     37e:	dc 01       	movw	r26, r24
     380:	01 90       	ld	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	2a 95       	dec	r18
     386:	e1 f7       	brne	.-8      	; 0x380 <main+0x166>
	unsigned char Throttle[]= {'T','H','R','O','T','T','L','E',' ','%',' ',':'};
     388:	ce 01       	movw	r24, r28
     38a:	86 58       	subi	r24, 0x86	; 134
     38c:	9f 4f       	sbci	r25, 0xFF	; 255
     38e:	2c e0       	ldi	r18, 0x0C	; 12
     390:	ec e4       	ldi	r30, 0x4C	; 76
     392:	f8 e0       	ldi	r31, 0x08	; 8
     394:	dc 01       	movw	r26, r24
     396:	01 90       	ld	r0, Z+
     398:	0d 92       	st	X+, r0
     39a:	2a 95       	dec	r18
     39c:	e1 f7       	brne	.-8      	; 0x396 <main+0x17c>
	unsigned char BlankNumber[] = {' ',' ',' ',' ',' '};
     39e:	ce 01       	movw	r24, r28
     3a0:	8a 57       	subi	r24, 0x7A	; 122
     3a2:	9f 4f       	sbci	r25, 0xFF	; 255
     3a4:	25 e0       	ldi	r18, 0x05	; 5
     3a6:	e8 e5       	ldi	r30, 0x58	; 88
     3a8:	f8 e0       	ldi	r31, 0x08	; 8
     3aa:	dc 01       	movw	r26, r24
     3ac:	01 90       	ld	r0, Z+
     3ae:	0d 92       	st	X+, r0
     3b0:	2a 95       	dec	r18
     3b2:	e1 f7       	brne	.-8      	; 0x3ac <main+0x192>
	unsigned char LeftArrow[]= {'<'};
     3b4:	ce 01       	movw	r24, r28
     3b6:	85 57       	subi	r24, 0x75	; 117
     3b8:	9f 4f       	sbci	r25, 0xFF	; 255
     3ba:	2c e3       	ldi	r18, 0x3C	; 60
     3bc:	fc 01       	movw	r30, r24
     3be:	20 83       	st	Z, r18
	unsigned char RightArrow[]= {'>'};
     3c0:	ce 01       	movw	r24, r28
     3c2:	84 57       	subi	r24, 0x74	; 116
     3c4:	9f 4f       	sbci	r25, 0xFF	; 255
     3c6:	2e e3       	ldi	r18, 0x3E	; 62
     3c8:	fc 01       	movw	r30, r24
     3ca:	20 83       	st	Z, r18
	unsigned char TempBuffer[10];
	unsigned int RPMMaxFlag = 0;
     3cc:	1e 86       	std	Y+14, r1	; 0x0e
     3ce:	1d 86       	std	Y+13, r1	; 0x0d
	unsigned int ThrottleMaxFlag = 0;
     3d0:	18 8a       	std	Y+16, r1	; 0x10
     3d2:	1f 86       	std	Y+15, r1	; 0x0f
	unsigned int ThrottleGreaterThan10 = 0;
     3d4:	1a 8a       	std	Y+18, r1	; 0x12
     3d6:	19 8a       	std	Y+17, r1	; 0x11
	unsigned int RPMGreaterThan100 = 0;
     3d8:	1c 8a       	std	Y+20, r1	; 0x14
     3da:	1b 8a       	std	Y+19, r1	; 0x13
	unsigned int RPMGreaterThan1000 = 0;
     3dc:	1e 8a       	std	Y+22, r1	; 0x16
     3de:	1d 8a       	std	Y+21, r1	; 0x15
	unsigned int GearboxTempCount = 0;
     3e0:	18 8e       	std	Y+24, r1	; 0x18
     3e2:	1f 8a       	std	Y+23, r1	; 0x17
	unsigned int GearboxTempMaxFlag = 0;
     3e4:	1a 8e       	std	Y+26, r1	; 0x1a
     3e6:	19 8e       	std	Y+25, r1	; 0x19
	unsigned int RPMCounter = 0;
     3e8:	1c 8e       	std	Y+28, r1	; 0x1c
     3ea:	1b 8e       	std	Y+27, r1	; 0x1b
	unsigned int BootFlag = 0;
     3ec:	1e 8e       	std	Y+30, r1	; 0x1e
     3ee:	1d 8e       	std	Y+29, r1	; 0x1d
	int ScreenFlag = 0;
     3f0:	18 a2       	std	Y+32, r1	; 0x20
     3f2:	1f 8e       	std	Y+31, r1	; 0x1f
	int ADC_Change = 1;
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	9a a3       	std	Y+34, r25	; 0x22
     3fa:	89 a3       	std	Y+33, r24	; 0x21
	int ADC_Previous = 0;
     3fc:	1c a2       	std	Y+36, r1	; 0x24
     3fe:	1b a2       	std	Y+35, r1	; 0x23
	int digitLength = 0;
     400:	1e a2       	std	Y+38, r1	; 0x26
     402:	1d a2       	std	Y+37, r1	; 0x25
	uint16_t LeftDialADCOld = 0;
     404:	18 a6       	std	Y+40, r1	; 0x28
     406:	1f a2       	std	Y+39, r1	; 0x27
	uint16_t RightDialADCOld = 0;
     408:	1a a6       	std	Y+42, r1	; 0x2a
     40a:	19 a6       	std	Y+41, r1	; 0x29
	
	uint16_t chargeMax = 0;
     40c:	1a 82       	std	Y+2, r1	; 0x02
     40e:	19 82       	std	Y+1, r1	; 0x01
	uint16_t breakDataMax = 0;
     410:	1c 82       	std	Y+4, r1	; 0x04
     412:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t potDataMax = 0;
     414:	1e 82       	std	Y+6, r1	; 0x06
     416:	1d 82       	std	Y+5, r1	; 0x05
	
	uint16_t LeftDialADCScaledOld = 0;
     418:	18 86       	std	Y+8, r1	; 0x08
     41a:	1f 82       	std	Y+7, r1	; 0x07
	
	uint16_t isScreenChanged = 0;
     41c:	1c a6       	std	Y+44, r1	; 0x2c
     41e:	1b a6       	std	Y+43, r1	; 0x2b

	while(1)
	{
		
		readDials();
     420:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <readDials>
		LeftDialADC = ADC_read(3); // 3 = LEFT DIAL
     424:	83 e0       	ldi	r24, 0x03	; 3
     426:	0e 94 a5 05 	call	0xb4a	; 0xb4a <ADC_read>
     42a:	9e a7       	std	Y+46, r25	; 0x2e
     42c:	8d a7       	std	Y+45, r24	; 0x2d
		LeftDialADCScaled = (uint16_t)(LeftDialADC >> 2) / 24; // Scale values from 1 to 8 - need to verify with new PCB since dials are playing up
     42e:	8d a5       	ldd	r24, Y+45	; 0x2d
     430:	9e a5       	ldd	r25, Y+46	; 0x2e
     432:	96 95       	lsr	r25
     434:	87 95       	ror	r24
     436:	96 95       	lsr	r25
     438:	87 95       	ror	r24
     43a:	9c 01       	movw	r18, r24
     43c:	ab ea       	ldi	r26, 0xAB	; 171
     43e:	ba ea       	ldi	r27, 0xAA	; 170
     440:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__umulhisi3>
     444:	92 95       	swap	r25
     446:	82 95       	swap	r24
     448:	8f 70       	andi	r24, 0x0F	; 15
     44a:	89 27       	eor	r24, r25
     44c:	9f 70       	andi	r25, 0x0F	; 15
     44e:	89 27       	eor	r24, r25
     450:	98 ab       	std	Y+48, r25	; 0x30
     452:	8f a7       	std	Y+47, r24	; 0x2f
		//if((LeftDialADCOld != LeftDialADCScaled) /*|| (RightDialADCOld != RightDialADCScaled)*/)
		//{
			//ADC_Change = 1;
		//}
		
		if (LeftDialADCScaledOld != LeftDialADCScaled)
     454:	2f 81       	ldd	r18, Y+7	; 0x07
     456:	38 85       	ldd	r19, Y+8	; 0x08
     458:	8f a5       	ldd	r24, Y+47	; 0x2f
     45a:	98 a9       	ldd	r25, Y+48	; 0x30
     45c:	28 17       	cp	r18, r24
     45e:	39 07       	cpc	r19, r25
     460:	59 f0       	breq	.+22     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		{
			LeftDialADCScaledOld = LeftDialADCScaled;
     462:	8f a5       	ldd	r24, Y+47	; 0x2f
     464:	98 a9       	ldd	r25, Y+48	; 0x30
     466:	98 87       	std	Y+8, r25	; 0x08
     468:	8f 83       	std	Y+7, r24	; 0x07
			Fill_RAM(0x00);
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	0e 94 ed 08 	call	0x11da	; 0x11da <Fill_RAM>
			Delay(500);
     470:	84 ef       	ldi	r24, 0xF4	; 244
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	0e 94 d5 06 	call	0xdaa	; 0xdaa <Delay>
		}
		
		
		if (LeftDialADCScaled == 1)
     478:	8f a5       	ldd	r24, Y+47	; 0x2f
     47a:	98 a9       	ldd	r25, Y+48	; 0x30
     47c:	01 97       	sbiw	r24, 0x01	; 1
     47e:	09 f0       	breq	.+2      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
     480:	80 c0       	rjmp	.+256    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
		{
			sprintf(firstLineValue, "%d", ThrottlePercentageData);
     482:	80 91 5e 08 	lds	r24, 0x085E	; 0x80085e <__data_end>
     486:	90 91 5f 08 	lds	r25, 0x085F	; 0x80085f <__data_end+0x1>
     48a:	29 2f       	mov	r18, r25
     48c:	2f 93       	push	r18
     48e:	8f 93       	push	r24
     490:	83 e0       	ldi	r24, 0x03	; 3
     492:	98 e0       	ldi	r25, 0x08	; 8
     494:	89 2f       	mov	r24, r25
     496:	8f 93       	push	r24
     498:	83 e0       	ldi	r24, 0x03	; 3
     49a:	98 e0       	ldi	r25, 0x08	; 8
     49c:	8f 93       	push	r24
     49e:	81 e7       	ldi	r24, 0x71	; 113
     4a0:	98 e0       	ldi	r25, 0x08	; 8
     4a2:	89 2f       	mov	r24, r25
     4a4:	8f 93       	push	r24
     4a6:	81 e7       	ldi	r24, 0x71	; 113
     4a8:	98 e0       	ldi	r25, 0x08	; 8
     4aa:	8f 93       	push	r24
     4ac:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     4b0:	0f 90       	pop	r0
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
			sprintf(secondLineValue, "%d", BreakData);
     4bc:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <BreakData>
     4c0:	90 91 61 08 	lds	r25, 0x0861	; 0x800861 <BreakData+0x1>
     4c4:	29 2f       	mov	r18, r25
     4c6:	2f 93       	push	r18
     4c8:	8f 93       	push	r24
     4ca:	83 e0       	ldi	r24, 0x03	; 3
     4cc:	98 e0       	ldi	r25, 0x08	; 8
     4ce:	89 2f       	mov	r24, r25
     4d0:	8f 93       	push	r24
     4d2:	83 e0       	ldi	r24, 0x03	; 3
     4d4:	98 e0       	ldi	r25, 0x08	; 8
     4d6:	8f 93       	push	r24
     4d8:	8b e7       	ldi	r24, 0x7B	; 123
     4da:	98 e0       	ldi	r25, 0x08	; 8
     4dc:	89 2f       	mov	r24, r25
     4de:	8f 93       	push	r24
     4e0:	8b e7       	ldi	r24, 0x7B	; 123
     4e2:	98 e0       	ldi	r25, 0x08	; 8
     4e4:	8f 93       	push	r24
     4e6:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0f 90       	pop	r0
     4f0:	0f 90       	pop	r0
     4f2:	0f 90       	pop	r0
     4f4:	0f 90       	pop	r0
			sprintf(thirdLineValue, "%d", PotData);
     4f6:	80 91 62 08 	lds	r24, 0x0862	; 0x800862 <PotData>
     4fa:	90 91 63 08 	lds	r25, 0x0863	; 0x800863 <PotData+0x1>
     4fe:	a0 91 64 08 	lds	r26, 0x0864	; 0x800864 <PotData+0x2>
     502:	b0 91 65 08 	lds	r27, 0x0865	; 0x800865 <PotData+0x3>
     506:	2b 2f       	mov	r18, r27
     508:	2f 93       	push	r18
     50a:	2a 2f       	mov	r18, r26
     50c:	2f 93       	push	r18
     50e:	29 2f       	mov	r18, r25
     510:	2f 93       	push	r18
     512:	8f 93       	push	r24
     514:	83 e0       	ldi	r24, 0x03	; 3
     516:	98 e0       	ldi	r25, 0x08	; 8
     518:	89 2f       	mov	r24, r25
     51a:	8f 93       	push	r24
     51c:	83 e0       	ldi	r24, 0x03	; 3
     51e:	98 e0       	ldi	r25, 0x08	; 8
     520:	8f 93       	push	r24
     522:	87 e6       	ldi	r24, 0x67	; 103
     524:	98 e0       	ldi	r25, 0x08	; 8
     526:	89 2f       	mov	r24, r25
     528:	8f 93       	push	r24
     52a:	87 e6       	ldi	r24, 0x67	; 103
     52c:	98 e0       	ldi	r25, 0x08	; 8
     52e:	8f 93       	push	r24
     530:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     534:	8d b7       	in	r24, 0x3d	; 61
     536:	9e b7       	in	r25, 0x3e	; 62
     538:	08 96       	adiw	r24, 0x08	; 8
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	f8 94       	cli
     53e:	de bf       	out	0x3e, r29	; 62
     540:	0f be       	out	0x3f, r0	; 63
     542:	cd bf       	out	0x3d, r28	; 61
			firstLinePointer = throttleArray;
     544:	82 e0       	ldi	r24, 0x02	; 2
     546:	91 e0       	ldi	r25, 0x01	; 1
     548:	90 93 87 08 	sts	0x0887, r25	; 0x800887 <firstLinePointer+0x1>
     54c:	80 93 86 08 	sts	0x0886, r24	; 0x800886 <firstLinePointer>
			secondLinePointer = BreakArray;
     550:	8c e0       	ldi	r24, 0x0C	; 12
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	90 93 89 08 	sts	0x0889, r25	; 0x800889 <secondLinePointer+0x1>
     558:	80 93 88 08 	sts	0x0888, r24	; 0x800888 <secondLinePointer>
			thirdLinePointer = PotArray;
     55c:	83 e1       	ldi	r24, 0x13	; 19
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <thirdLinePointer+0x1>
     564:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <thirdLinePointer>
			chargeMax = 75;
     568:	8b e4       	ldi	r24, 0x4B	; 75
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	9a 83       	std	Y+2, r25	; 0x02
     56e:	89 83       	std	Y+1, r24	; 0x01
			breakDataMax = 100;
     570:	84 e6       	ldi	r24, 0x64	; 100
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	9c 83       	std	Y+4, r25	; 0x04
     576:	8b 83       	std	Y+3, r24	; 0x03
			potDataMax = 100;
     578:	84 e6       	ldi	r24, 0x64	; 100
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	9e 83       	std	Y+6, r25	; 0x06
     57e:	8d 83       	std	Y+5, r24	; 0x05
     580:	dc c0       	rjmp	.+440    	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
			
		}else if (LeftDialADCScaled == 2)
     582:	8f a5       	ldd	r24, Y+47	; 0x2f
     584:	98 a9       	ldd	r25, Y+48	; 0x30
     586:	02 97       	sbiw	r24, 0x02	; 2
     588:	09 f0       	breq	.+2      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
     58a:	6e c0       	rjmp	.+220    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
		{
			sprintf(firstLineValue, "%d", LeftDialADC);
     58c:	8e a5       	ldd	r24, Y+46	; 0x2e
     58e:	8f 93       	push	r24
     590:	8d a5       	ldd	r24, Y+45	; 0x2d
     592:	8f 93       	push	r24
     594:	83 e0       	ldi	r24, 0x03	; 3
     596:	98 e0       	ldi	r25, 0x08	; 8
     598:	89 2f       	mov	r24, r25
     59a:	8f 93       	push	r24
     59c:	83 e0       	ldi	r24, 0x03	; 3
     59e:	98 e0       	ldi	r25, 0x08	; 8
     5a0:	8f 93       	push	r24
     5a2:	81 e7       	ldi	r24, 0x71	; 113
     5a4:	98 e0       	ldi	r25, 0x08	; 8
     5a6:	89 2f       	mov	r24, r25
     5a8:	8f 93       	push	r24
     5aa:	81 e7       	ldi	r24, 0x71	; 113
     5ac:	98 e0       	ldi	r25, 0x08	; 8
     5ae:	8f 93       	push	r24
     5b0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	0f 90       	pop	r0
			sprintf(secondLineValue, "%c", "'");
     5c0:	86 e0       	ldi	r24, 0x06	; 6
     5c2:	98 e0       	ldi	r25, 0x08	; 8
     5c4:	89 2f       	mov	r24, r25
     5c6:	8f 93       	push	r24
     5c8:	86 e0       	ldi	r24, 0x06	; 6
     5ca:	98 e0       	ldi	r25, 0x08	; 8
     5cc:	8f 93       	push	r24
     5ce:	88 e0       	ldi	r24, 0x08	; 8
     5d0:	98 e0       	ldi	r25, 0x08	; 8
     5d2:	89 2f       	mov	r24, r25
     5d4:	8f 93       	push	r24
     5d6:	88 e0       	ldi	r24, 0x08	; 8
     5d8:	98 e0       	ldi	r25, 0x08	; 8
     5da:	8f 93       	push	r24
     5dc:	8b e7       	ldi	r24, 0x7B	; 123
     5de:	98 e0       	ldi	r25, 0x08	; 8
     5e0:	89 2f       	mov	r24, r25
     5e2:	8f 93       	push	r24
     5e4:	8b e7       	ldi	r24, 0x7B	; 123
     5e6:	98 e0       	ldi	r25, 0x08	; 8
     5e8:	8f 93       	push	r24
     5ea:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
			sprintf(thirdLineValue, "%d", LeftDialADCScaled);
     5fa:	88 a9       	ldd	r24, Y+48	; 0x30
     5fc:	8f 93       	push	r24
     5fe:	8f a5       	ldd	r24, Y+47	; 0x2f
     600:	8f 93       	push	r24
     602:	83 e0       	ldi	r24, 0x03	; 3
     604:	98 e0       	ldi	r25, 0x08	; 8
     606:	89 2f       	mov	r24, r25
     608:	8f 93       	push	r24
     60a:	83 e0       	ldi	r24, 0x03	; 3
     60c:	98 e0       	ldi	r25, 0x08	; 8
     60e:	8f 93       	push	r24
     610:	87 e6       	ldi	r24, 0x67	; 103
     612:	98 e0       	ldi	r25, 0x08	; 8
     614:	89 2f       	mov	r24, r25
     616:	8f 93       	push	r24
     618:	87 e6       	ldi	r24, 0x67	; 103
     61a:	98 e0       	ldi	r25, 0x08	; 8
     61c:	8f 93       	push	r24
     61e:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	0f 90       	pop	r0
     62c:	0f 90       	pop	r0
			
			firstLinePointer = leftMotionArray;
     62e:	82 e2       	ldi	r24, 0x22	; 34
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	90 93 87 08 	sts	0x0887, r25	; 0x800887 <firstLinePointer+0x1>
     636:	80 93 86 08 	sts	0x0886, r24	; 0x800886 <firstLinePointer>
			secondLinePointer = emptyAll;
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	90 93 89 08 	sts	0x0889, r25	; 0x800889 <secondLinePointer+0x1>
     642:	80 93 88 08 	sts	0x0888, r24	; 0x800888 <secondLinePointer>
			thirdLinePointer = leftMotionValueArray;
     646:	8d e2       	ldi	r24, 0x2D	; 45
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <thirdLinePointer+0x1>
     64e:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <thirdLinePointer>
			chargeMax = 1023;
     652:	8f ef       	ldi	r24, 0xFF	; 255
     654:	93 e0       	ldi	r25, 0x03	; 3
     656:	9a 83       	std	Y+2, r25	; 0x02
     658:	89 83       	std	Y+1, r24	; 0x01
			breakDataMax = 0;
     65a:	1c 82       	std	Y+4, r1	; 0x04
     65c:	1b 82       	std	Y+3, r1	; 0x03
			potDataMax = 100;
     65e:	84 e6       	ldi	r24, 0x64	; 100
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	9e 83       	std	Y+6, r25	; 0x06
     664:	8d 83       	std	Y+5, r24	; 0x05
     666:	69 c0       	rjmp	.+210    	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
		}else{
			sprintf(firstLineValue, "%c", "'");
     668:	86 e0       	ldi	r24, 0x06	; 6
     66a:	98 e0       	ldi	r25, 0x08	; 8
     66c:	89 2f       	mov	r24, r25
     66e:	8f 93       	push	r24
     670:	86 e0       	ldi	r24, 0x06	; 6
     672:	98 e0       	ldi	r25, 0x08	; 8
     674:	8f 93       	push	r24
     676:	88 e0       	ldi	r24, 0x08	; 8
     678:	98 e0       	ldi	r25, 0x08	; 8
     67a:	89 2f       	mov	r24, r25
     67c:	8f 93       	push	r24
     67e:	88 e0       	ldi	r24, 0x08	; 8
     680:	98 e0       	ldi	r25, 0x08	; 8
     682:	8f 93       	push	r24
     684:	81 e7       	ldi	r24, 0x71	; 113
     686:	98 e0       	ldi	r25, 0x08	; 8
     688:	89 2f       	mov	r24, r25
     68a:	8f 93       	push	r24
     68c:	81 e7       	ldi	r24, 0x71	; 113
     68e:	98 e0       	ldi	r25, 0x08	; 8
     690:	8f 93       	push	r24
     692:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
			sprintf(secondLineValue, "%c", "'");
     6a2:	86 e0       	ldi	r24, 0x06	; 6
     6a4:	98 e0       	ldi	r25, 0x08	; 8
     6a6:	89 2f       	mov	r24, r25
     6a8:	8f 93       	push	r24
     6aa:	86 e0       	ldi	r24, 0x06	; 6
     6ac:	98 e0       	ldi	r25, 0x08	; 8
     6ae:	8f 93       	push	r24
     6b0:	88 e0       	ldi	r24, 0x08	; 8
     6b2:	98 e0       	ldi	r25, 0x08	; 8
     6b4:	89 2f       	mov	r24, r25
     6b6:	8f 93       	push	r24
     6b8:	88 e0       	ldi	r24, 0x08	; 8
     6ba:	98 e0       	ldi	r25, 0x08	; 8
     6bc:	8f 93       	push	r24
     6be:	8b e7       	ldi	r24, 0x7B	; 123
     6c0:	98 e0       	ldi	r25, 0x08	; 8
     6c2:	89 2f       	mov	r24, r25
     6c4:	8f 93       	push	r24
     6c6:	8b e7       	ldi	r24, 0x7B	; 123
     6c8:	98 e0       	ldi	r25, 0x08	; 8
     6ca:	8f 93       	push	r24
     6cc:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
			sprintf(thirdLineValue, "%c", "'");
     6dc:	86 e0       	ldi	r24, 0x06	; 6
     6de:	98 e0       	ldi	r25, 0x08	; 8
     6e0:	89 2f       	mov	r24, r25
     6e2:	8f 93       	push	r24
     6e4:	86 e0       	ldi	r24, 0x06	; 6
     6e6:	98 e0       	ldi	r25, 0x08	; 8
     6e8:	8f 93       	push	r24
     6ea:	88 e0       	ldi	r24, 0x08	; 8
     6ec:	98 e0       	ldi	r25, 0x08	; 8
     6ee:	89 2f       	mov	r24, r25
     6f0:	8f 93       	push	r24
     6f2:	88 e0       	ldi	r24, 0x08	; 8
     6f4:	98 e0       	ldi	r25, 0x08	; 8
     6f6:	8f 93       	push	r24
     6f8:	87 e6       	ldi	r24, 0x67	; 103
     6fa:	98 e0       	ldi	r25, 0x08	; 8
     6fc:	89 2f       	mov	r24, r25
     6fe:	8f 93       	push	r24
     700:	87 e6       	ldi	r24, 0x67	; 103
     702:	98 e0       	ldi	r25, 0x08	; 8
     704:	8f 93       	push	r24
     706:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <sprintf>
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
			
			firstLinePointer = emptyAll;
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	90 93 87 08 	sts	0x0887, r25	; 0x800887 <firstLinePointer+0x1>
     71e:	80 93 86 08 	sts	0x0886, r24	; 0x800886 <firstLinePointer>
			secondLinePointer = emptyAll;
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	90 93 89 08 	sts	0x0889, r25	; 0x800889 <secondLinePointer+0x1>
     72a:	80 93 88 08 	sts	0x0888, r24	; 0x800888 <secondLinePointer>
			thirdLinePointer = emptyAll;
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <thirdLinePointer+0x1>
     736:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <thirdLinePointer>
		sprintf(Charge, "%d", LeftDialADC);
		sprintf(breakDataArray, "%d", BreakData);
		//sprintf(PotDataArray, "%d", PotData);
		sprintf(PotDataArray, "%d", LeftDialADCScaled);
		*/
		parseCharArrayForDisplay(firstLineValue, chargeMax);
     73a:	89 81       	ldd	r24, Y+1	; 0x01
     73c:	9a 81       	ldd	r25, Y+2	; 0x02
     73e:	bc 01       	movw	r22, r24
     740:	81 e7       	ldi	r24, 0x71	; 113
     742:	98 e0       	ldi	r25, 0x08	; 8
     744:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>
		parseCharArrayForDisplay(secondLineValue, breakDataMax);
     748:	8b 81       	ldd	r24, Y+3	; 0x03
     74a:	9c 81       	ldd	r25, Y+4	; 0x04
     74c:	bc 01       	movw	r22, r24
     74e:	8b e7       	ldi	r24, 0x7B	; 123
     750:	98 e0       	ldi	r25, 0x08	; 8
     752:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>
		parseCharArrayForDisplay(thirdLineValue, potDataMax);
     756:	8d 81       	ldd	r24, Y+5	; 0x05
     758:	9e 81       	ldd	r25, Y+6	; 0x06
     75a:	bc 01       	movw	r22, r24
     75c:	87 e6       	ldi	r24, 0x67	; 103
     75e:	98 e0       	ldi	r25, 0x08	; 8
     760:	0e 94 a2 00 	call	0x144	; 0x144 <parseCharArrayForDisplay>

		Delay(100);
     764:	84 e6       	ldi	r24, 0x64	; 100
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	0e 94 d5 06 	call	0xdaa	; 0xdaa <Delay>

		//Fill_RAM(0x00);			// Clear Screen
		//Delay(10);
		
		Show_String(1,&(*firstLinePointer),0x05,0x05);
     76c:	80 91 86 08 	lds	r24, 0x0886	; 0x800886 <firstLinePointer>
     770:	90 91 87 08 	lds	r25, 0x0887	; 0x800887 <firstLinePointer+0x1>
     774:	25 e0       	ldi	r18, 0x05	; 5
     776:	45 e0       	ldi	r20, 0x05	; 5
     778:	bc 01       	movw	r22, r24
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>
		Show_String(1,&firstLineValue,0x27,0x05);
     780:	25 e0       	ldi	r18, 0x05	; 5
     782:	47 e2       	ldi	r20, 0x27	; 39
     784:	61 e7       	ldi	r22, 0x71	; 113
     786:	78 e0       	ldi	r23, 0x08	; 8
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>

		Show_String(1,&(*secondLinePointer),0x05,0x15);
     78e:	80 91 88 08 	lds	r24, 0x0888	; 0x800888 <secondLinePointer>
     792:	90 91 89 08 	lds	r25, 0x0889	; 0x800889 <secondLinePointer+0x1>
     796:	25 e1       	ldi	r18, 0x15	; 21
     798:	45 e0       	ldi	r20, 0x05	; 5
     79a:	bc 01       	movw	r22, r24
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>
		Show_String(1,&secondLineValue,0x27,0x15);
     7a2:	25 e1       	ldi	r18, 0x15	; 21
     7a4:	47 e2       	ldi	r20, 0x27	; 39
     7a6:	6b e7       	ldi	r22, 0x7B	; 123
     7a8:	78 e0       	ldi	r23, 0x08	; 8
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>

		Show_String(1,&(*thirdLinePointer),0x05,0x25);
     7b0:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <thirdLinePointer>
     7b4:	90 91 8b 08 	lds	r25, 0x088B	; 0x80088b <thirdLinePointer+0x1>
     7b8:	25 e2       	ldi	r18, 0x25	; 37
     7ba:	45 e0       	ldi	r20, 0x05	; 5
     7bc:	bc 01       	movw	r22, r24
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>
		Show_String(1,&thirdLineValue,0x27,0x25);
     7c4:	25 e2       	ldi	r18, 0x25	; 37
     7c6:	47 e2       	ldi	r20, 0x27	; 39
     7c8:	67 e6       	ldi	r22, 0x67	; 103
     7ca:	78 e0       	ldi	r23, 0x08	; 8
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <Show_String>
	}
     7d2:	26 ce       	rjmp	.-948    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>

000007d4 <__vector_10>:
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//  Interrupts
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

ISR(INT3_vect)
{
     7d4:	1f 92       	push	r1
     7d6:	0f 92       	push	r0
     7d8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7dc:	0f 92       	push	r0
     7de:	11 24       	eor	r1, r1
     7e0:	2f 93       	push	r18
     7e2:	8f 93       	push	r24
     7e4:	9f 93       	push	r25
     7e6:	ef 93       	push	r30
     7e8:	ff 93       	push	r31
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
	SMCR = (0<<SM2)|(0<<SM1)|(1<<SM0)|(0<<SE);		//disable the mode, and disable the enable bit.
     7f2:	83 e5       	ldi	r24, 0x53	; 83
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	22 e0       	ldi	r18, 0x02	; 2
     7f8:	fc 01       	movw	r30, r24
     7fa:	20 83       	st	Z, r18
}
     7fc:	00 00       	nop
     7fe:	df 91       	pop	r29
     800:	cf 91       	pop	r28
     802:	ff 91       	pop	r31
     804:	ef 91       	pop	r30
     806:	9f 91       	pop	r25
     808:	8f 91       	pop	r24
     80a:	2f 91       	pop	r18
     80c:	0f 90       	pop	r0
     80e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     812:	0f 90       	pop	r0
     814:	1f 90       	pop	r1
     816:	18 95       	reti

00000818 <__vector_18>:

ISR(CAN_INT_vect)
{
     818:	1f 92       	push	r1
     81a:	0f 92       	push	r0
     81c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     820:	0f 92       	push	r0
     822:	11 24       	eor	r1, r1
     824:	ef 92       	push	r14
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	2f 93       	push	r18
     82e:	3f 93       	push	r19
     830:	4f 93       	push	r20
     832:	5f 93       	push	r21
     834:	6f 93       	push	r22
     836:	7f 93       	push	r23
     838:	8f 93       	push	r24
     83a:	9f 93       	push	r25
     83c:	af 93       	push	r26
     83e:	bf 93       	push	r27
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
	if((CANSIT2 & (1 << SIT5)))	//we received a CAN message on mob 5, which is set up to receive exclusively from the AMU.
     84c:	80 ee       	ldi	r24, 0xE0	; 224
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	fc 01       	movw	r30, r24
     852:	80 81       	ld	r24, Z
     854:	88 2f       	mov	r24, r24
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	80 72       	andi	r24, 0x20	; 32
     85a:	99 27       	eor	r25, r25
     85c:	89 2b       	or	r24, r25
     85e:	a9 f1       	breq	.+106    	; 0x8ca <__vector_18+0xb2>
	{		
		CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     860:	8d ee       	ldi	r24, 0xED	; 237
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	20 e5       	ldi	r18, 0x50	; 80
     866:	fc 01       	movw	r30, r24
     868:	20 83       	st	Z, r18
		ThrottlePercentageData = CANMSG;
     86a:	8a ef       	ldi	r24, 0xFA	; 250
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	fc 01       	movw	r30, r24
     870:	80 81       	ld	r24, Z
     872:	88 2f       	mov	r24, r24
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	90 93 5f 08 	sts	0x085F, r25	; 0x80085f <__data_end+0x1>
     87a:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <__data_end>
		
		BreakData = CANMSG;
     87e:	8a ef       	ldi	r24, 0xFA	; 250
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	fc 01       	movw	r30, r24
     884:	80 81       	ld	r24, Z
     886:	88 2f       	mov	r24, r24
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <BreakData+0x1>
     88e:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <BreakData>
		
		PotData = CANMSG;
     892:	8a ef       	ldi	r24, 0xFA	; 250
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	fc 01       	movw	r30, r24
     898:	80 81       	ld	r24, Z
     89a:	88 2f       	mov	r24, r24
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	a0 e0       	ldi	r26, 0x00	; 0
     8a0:	b0 e0       	ldi	r27, 0x00	; 0
     8a2:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <PotData>
     8a6:	90 93 63 08 	sts	0x0863, r25	; 0x800863 <PotData+0x1>
     8aa:	a0 93 64 08 	sts	0x0864, r26	; 0x800864 <PotData+0x2>
     8ae:	b0 93 65 08 	sts	0x0865, r27	; 0x800865 <PotData+0x3>

		CAN_RXInit(5,8,0x400000, 0x400000);
     8b2:	e1 2c       	mov	r14, r1
     8b4:	f1 2c       	mov	r15, r1
     8b6:	00 e4       	ldi	r16, 0x40	; 64
     8b8:	10 e0       	ldi	r17, 0x00	; 0
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	40 e4       	ldi	r20, 0x40	; 64
     8c0:	50 e0       	ldi	r21, 0x00	; 0
     8c2:	68 e0       	ldi	r22, 0x08	; 8
     8c4:	85 e0       	ldi	r24, 0x05	; 5
     8c6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <CAN_RXInit>
	}
	
	CANPAGE = (5 << 4);			//set the canpage to the receiver MOB
     8ca:	8d ee       	ldi	r24, 0xED	; 237
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	20 e5       	ldi	r18, 0x50	; 80
     8d0:	fc 01       	movw	r30, r24
     8d2:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     8d4:	8e ee       	ldi	r24, 0xEE	; 238
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	2e ee       	ldi	r18, 0xEE	; 238
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	f9 01       	movw	r30, r18
     8de:	20 81       	ld	r18, Z
     8e0:	2f 7d       	andi	r18, 0xDF	; 223
     8e2:	fc 01       	movw	r30, r24
     8e4:	20 83       	st	Z, r18
	CANPAGE = (4 << 4);
     8e6:	8d ee       	ldi	r24, 0xED	; 237
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	20 e4       	ldi	r18, 0x40	; 64
     8ec:	fc 01       	movw	r30, r24
     8ee:	20 83       	st	Z, r18
	CANSTMOB &= ~(1 << RXOK);	//unset the RXOK bit to clear the interrupt.
     8f0:	8e ee       	ldi	r24, 0xEE	; 238
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	2e ee       	ldi	r18, 0xEE	; 238
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	f9 01       	movw	r30, r18
     8fa:	20 81       	ld	r18, Z
     8fc:	2f 7d       	andi	r18, 0xDF	; 223
     8fe:	fc 01       	movw	r30, r24
     900:	20 83       	st	Z, r18
}
     902:	00 00       	nop
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	ff 91       	pop	r31
     90a:	ef 91       	pop	r30
     90c:	bf 91       	pop	r27
     90e:	af 91       	pop	r26
     910:	9f 91       	pop	r25
     912:	8f 91       	pop	r24
     914:	7f 91       	pop	r23
     916:	6f 91       	pop	r22
     918:	5f 91       	pop	r21
     91a:	4f 91       	pop	r20
     91c:	3f 91       	pop	r19
     91e:	2f 91       	pop	r18
     920:	1f 91       	pop	r17
     922:	0f 91       	pop	r16
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	0f 90       	pop	r0
     92a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     92e:	0f 90       	pop	r0
     930:	1f 90       	pop	r1
     932:	18 95       	reti

00000934 <CAN_init>:
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	1f 92       	push	r1
     93a:	cd b7       	in	r28, 0x3d	; 61
     93c:	de b7       	in	r29, 0x3e	; 62
     93e:	88 ed       	ldi	r24, 0xD8	; 216
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	21 e0       	ldi	r18, 0x01	; 1
     944:	fc 01       	movw	r30, r24
     946:	20 83       	st	Z, r18
     948:	19 82       	std	Y+1, r1	; 0x01
     94a:	22 c0       	rjmp	.+68     	; 0x990 <CAN_init+0x5c>
     94c:	8d ee       	ldi	r24, 0xED	; 237
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	29 81       	ldd	r18, Y+1	; 0x01
     952:	22 95       	swap	r18
     954:	20 7f       	andi	r18, 0xF0	; 240
     956:	fc 01       	movw	r30, r24
     958:	20 83       	st	Z, r18
     95a:	8f ee       	ldi	r24, 0xEF	; 239
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	fc 01       	movw	r30, r24
     960:	10 82       	st	Z, r1
     962:	8e ee       	ldi	r24, 0xEE	; 238
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	fc 01       	movw	r30, r24
     968:	10 82       	st	Z, r1
     96a:	87 ef       	ldi	r24, 0xF7	; 247
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	fc 01       	movw	r30, r24
     970:	10 82       	st	Z, r1
     972:	86 ef       	ldi	r24, 0xF6	; 246
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	fc 01       	movw	r30, r24
     978:	10 82       	st	Z, r1
     97a:	85 ef       	ldi	r24, 0xF5	; 245
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	fc 01       	movw	r30, r24
     980:	10 82       	st	Z, r1
     982:	84 ef       	ldi	r24, 0xF4	; 244
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	fc 01       	movw	r30, r24
     988:	10 82       	st	Z, r1
     98a:	89 81       	ldd	r24, Y+1	; 0x01
     98c:	8f 5f       	subi	r24, 0xFF	; 255
     98e:	89 83       	std	Y+1, r24	; 0x01
     990:	89 81       	ldd	r24, Y+1	; 0x01
     992:	86 30       	cpi	r24, 0x06	; 6
     994:	d8 f2       	brcs	.-74     	; 0x94c <CAN_init+0x18>
     996:	82 ee       	ldi	r24, 0xE2	; 226
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	2e e0       	ldi	r18, 0x0E	; 14
     99c:	fc 01       	movw	r30, r24
     99e:	20 83       	st	Z, r18
     9a0:	83 ee       	ldi	r24, 0xE3	; 227
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	24 e0       	ldi	r18, 0x04	; 4
     9a6:	fc 01       	movw	r30, r24
     9a8:	20 83       	st	Z, r18
     9aa:	84 ee       	ldi	r24, 0xE4	; 228
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	23 e1       	ldi	r18, 0x13	; 19
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
     9b4:	8e ed       	ldi	r24, 0xDE	; 222
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	20 e3       	ldi	r18, 0x30	; 48
     9ba:	fc 01       	movw	r30, r24
     9bc:	20 83       	st	Z, r18
     9be:	8b ed       	ldi	r24, 0xDB	; 219
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	20 ea       	ldi	r18, 0xA0	; 160
     9c4:	fc 01       	movw	r30, r24
     9c6:	20 83       	st	Z, r18
     9c8:	88 ed       	ldi	r24, 0xD8	; 216
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	22 e0       	ldi	r18, 0x02	; 2
     9ce:	fc 01       	movw	r30, r24
     9d0:	20 83       	st	Z, r18
     9d2:	82 e3       	ldi	r24, 0x32	; 50
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	0e 94 d5 06 	call	0xdaa	; 0xdaa <Delay>
     9da:	89 ed       	ldi	r24, 0xD9	; 217
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	fc 01       	movw	r30, r24
     9e0:	80 81       	ld	r24, Z
     9e2:	88 2f       	mov	r24, r24
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	84 70       	andi	r24, 0x04	; 4
     9e8:	99 27       	eor	r25, r25
     9ea:	89 2b       	or	r24, r25
     9ec:	11 f4       	brne	.+4      	; 0x9f2 <CAN_init+0xbe>
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	01 c0       	rjmp	.+2      	; 0x9f4 <CAN_init+0xc0>
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	0f 90       	pop	r0
     9f6:	df 91       	pop	r29
     9f8:	cf 91       	pop	r28
     9fa:	08 95       	ret

000009fc <CAN_RXInit>:
     9fc:	ef 92       	push	r14
     9fe:	ff 92       	push	r15
     a00:	0f 93       	push	r16
     a02:	1f 93       	push	r17
     a04:	cf 93       	push	r28
     a06:	df 93       	push	r29
     a08:	cd b7       	in	r28, 0x3d	; 61
     a0a:	de b7       	in	r29, 0x3e	; 62
     a0c:	2a 97       	sbiw	r28, 0x0a	; 10
     a0e:	0f b6       	in	r0, 0x3f	; 63
     a10:	f8 94       	cli
     a12:	de bf       	out	0x3e, r29	; 62
     a14:	0f be       	out	0x3f, r0	; 63
     a16:	cd bf       	out	0x3d, r28	; 61
     a18:	89 83       	std	Y+1, r24	; 0x01
     a1a:	6a 83       	std	Y+2, r22	; 0x02
     a1c:	2b 83       	std	Y+3, r18	; 0x03
     a1e:	3c 83       	std	Y+4, r19	; 0x04
     a20:	4d 83       	std	Y+5, r20	; 0x05
     a22:	5e 83       	std	Y+6, r21	; 0x06
     a24:	ef 82       	std	Y+7, r14	; 0x07
     a26:	f8 86       	std	Y+8, r15	; 0x08
     a28:	09 87       	std	Y+9, r16	; 0x09
     a2a:	1a 87       	std	Y+10, r17	; 0x0a
     a2c:	8d ee       	ldi	r24, 0xED	; 237
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	29 81       	ldd	r18, Y+1	; 0x01
     a32:	22 95       	swap	r18
     a34:	20 7f       	andi	r18, 0xF0	; 240
     a36:	fc 01       	movw	r30, r24
     a38:	20 83       	st	Z, r18
     a3a:	84 ef       	ldi	r24, 0xF4	; 244
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	2b 81       	ldd	r18, Y+3	; 0x03
     a40:	22 0f       	add	r18, r18
     a42:	22 0f       	add	r18, r18
     a44:	22 0f       	add	r18, r18
     a46:	fc 01       	movw	r30, r24
     a48:	20 83       	st	Z, r18
     a4a:	25 ef       	ldi	r18, 0xF5	; 245
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	8b 81       	ldd	r24, Y+3	; 0x03
     a50:	9c 81       	ldd	r25, Y+4	; 0x04
     a52:	ad 81       	ldd	r26, Y+5	; 0x05
     a54:	be 81       	ldd	r27, Y+6	; 0x06
     a56:	68 94       	set
     a58:	14 f8       	bld	r1, 4
     a5a:	b6 95       	lsr	r27
     a5c:	a7 95       	ror	r26
     a5e:	97 95       	ror	r25
     a60:	87 95       	ror	r24
     a62:	16 94       	lsr	r1
     a64:	d1 f7       	brne	.-12     	; 0xa5a <CAN_RXInit+0x5e>
     a66:	f9 01       	movw	r30, r18
     a68:	80 83       	st	Z, r24
     a6a:	26 ef       	ldi	r18, 0xF6	; 246
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	8b 81       	ldd	r24, Y+3	; 0x03
     a70:	9c 81       	ldd	r25, Y+4	; 0x04
     a72:	ad 81       	ldd	r26, Y+5	; 0x05
     a74:	be 81       	ldd	r27, Y+6	; 0x06
     a76:	07 2e       	mov	r0, r23
     a78:	7d e0       	ldi	r23, 0x0D	; 13
     a7a:	b6 95       	lsr	r27
     a7c:	a7 95       	ror	r26
     a7e:	97 95       	ror	r25
     a80:	87 95       	ror	r24
     a82:	7a 95       	dec	r23
     a84:	d1 f7       	brne	.-12     	; 0xa7a <CAN_RXInit+0x7e>
     a86:	70 2d       	mov	r23, r0
     a88:	f9 01       	movw	r30, r18
     a8a:	80 83       	st	Z, r24
     a8c:	27 ef       	ldi	r18, 0xF7	; 247
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	8b 81       	ldd	r24, Y+3	; 0x03
     a92:	9c 81       	ldd	r25, Y+4	; 0x04
     a94:	ad 81       	ldd	r26, Y+5	; 0x05
     a96:	be 81       	ldd	r27, Y+6	; 0x06
     a98:	07 2e       	mov	r0, r23
     a9a:	75 e1       	ldi	r23, 0x15	; 21
     a9c:	b6 95       	lsr	r27
     a9e:	a7 95       	ror	r26
     aa0:	97 95       	ror	r25
     aa2:	87 95       	ror	r24
     aa4:	7a 95       	dec	r23
     aa6:	d1 f7       	brne	.-12     	; 0xa9c <CAN_RXInit+0xa0>
     aa8:	70 2d       	mov	r23, r0
     aaa:	f9 01       	movw	r30, r18
     aac:	80 83       	st	Z, r24
     aae:	80 ef       	ldi	r24, 0xF0	; 240
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	2f 81       	ldd	r18, Y+7	; 0x07
     ab4:	22 0f       	add	r18, r18
     ab6:	22 0f       	add	r18, r18
     ab8:	22 0f       	add	r18, r18
     aba:	fc 01       	movw	r30, r24
     abc:	20 83       	st	Z, r18
     abe:	21 ef       	ldi	r18, 0xF1	; 241
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	8f 81       	ldd	r24, Y+7	; 0x07
     ac4:	98 85       	ldd	r25, Y+8	; 0x08
     ac6:	a9 85       	ldd	r26, Y+9	; 0x09
     ac8:	ba 85       	ldd	r27, Y+10	; 0x0a
     aca:	68 94       	set
     acc:	14 f8       	bld	r1, 4
     ace:	b6 95       	lsr	r27
     ad0:	a7 95       	ror	r26
     ad2:	97 95       	ror	r25
     ad4:	87 95       	ror	r24
     ad6:	16 94       	lsr	r1
     ad8:	d1 f7       	brne	.-12     	; 0xace <CAN_RXInit+0xd2>
     ada:	f9 01       	movw	r30, r18
     adc:	80 83       	st	Z, r24
     ade:	22 ef       	ldi	r18, 0xF2	; 242
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	8f 81       	ldd	r24, Y+7	; 0x07
     ae4:	98 85       	ldd	r25, Y+8	; 0x08
     ae6:	a9 85       	ldd	r26, Y+9	; 0x09
     ae8:	ba 85       	ldd	r27, Y+10	; 0x0a
     aea:	07 2e       	mov	r0, r23
     aec:	7d e0       	ldi	r23, 0x0D	; 13
     aee:	b6 95       	lsr	r27
     af0:	a7 95       	ror	r26
     af2:	97 95       	ror	r25
     af4:	87 95       	ror	r24
     af6:	7a 95       	dec	r23
     af8:	d1 f7       	brne	.-12     	; 0xaee <CAN_RXInit+0xf2>
     afa:	70 2d       	mov	r23, r0
     afc:	f9 01       	movw	r30, r18
     afe:	80 83       	st	Z, r24
     b00:	23 ef       	ldi	r18, 0xF3	; 243
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	8f 81       	ldd	r24, Y+7	; 0x07
     b06:	98 85       	ldd	r25, Y+8	; 0x08
     b08:	a9 85       	ldd	r26, Y+9	; 0x09
     b0a:	ba 85       	ldd	r27, Y+10	; 0x0a
     b0c:	07 2e       	mov	r0, r23
     b0e:	75 e1       	ldi	r23, 0x15	; 21
     b10:	b6 95       	lsr	r27
     b12:	a7 95       	ror	r26
     b14:	97 95       	ror	r25
     b16:	87 95       	ror	r24
     b18:	7a 95       	dec	r23
     b1a:	d1 f7       	brne	.-12     	; 0xb10 <CAN_RXInit+0x114>
     b1c:	70 2d       	mov	r23, r0
     b1e:	f9 01       	movw	r30, r18
     b20:	80 83       	st	Z, r24
     b22:	8f ee       	ldi	r24, 0xEF	; 239
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	2a 81       	ldd	r18, Y+2	; 0x02
     b28:	20 69       	ori	r18, 0x90	; 144
     b2a:	fc 01       	movw	r30, r24
     b2c:	20 83       	st	Z, r18
     b2e:	00 00       	nop
     b30:	2a 96       	adiw	r28, 0x0a	; 10
     b32:	0f b6       	in	r0, 0x3f	; 63
     b34:	f8 94       	cli
     b36:	de bf       	out	0x3e, r29	; 62
     b38:	0f be       	out	0x3f, r0	; 63
     b3a:	cd bf       	out	0x3d, r28	; 61
     b3c:	df 91       	pop	r29
     b3e:	cf 91       	pop	r28
     b40:	1f 91       	pop	r17
     b42:	0f 91       	pop	r16
     b44:	ff 90       	pop	r15
     b46:	ef 90       	pop	r14
     b48:	08 95       	ret

00000b4a <ADC_read>:
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	00 d0       	rcall	.+0      	; 0xb50 <ADC_read+0x6>
     b50:	1f 92       	push	r1
     b52:	cd b7       	in	r28, 0x3d	; 61
     b54:	de b7       	in	r29, 0x3e	; 62
     b56:	8b 83       	std	Y+3, r24	; 0x03
     b58:	8c e7       	ldi	r24, 0x7C	; 124
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	fc 01       	movw	r30, r24
     b5e:	80 81       	ld	r24, Z
     b60:	98 2f       	mov	r25, r24
     b62:	90 7e       	andi	r25, 0xE0	; 224
     b64:	8b 81       	ldd	r24, Y+3	; 0x03
     b66:	8f 71       	andi	r24, 0x1F	; 31
     b68:	89 2b       	or	r24, r25
     b6a:	8b 83       	std	Y+3, r24	; 0x03
     b6c:	8c e7       	ldi	r24, 0x7C	; 124
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	2b 81       	ldd	r18, Y+3	; 0x03
     b72:	fc 01       	movw	r30, r24
     b74:	20 83       	st	Z, r18
     b76:	8a e7       	ldi	r24, 0x7A	; 122
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	2a e7       	ldi	r18, 0x7A	; 122
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	f9 01       	movw	r30, r18
     b80:	20 81       	ld	r18, Z
     b82:	20 64       	ori	r18, 0x40	; 64
     b84:	fc 01       	movw	r30, r24
     b86:	20 83       	st	Z, r18
     b88:	00 00       	nop
     b8a:	8a e7       	ldi	r24, 0x7A	; 122
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	fc 01       	movw	r30, r24
     b90:	80 81       	ld	r24, Z
     b92:	88 2f       	mov	r24, r24
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	80 71       	andi	r24, 0x10	; 16
     b98:	99 27       	eor	r25, r25
     b9a:	89 2b       	or	r24, r25
     b9c:	b1 f3       	breq	.-20     	; 0xb8a <ADC_read+0x40>
     b9e:	1a 82       	std	Y+2, r1	; 0x02
     ba0:	19 82       	std	Y+1, r1	; 0x01
     ba2:	88 e7       	ldi	r24, 0x78	; 120
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	fc 01       	movw	r30, r24
     ba8:	80 81       	ld	r24, Z
     baa:	88 2f       	mov	r24, r24
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	9a 83       	std	Y+2, r25	; 0x02
     bb0:	89 83       	std	Y+1, r24	; 0x01
     bb2:	89 e7       	ldi	r24, 0x79	; 121
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	fc 01       	movw	r30, r24
     bb8:	80 81       	ld	r24, Z
     bba:	88 2f       	mov	r24, r24
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	83 70       	andi	r24, 0x03	; 3
     bc0:	99 27       	eor	r25, r25
     bc2:	98 2f       	mov	r25, r24
     bc4:	88 27       	eor	r24, r24
     bc6:	9c 01       	movw	r18, r24
     bc8:	89 81       	ldd	r24, Y+1	; 0x01
     bca:	9a 81       	ldd	r25, Y+2	; 0x02
     bcc:	82 2b       	or	r24, r18
     bce:	93 2b       	or	r25, r19
     bd0:	9a 83       	std	Y+2, r25	; 0x02
     bd2:	89 83       	std	Y+1, r24	; 0x01
     bd4:	8a e7       	ldi	r24, 0x7A	; 122
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	2a e7       	ldi	r18, 0x7A	; 122
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	f9 01       	movw	r30, r18
     bde:	20 81       	ld	r18, Z
     be0:	20 61       	ori	r18, 0x10	; 16
     be2:	fc 01       	movw	r30, r24
     be4:	20 83       	st	Z, r18
     be6:	89 81       	ldd	r24, Y+1	; 0x01
     be8:	9a 81       	ldd	r25, Y+2	; 0x02
     bea:	0f 90       	pop	r0
     bec:	0f 90       	pop	r0
     bee:	0f 90       	pop	r0
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	08 95       	ret

00000bf6 <readDials>:
     bf6:	cf 93       	push	r28
     bf8:	df 93       	push	r29
     bfa:	cd b7       	in	r28, 0x3d	; 61
     bfc:	de b7       	in	r29, 0x3e	; 62
     bfe:	6d 97       	sbiw	r28, 0x1d	; 29
     c00:	0f b6       	in	r0, 0x3f	; 63
     c02:	f8 94       	cli
     c04:	de bf       	out	0x3e, r29	; 62
     c06:	0f be       	out	0x3f, r0	; 63
     c08:	cd bf       	out	0x3d, r28	; 61
     c0a:	19 82       	std	Y+1, r1	; 0x01
     c0c:	82 e0       	ldi	r24, 0x02	; 2
     c0e:	0e 94 a5 05 	call	0xb4a	; 0xb4a <ADC_read>
     c12:	9b 83       	std	Y+3, r25	; 0x03
     c14:	8a 83       	std	Y+2, r24	; 0x02
     c16:	83 e0       	ldi	r24, 0x03	; 3
     c18:	0e 94 a5 05 	call	0xb4a	; 0xb4a <ADC_read>
     c1c:	9d 83       	std	Y+5, r25	; 0x05
     c1e:	8c 83       	std	Y+4, r24	; 0x04
     c20:	8c 81       	ldd	r24, Y+4	; 0x04
     c22:	9d 81       	ldd	r25, Y+5	; 0x05
     c24:	96 95       	lsr	r25
     c26:	87 95       	ror	r24
     c28:	96 95       	lsr	r25
     c2a:	87 95       	ror	r24
     c2c:	9c 01       	movw	r18, r24
     c2e:	ab ea       	ldi	r26, 0xAB	; 171
     c30:	ba ea       	ldi	r27, 0xAA	; 170
     c32:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__umulhisi3>
     c36:	92 95       	swap	r25
     c38:	82 95       	swap	r24
     c3a:	8f 70       	andi	r24, 0x0F	; 15
     c3c:	89 27       	eor	r24, r25
     c3e:	9f 70       	andi	r25, 0x0F	; 15
     c40:	89 27       	eor	r24, r25
     c42:	9f 83       	std	Y+7, r25	; 0x07
     c44:	8e 83       	std	Y+6, r24	; 0x06
     c46:	8a 81       	ldd	r24, Y+2	; 0x02
     c48:	9b 81       	ldd	r25, Y+3	; 0x03
     c4a:	96 95       	lsr	r25
     c4c:	87 95       	ror	r24
     c4e:	96 95       	lsr	r25
     c50:	87 95       	ror	r24
     c52:	9c 01       	movw	r18, r24
     c54:	ab ea       	ldi	r26, 0xAB	; 171
     c56:	ba ea       	ldi	r27, 0xAA	; 170
     c58:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__umulhisi3>
     c5c:	92 95       	swap	r25
     c5e:	82 95       	swap	r24
     c60:	8f 70       	andi	r24, 0x0F	; 15
     c62:	89 27       	eor	r24, r25
     c64:	9f 70       	andi	r25, 0x0F	; 15
     c66:	89 27       	eor	r24, r25
     c68:	99 87       	std	Y+9, r25	; 0x09
     c6a:	88 87       	std	Y+8, r24	; 0x08
     c6c:	9e 01       	movw	r18, r28
     c6e:	2c 5e       	subi	r18, 0xEC	; 236
     c70:	3f 4f       	sbci	r19, 0xFF	; 255
     c72:	88 85       	ldd	r24, Y+8	; 0x08
     c74:	99 85       	ldd	r25, Y+9	; 0x09
     c76:	4a e0       	ldi	r20, 0x0A	; 10
     c78:	50 e0       	ldi	r21, 0x00	; 0
     c7a:	b9 01       	movw	r22, r18
     c7c:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <itoa>
     c80:	9e 01       	movw	r18, r28
     c82:	26 5f       	subi	r18, 0xF6	; 246
     c84:	3f 4f       	sbci	r19, 0xFF	; 255
     c86:	8e 81       	ldd	r24, Y+6	; 0x06
     c88:	9f 81       	ldd	r25, Y+7	; 0x07
     c8a:	4a e0       	ldi	r20, 0x0A	; 10
     c8c:	50 e0       	ldi	r21, 0x00	; 0
     c8e:	b9 01       	movw	r22, r18
     c90:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <itoa>
     c94:	9e 01       	movw	r18, r28
     c96:	2c 5e       	subi	r18, 0xEC	; 236
     c98:	3f 4f       	sbci	r19, 0xFF	; 255
     c9a:	ce 01       	movw	r24, r28
     c9c:	0a 96       	adiw	r24, 0x0a	; 10
     c9e:	b9 01       	movw	r22, r18
     ca0:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <strcat>
     ca4:	8e 81       	ldd	r24, Y+6	; 0x06
     ca6:	9f 81       	ldd	r25, Y+7	; 0x07
     ca8:	82 95       	swap	r24
     caa:	92 95       	swap	r25
     cac:	90 7f       	andi	r25, 0xF0	; 240
     cae:	98 27       	eor	r25, r24
     cb0:	80 7f       	andi	r24, 0xF0	; 240
     cb2:	98 27       	eor	r25, r24
     cb4:	98 2f       	mov	r25, r24
     cb6:	88 85       	ldd	r24, Y+8	; 0x08
     cb8:	89 2b       	or	r24, r25
     cba:	80 93 66 08 	sts	0x0866, r24	; 0x800866 <CAN_Dial>
     cbe:	80 91 66 08 	lds	r24, 0x0866	; 0x800866 <CAN_Dial>
     cc2:	6d 96       	adiw	r28, 0x1d	; 29
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	cd bf       	out	0x3d, r28	; 61
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	08 95       	ret

00000cd4 <ADC_init>:
     cd4:	cf 93       	push	r28
     cd6:	df 93       	push	r29
     cd8:	cd b7       	in	r28, 0x3d	; 61
     cda:	de b7       	in	r29, 0x3e	; 62
     cdc:	8c e7       	ldi	r24, 0x7C	; 124
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	20 e6       	ldi	r18, 0x60	; 96
     ce2:	fc 01       	movw	r30, r24
     ce4:	20 83       	st	Z, r18
     ce6:	8c e7       	ldi	r24, 0x7C	; 124
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	2c e7       	ldi	r18, 0x7C	; 124
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	f9 01       	movw	r30, r18
     cf0:	20 81       	ld	r18, Z
     cf2:	2f 7d       	andi	r18, 0xDF	; 223
     cf4:	fc 01       	movw	r30, r24
     cf6:	20 83       	st	Z, r18
     cf8:	8a e7       	ldi	r24, 0x7A	; 122
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	27 e8       	ldi	r18, 0x87	; 135
     cfe:	fc 01       	movw	r30, r24
     d00:	20 83       	st	Z, r18
     d02:	00 00       	nop
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	08 95       	ret

00000d0a <spi_init>:
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	cd b7       	in	r28, 0x3d	; 61
     d10:	de b7       	in	r29, 0x3e	; 62
     d12:	85 e5       	ldi	r24, 0x55	; 85
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	25 e5       	ldi	r18, 0x55	; 85
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	f9 01       	movw	r30, r18
     d1c:	20 81       	ld	r18, Z
     d1e:	2f 77       	andi	r18, 0x7F	; 127
     d20:	fc 01       	movw	r30, r24
     d22:	20 83       	st	Z, r18
     d24:	8c e4       	ldi	r24, 0x4C	; 76
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	20 e5       	ldi	r18, 0x50	; 80
     d2a:	fc 01       	movw	r30, r24
     d2c:	20 83       	st	Z, r18
     d2e:	8d e4       	ldi	r24, 0x4D	; 77
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	21 e0       	ldi	r18, 0x01	; 1
     d34:	fc 01       	movw	r30, r24
     d36:	20 83       	st	Z, r18
     d38:	8e e4       	ldi	r24, 0x4E	; 78
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	fc 01       	movw	r30, r24
     d3e:	10 82       	st	Z, r1
     d40:	00 00       	nop
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	08 95       	ret

00000d48 <spi_send_byte>:
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
     d4c:	1f 92       	push	r1
     d4e:	cd b7       	in	r28, 0x3d	; 61
     d50:	de b7       	in	r29, 0x3e	; 62
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	8e e4       	ldi	r24, 0x4E	; 78
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	29 81       	ldd	r18, Y+1	; 0x01
     d5a:	fc 01       	movw	r30, r24
     d5c:	20 83       	st	Z, r18
     d5e:	00 00       	nop
     d60:	8d e4       	ldi	r24, 0x4D	; 77
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	fc 01       	movw	r30, r24
     d66:	80 81       	ld	r24, Z
     d68:	88 23       	and	r24, r24
     d6a:	d4 f7       	brge	.-12     	; 0xd60 <spi_send_byte+0x18>
     d6c:	8e e4       	ldi	r24, 0x4E	; 78
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	fc 01       	movw	r30, r24
     d72:	80 81       	ld	r24, Z
     d74:	0f 90       	pop	r0
     d76:	df 91       	pop	r29
     d78:	cf 91       	pop	r28
     d7a:	08 95       	ret

00000d7c <uDelay>:
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	00 d0       	rcall	.+0      	; 0xd82 <uDelay+0x6>
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	9a 83       	std	Y+2, r25	; 0x02
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	00 00       	nop
     d8c:	89 81       	ldd	r24, Y+1	; 0x01
     d8e:	9a 81       	ldd	r25, Y+2	; 0x02
     d90:	9c 01       	movw	r18, r24
     d92:	21 50       	subi	r18, 0x01	; 1
     d94:	31 09       	sbc	r19, r1
     d96:	3a 83       	std	Y+2, r19	; 0x02
     d98:	29 83       	std	Y+1, r18	; 0x01
     d9a:	89 2b       	or	r24, r25
     d9c:	b9 f7       	brne	.-18     	; 0xd8c <uDelay+0x10>
     d9e:	00 00       	nop
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	df 91       	pop	r29
     da6:	cf 91       	pop	r28
     da8:	08 95       	ret

00000daa <Delay>:
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <Delay+0x6>
     db0:	00 d0       	rcall	.+0      	; 0xdb2 <Delay+0x8>
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	9c 83       	std	Y+4, r25	; 0x04
     db8:	8b 83       	std	Y+3, r24	; 0x03
     dba:	1a 82       	std	Y+2, r1	; 0x02
     dbc:	19 82       	std	Y+1, r1	; 0x01
     dbe:	09 c0       	rjmp	.+18     	; 0xdd2 <Delay+0x28>
     dc0:	80 e6       	ldi	r24, 0x60	; 96
     dc2:	94 e0       	ldi	r25, 0x04	; 4
     dc4:	0e 94 be 06 	call	0xd7c	; 0xd7c <uDelay>
     dc8:	89 81       	ldd	r24, Y+1	; 0x01
     dca:	9a 81       	ldd	r25, Y+2	; 0x02
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	9a 83       	std	Y+2, r25	; 0x02
     dd0:	89 83       	std	Y+1, r24	; 0x01
     dd2:	29 81       	ldd	r18, Y+1	; 0x01
     dd4:	3a 81       	ldd	r19, Y+2	; 0x02
     dd6:	8b 81       	ldd	r24, Y+3	; 0x03
     dd8:	9c 81       	ldd	r25, Y+4	; 0x04
     dda:	28 17       	cp	r18, r24
     ddc:	39 07       	cpc	r19, r25
     dde:	80 f3       	brcs	.-32     	; 0xdc0 <Delay+0x16>
     de0:	00 00       	nop
     de2:	0f 90       	pop	r0
     de4:	0f 90       	pop	r0
     de6:	0f 90       	pop	r0
     de8:	0f 90       	pop	r0
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	08 95       	ret

00000df0 <Write_Command>:
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	1f 92       	push	r1
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
     dfa:	89 83       	std	Y+1, r24	; 0x01
     dfc:	85 e2       	ldi	r24, 0x25	; 37
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	25 e2       	ldi	r18, 0x25	; 37
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	f9 01       	movw	r30, r18
     e06:	20 81       	ld	r18, Z
     e08:	2f 7d       	andi	r18, 0xDF	; 223
     e0a:	fc 01       	movw	r30, r24
     e0c:	20 83       	st	Z, r18
     e0e:	8b e2       	ldi	r24, 0x2B	; 43
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	2b e2       	ldi	r18, 0x2B	; 43
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	f9 01       	movw	r30, r18
     e18:	20 81       	ld	r18, Z
     e1a:	2e 7f       	andi	r18, 0xFE	; 254
     e1c:	fc 01       	movw	r30, r24
     e1e:	20 83       	st	Z, r18
     e20:	89 81       	ldd	r24, Y+1	; 0x01
     e22:	0e 94 a4 06 	call	0xd48	; 0xd48 <spi_send_byte>
     e26:	85 e2       	ldi	r24, 0x25	; 37
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	25 e2       	ldi	r18, 0x25	; 37
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	f9 01       	movw	r30, r18
     e30:	20 81       	ld	r18, Z
     e32:	20 62       	ori	r18, 0x20	; 32
     e34:	fc 01       	movw	r30, r24
     e36:	20 83       	st	Z, r18
     e38:	8b e2       	ldi	r24, 0x2B	; 43
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	2b e2       	ldi	r18, 0x2B	; 43
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	f9 01       	movw	r30, r18
     e42:	20 81       	ld	r18, Z
     e44:	21 60       	ori	r18, 0x01	; 1
     e46:	fc 01       	movw	r30, r24
     e48:	20 83       	st	Z, r18
     e4a:	00 00       	nop
     e4c:	0f 90       	pop	r0
     e4e:	df 91       	pop	r29
     e50:	cf 91       	pop	r28
     e52:	08 95       	ret

00000e54 <Write_Data>:
     e54:	cf 93       	push	r28
     e56:	df 93       	push	r29
     e58:	1f 92       	push	r1
     e5a:	cd b7       	in	r28, 0x3d	; 61
     e5c:	de b7       	in	r29, 0x3e	; 62
     e5e:	89 83       	std	Y+1, r24	; 0x01
     e60:	8b e2       	ldi	r24, 0x2B	; 43
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	2b e2       	ldi	r18, 0x2B	; 43
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	f9 01       	movw	r30, r18
     e6a:	20 81       	ld	r18, Z
     e6c:	2e 7f       	andi	r18, 0xFE	; 254
     e6e:	fc 01       	movw	r30, r24
     e70:	20 83       	st	Z, r18
     e72:	85 e2       	ldi	r24, 0x25	; 37
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	25 e2       	ldi	r18, 0x25	; 37
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	f9 01       	movw	r30, r18
     e7c:	20 81       	ld	r18, Z
     e7e:	20 62       	ori	r18, 0x20	; 32
     e80:	fc 01       	movw	r30, r24
     e82:	20 83       	st	Z, r18
     e84:	89 81       	ldd	r24, Y+1	; 0x01
     e86:	0e 94 a4 06 	call	0xd48	; 0xd48 <spi_send_byte>
     e8a:	85 e2       	ldi	r24, 0x25	; 37
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	25 e2       	ldi	r18, 0x25	; 37
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	f9 01       	movw	r30, r18
     e94:	20 81       	ld	r18, Z
     e96:	20 62       	ori	r18, 0x20	; 32
     e98:	fc 01       	movw	r30, r24
     e9a:	20 83       	st	Z, r18
     e9c:	8b e2       	ldi	r24, 0x2B	; 43
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	2b e2       	ldi	r18, 0x2B	; 43
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	f9 01       	movw	r30, r18
     ea6:	20 81       	ld	r18, Z
     ea8:	21 60       	ori	r18, 0x01	; 1
     eaa:	fc 01       	movw	r30, r24
     eac:	20 83       	st	Z, r18
     eae:	00 00       	nop
     eb0:	0f 90       	pop	r0
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	08 95       	ret

00000eb8 <Set_Column_Address>:
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	00 d0       	rcall	.+0      	; 0xebe <Set_Column_Address+0x6>
     ebe:	cd b7       	in	r28, 0x3d	; 61
     ec0:	de b7       	in	r29, 0x3e	; 62
     ec2:	89 83       	std	Y+1, r24	; 0x01
     ec4:	6a 83       	std	Y+2, r22	; 0x02
     ec6:	85 e1       	ldi	r24, 0x15	; 21
     ec8:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     ed2:	8a 81       	ldd	r24, Y+2	; 0x02
     ed4:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     ed8:	00 00       	nop
     eda:	0f 90       	pop	r0
     edc:	0f 90       	pop	r0
     ede:	df 91       	pop	r29
     ee0:	cf 91       	pop	r28
     ee2:	08 95       	ret

00000ee4 <Set_Row_Address>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	00 d0       	rcall	.+0      	; 0xeea <Set_Row_Address+0x6>
     eea:	cd b7       	in	r28, 0x3d	; 61
     eec:	de b7       	in	r29, 0x3e	; 62
     eee:	89 83       	std	Y+1, r24	; 0x01
     ef0:	6a 83       	std	Y+2, r22	; 0x02
     ef2:	85 e7       	ldi	r24, 0x75	; 117
     ef4:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     efe:	8a 81       	ldd	r24, Y+2	; 0x02
     f00:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     f04:	00 00       	nop
     f06:	0f 90       	pop	r0
     f08:	0f 90       	pop	r0
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	08 95       	ret

00000f10 <Set_Write_RAM>:
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
     f18:	8c e5       	ldi	r24, 0x5C	; 92
     f1a:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     f1e:	00 00       	nop
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	08 95       	ret

00000f26 <Set_Remap_Format>:
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	1f 92       	push	r1
     f2c:	cd b7       	in	r28, 0x3d	; 61
     f2e:	de b7       	in	r29, 0x3e	; 62
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	80 ea       	ldi	r24, 0xA0	; 160
     f34:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     f3e:	81 e1       	ldi	r24, 0x11	; 17
     f40:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     f44:	00 00       	nop
     f46:	0f 90       	pop	r0
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	08 95       	ret

00000f4e <Set_Start_Line>:
     f4e:	cf 93       	push	r28
     f50:	df 93       	push	r29
     f52:	1f 92       	push	r1
     f54:	cd b7       	in	r28, 0x3d	; 61
     f56:	de b7       	in	r29, 0x3e	; 62
     f58:	89 83       	std	Y+1, r24	; 0x01
     f5a:	81 ea       	ldi	r24, 0xA1	; 161
     f5c:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     f60:	89 81       	ldd	r24, Y+1	; 0x01
     f62:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     f66:	00 00       	nop
     f68:	0f 90       	pop	r0
     f6a:	df 91       	pop	r29
     f6c:	cf 91       	pop	r28
     f6e:	08 95       	ret

00000f70 <Set_Display_Offset>:
     f70:	cf 93       	push	r28
     f72:	df 93       	push	r29
     f74:	1f 92       	push	r1
     f76:	cd b7       	in	r28, 0x3d	; 61
     f78:	de b7       	in	r29, 0x3e	; 62
     f7a:	89 83       	std	Y+1, r24	; 0x01
     f7c:	82 ea       	ldi	r24, 0xA2	; 162
     f7e:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     f82:	89 81       	ldd	r24, Y+1	; 0x01
     f84:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     f88:	00 00       	nop
     f8a:	0f 90       	pop	r0
     f8c:	df 91       	pop	r29
     f8e:	cf 91       	pop	r28
     f90:	08 95       	ret

00000f92 <Set_Display_Mode>:
     f92:	cf 93       	push	r28
     f94:	df 93       	push	r29
     f96:	1f 92       	push	r1
     f98:	cd b7       	in	r28, 0x3d	; 61
     f9a:	de b7       	in	r29, 0x3e	; 62
     f9c:	89 83       	std	Y+1, r24	; 0x01
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	84 6a       	ori	r24, 0xA4	; 164
     fa2:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     fa6:	00 00       	nop
     fa8:	0f 90       	pop	r0
     faa:	df 91       	pop	r29
     fac:	cf 91       	pop	r28
     fae:	08 95       	ret

00000fb0 <Set_Partial_Display>:
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	00 d0       	rcall	.+0      	; 0xfb6 <Set_Partial_Display+0x6>
     fb6:	1f 92       	push	r1
     fb8:	cd b7       	in	r28, 0x3d	; 61
     fba:	de b7       	in	r29, 0x3e	; 62
     fbc:	89 83       	std	Y+1, r24	; 0x01
     fbe:	6a 83       	std	Y+2, r22	; 0x02
     fc0:	4b 83       	std	Y+3, r20	; 0x03
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	88 6a       	ori	r24, 0xA8	; 168
     fc6:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     fca:	89 81       	ldd	r24, Y+1	; 0x01
     fcc:	88 23       	and	r24, r24
     fce:	31 f4       	brne	.+12     	; 0xfdc <Set_Partial_Display+0x2c>
     fd0:	8a 81       	ldd	r24, Y+2	; 0x02
     fd2:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     fd6:	8b 81       	ldd	r24, Y+3	; 0x03
     fd8:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
     fdc:	00 00       	nop
     fde:	0f 90       	pop	r0
     fe0:	0f 90       	pop	r0
     fe2:	0f 90       	pop	r0
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	08 95       	ret

00000fea <Set_Function_Selection>:
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	1f 92       	push	r1
     ff0:	cd b7       	in	r28, 0x3d	; 61
     ff2:	de b7       	in	r29, 0x3e	; 62
     ff4:	89 83       	std	Y+1, r24	; 0x01
     ff6:	8b ea       	ldi	r24, 0xAB	; 171
     ff8:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1002:	00 00       	nop
    1004:	0f 90       	pop	r0
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	08 95       	ret

0000100c <Set_Display_On_Off>:
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	1f 92       	push	r1
    1012:	cd b7       	in	r28, 0x3d	; 61
    1014:	de b7       	in	r29, 0x3e	; 62
    1016:	89 83       	std	Y+1, r24	; 0x01
    1018:	89 81       	ldd	r24, Y+1	; 0x01
    101a:	8e 6a       	ori	r24, 0xAE	; 174
    101c:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    1020:	00 00       	nop
    1022:	0f 90       	pop	r0
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	08 95       	ret

0000102a <Set_Phase_Length>:
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	1f 92       	push	r1
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	89 83       	std	Y+1, r24	; 0x01
    1036:	81 eb       	ldi	r24, 0xB1	; 177
    1038:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    103c:	89 81       	ldd	r24, Y+1	; 0x01
    103e:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1042:	00 00       	nop
    1044:	0f 90       	pop	r0
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	08 95       	ret

0000104c <Set_Display_Clock>:
    104c:	cf 93       	push	r28
    104e:	df 93       	push	r29
    1050:	1f 92       	push	r1
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	89 83       	std	Y+1, r24	; 0x01
    1058:	83 eb       	ldi	r24, 0xB3	; 179
    105a:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    105e:	89 81       	ldd	r24, Y+1	; 0x01
    1060:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1064:	00 00       	nop
    1066:	0f 90       	pop	r0
    1068:	df 91       	pop	r29
    106a:	cf 91       	pop	r28
    106c:	08 95       	ret

0000106e <Set_Display_Enhancement_A>:
    106e:	cf 93       	push	r28
    1070:	df 93       	push	r29
    1072:	00 d0       	rcall	.+0      	; 0x1074 <Set_Display_Enhancement_A+0x6>
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
    1078:	89 83       	std	Y+1, r24	; 0x01
    107a:	6a 83       	std	Y+2, r22	; 0x02
    107c:	84 eb       	ldi	r24, 0xB4	; 180
    107e:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    1082:	89 81       	ldd	r24, Y+1	; 0x01
    1084:	80 6a       	ori	r24, 0xA0	; 160
    1086:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	85 60       	ori	r24, 0x05	; 5
    108e:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1092:	00 00       	nop
    1094:	0f 90       	pop	r0
    1096:	0f 90       	pop	r0
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	08 95       	ret

0000109e <Set_GPIO>:
    109e:	cf 93       	push	r28
    10a0:	df 93       	push	r29
    10a2:	1f 92       	push	r1
    10a4:	cd b7       	in	r28, 0x3d	; 61
    10a6:	de b7       	in	r29, 0x3e	; 62
    10a8:	89 83       	std	Y+1, r24	; 0x01
    10aa:	85 eb       	ldi	r24, 0xB5	; 181
    10ac:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    10b0:	89 81       	ldd	r24, Y+1	; 0x01
    10b2:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    10b6:	00 00       	nop
    10b8:	0f 90       	pop	r0
    10ba:	df 91       	pop	r29
    10bc:	cf 91       	pop	r28
    10be:	08 95       	ret

000010c0 <Set_Precharge_Period>:
    10c0:	cf 93       	push	r28
    10c2:	df 93       	push	r29
    10c4:	1f 92       	push	r1
    10c6:	cd b7       	in	r28, 0x3d	; 61
    10c8:	de b7       	in	r29, 0x3e	; 62
    10ca:	89 83       	std	Y+1, r24	; 0x01
    10cc:	86 eb       	ldi	r24, 0xB6	; 182
    10ce:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    10d2:	89 81       	ldd	r24, Y+1	; 0x01
    10d4:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    10d8:	00 00       	nop
    10da:	0f 90       	pop	r0
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <Set_Precharge_Voltage>:
    10e2:	cf 93       	push	r28
    10e4:	df 93       	push	r29
    10e6:	1f 92       	push	r1
    10e8:	cd b7       	in	r28, 0x3d	; 61
    10ea:	de b7       	in	r29, 0x3e	; 62
    10ec:	89 83       	std	Y+1, r24	; 0x01
    10ee:	8b eb       	ldi	r24, 0xBB	; 187
    10f0:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    10f4:	89 81       	ldd	r24, Y+1	; 0x01
    10f6:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    10fa:	00 00       	nop
    10fc:	0f 90       	pop	r0
    10fe:	df 91       	pop	r29
    1100:	cf 91       	pop	r28
    1102:	08 95       	ret

00001104 <Set_VCOMH>:
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	1f 92       	push	r1
    110a:	cd b7       	in	r28, 0x3d	; 61
    110c:	de b7       	in	r29, 0x3e	; 62
    110e:	89 83       	std	Y+1, r24	; 0x01
    1110:	8e eb       	ldi	r24, 0xBE	; 190
    1112:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    1116:	89 81       	ldd	r24, Y+1	; 0x01
    1118:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    111c:	00 00       	nop
    111e:	0f 90       	pop	r0
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	08 95       	ret

00001126 <Set_Contrast_Current>:
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	1f 92       	push	r1
    112c:	cd b7       	in	r28, 0x3d	; 61
    112e:	de b7       	in	r29, 0x3e	; 62
    1130:	89 83       	std	Y+1, r24	; 0x01
    1132:	81 ec       	ldi	r24, 0xC1	; 193
    1134:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    1138:	89 81       	ldd	r24, Y+1	; 0x01
    113a:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    113e:	00 00       	nop
    1140:	0f 90       	pop	r0
    1142:	df 91       	pop	r29
    1144:	cf 91       	pop	r28
    1146:	08 95       	ret

00001148 <Set_Master_Current>:
    1148:	cf 93       	push	r28
    114a:	df 93       	push	r29
    114c:	1f 92       	push	r1
    114e:	cd b7       	in	r28, 0x3d	; 61
    1150:	de b7       	in	r29, 0x3e	; 62
    1152:	89 83       	std	Y+1, r24	; 0x01
    1154:	87 ec       	ldi	r24, 0xC7	; 199
    1156:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    115a:	89 81       	ldd	r24, Y+1	; 0x01
    115c:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1160:	00 00       	nop
    1162:	0f 90       	pop	r0
    1164:	df 91       	pop	r29
    1166:	cf 91       	pop	r28
    1168:	08 95       	ret

0000116a <Set_Multiplex_Ratio>:
    116a:	cf 93       	push	r28
    116c:	df 93       	push	r29
    116e:	1f 92       	push	r1
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	89 83       	std	Y+1, r24	; 0x01
    1176:	8a ec       	ldi	r24, 0xCA	; 202
    1178:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    117c:	89 81       	ldd	r24, Y+1	; 0x01
    117e:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1182:	00 00       	nop
    1184:	0f 90       	pop	r0
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	08 95       	ret

0000118c <Set_Display_Enhancement_B>:
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	1f 92       	push	r1
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	89 83       	std	Y+1, r24	; 0x01
    1198:	81 ed       	ldi	r24, 0xD1	; 209
    119a:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    119e:	89 81       	ldd	r24, Y+1	; 0x01
    11a0:	82 68       	ori	r24, 0x82	; 130
    11a2:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    11a6:	80 e2       	ldi	r24, 0x20	; 32
    11a8:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    11ac:	00 00       	nop
    11ae:	0f 90       	pop	r0
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	08 95       	ret

000011b6 <Set_Command_Lock>:
    11b6:	cf 93       	push	r28
    11b8:	df 93       	push	r29
    11ba:	1f 92       	push	r1
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	89 83       	std	Y+1, r24	; 0x01
    11c2:	8d ef       	ldi	r24, 0xFD	; 253
    11c4:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
    11ca:	82 61       	ori	r24, 0x12	; 18
    11cc:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    11d0:	00 00       	nop
    11d2:	0f 90       	pop	r0
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	08 95       	ret

000011da <Fill_RAM>:
    11da:	cf 93       	push	r28
    11dc:	df 93       	push	r29
    11de:	00 d0       	rcall	.+0      	; 0x11e0 <Fill_RAM+0x6>
    11e0:	1f 92       	push	r1
    11e2:	cd b7       	in	r28, 0x3d	; 61
    11e4:	de b7       	in	r29, 0x3e	; 62
    11e6:	8b 83       	std	Y+3, r24	; 0x03
    11e8:	67 e7       	ldi	r22, 0x77	; 119
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Set_Column_Address>
    11f0:	6f e7       	ldi	r22, 0x7F	; 127
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	0e 94 72 07 	call	0xee4	; 0xee4 <Set_Row_Address>
    11f8:	0e 94 88 07 	call	0xf10	; 0xf10 <Set_Write_RAM>
    11fc:	19 82       	std	Y+1, r1	; 0x01
    11fe:	0e c0       	rjmp	.+28     	; 0x121c <Fill_RAM+0x42>
    1200:	1a 82       	std	Y+2, r1	; 0x02
    1202:	06 c0       	rjmp	.+12     	; 0x1210 <Fill_RAM+0x36>
    1204:	8b 81       	ldd	r24, Y+3	; 0x03
    1206:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    120a:	8a 81       	ldd	r24, Y+2	; 0x02
    120c:	8f 5f       	subi	r24, 0xFF	; 255
    120e:	8a 83       	std	Y+2, r24	; 0x02
    1210:	8a 81       	ldd	r24, Y+2	; 0x02
    1212:	88 37       	cpi	r24, 0x78	; 120
    1214:	b8 f3       	brcs	.-18     	; 0x1204 <Fill_RAM+0x2a>
    1216:	89 81       	ldd	r24, Y+1	; 0x01
    1218:	8f 5f       	subi	r24, 0xFF	; 255
    121a:	89 83       	std	Y+1, r24	; 0x01
    121c:	89 81       	ldd	r24, Y+1	; 0x01
    121e:	88 23       	and	r24, r24
    1220:	7c f7       	brge	.-34     	; 0x1200 <Fill_RAM+0x26>
    1222:	00 00       	nop
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	0f 90       	pop	r0
    122a:	df 91       	pop	r29
    122c:	cf 91       	pop	r28
    122e:	08 95       	ret

00001230 <Show_Font57>:
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
    1234:	cd b7       	in	r28, 0x3d	; 61
    1236:	de b7       	in	r29, 0x3e	; 62
    1238:	2e 97       	sbiw	r28, 0x0e	; 14
    123a:	0f b6       	in	r0, 0x3f	; 63
    123c:	f8 94       	cli
    123e:	de bf       	out	0x3e, r29	; 62
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	cd bf       	out	0x3d, r28	; 61
    1244:	8b 87       	std	Y+11, r24	; 0x0b
    1246:	6c 87       	std	Y+12, r22	; 0x0c
    1248:	4d 87       	std	Y+13, r20	; 0x0d
    124a:	2e 87       	std	Y+14, r18	; 0x0e
    124c:	8c 85       	ldd	r24, Y+12	; 0x0c
    124e:	88 2f       	mov	r24, r24
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	81 97       	sbiw	r24, 0x21	; 33
    1254:	98 87       	std	Y+8, r25	; 0x08
    1256:	8f 83       	std	Y+7, r24	; 0x07
    1258:	8b 85       	ldd	r24, Y+11	; 0x0b
    125a:	88 2f       	mov	r24, r24
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	81 30       	cpi	r24, 0x01	; 1
    1260:	91 05       	cpc	r25, r1
    1262:	19 f0       	breq	.+6      	; 0x126a <Show_Font57+0x3a>
    1264:	02 97       	sbiw	r24, 0x02	; 2
    1266:	79 f0       	breq	.+30     	; 0x1286 <Show_Font57+0x56>
    1268:	20 c0       	rjmp	.+64     	; 0x12aa <Show_Font57+0x7a>
    126a:	2f 81       	ldd	r18, Y+7	; 0x07
    126c:	38 85       	ldd	r19, Y+8	; 0x08
    126e:	c9 01       	movw	r24, r18
    1270:	88 0f       	add	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	88 0f       	add	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	82 0f       	add	r24, r18
    127a:	93 1f       	adc	r25, r19
    127c:	84 5c       	subi	r24, 0xC4	; 196
    127e:	9e 4f       	sbci	r25, 0xFE	; 254
    1280:	9a 83       	std	Y+2, r25	; 0x02
    1282:	89 83       	std	Y+1, r24	; 0x01
    1284:	12 c0       	rjmp	.+36     	; 0x12aa <Show_Font57+0x7a>
    1286:	8c 85       	ldd	r24, Y+12	; 0x0c
    1288:	88 2f       	mov	r24, r24
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	9c 01       	movw	r18, r24
    128e:	21 50       	subi	r18, 0x01	; 1
    1290:	31 09       	sbc	r19, r1
    1292:	c9 01       	movw	r24, r18
    1294:	88 0f       	add	r24, r24
    1296:	99 1f       	adc	r25, r25
    1298:	88 0f       	add	r24, r24
    129a:	99 1f       	adc	r25, r25
    129c:	82 0f       	add	r24, r18
    129e:	93 1f       	adc	r25, r19
    12a0:	84 51       	subi	r24, 0x14	; 20
    12a2:	9a 4f       	sbci	r25, 0xFA	; 250
    12a4:	9a 83       	std	Y+2, r25	; 0x02
    12a6:	89 83       	std	Y+1, r24	; 0x01
    12a8:	00 00       	nop
    12aa:	85 e1       	ldi	r24, 0x15	; 21
    12ac:	0e 94 93 07 	call	0xf26	; 0xf26 <Set_Remap_Format>
    12b0:	1b 82       	std	Y+3, r1	; 0x03
    12b2:	0d c3       	rjmp	.+1562   	; 0x18ce <Show_Font57+0x69e>
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	9a 81       	ldd	r25, Y+2	; 0x02
    12b8:	fc 01       	movw	r30, r24
    12ba:	80 81       	ld	r24, Z
    12bc:	89 87       	std	Y+9, r24	; 0x09
    12be:	89 81       	ldd	r24, Y+1	; 0x01
    12c0:	9a 81       	ldd	r25, Y+2	; 0x02
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	9a 83       	std	Y+2, r25	; 0x02
    12c6:	89 83       	std	Y+1, r24	; 0x01
    12c8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ca:	81 30       	cpi	r24, 0x01	; 1
    12cc:	21 f4       	brne	.+8      	; 0x12d6 <Show_Font57+0xa6>
    12ce:	1c 82       	std	Y+4, r1	; 0x04
    12d0:	1d 82       	std	Y+5, r1	; 0x05
    12d2:	1e 82       	std	Y+6, r1	; 0x06
    12d4:	1e c0       	rjmp	.+60     	; 0x1312 <Show_Font57+0xe2>
    12d6:	89 81       	ldd	r24, Y+1	; 0x01
    12d8:	9a 81       	ldd	r25, Y+2	; 0x02
    12da:	fc 01       	movw	r30, r24
    12dc:	80 81       	ld	r24, Z
    12de:	8c 83       	std	Y+4, r24	; 0x04
    12e0:	89 81       	ldd	r24, Y+1	; 0x01
    12e2:	9a 81       	ldd	r25, Y+2	; 0x02
    12e4:	01 96       	adiw	r24, 0x01	; 1
    12e6:	9a 83       	std	Y+2, r25	; 0x02
    12e8:	89 83       	std	Y+1, r24	; 0x01
    12ea:	89 81       	ldd	r24, Y+1	; 0x01
    12ec:	9a 81       	ldd	r25, Y+2	; 0x02
    12ee:	fc 01       	movw	r30, r24
    12f0:	80 81       	ld	r24, Z
    12f2:	8d 83       	std	Y+5, r24	; 0x05
    12f4:	89 81       	ldd	r24, Y+1	; 0x01
    12f6:	9a 81       	ldd	r25, Y+2	; 0x02
    12f8:	01 96       	adiw	r24, 0x01	; 1
    12fa:	9a 83       	std	Y+2, r25	; 0x02
    12fc:	89 83       	std	Y+1, r24	; 0x01
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	9a 81       	ldd	r25, Y+2	; 0x02
    1302:	fc 01       	movw	r30, r24
    1304:	80 81       	ld	r24, Z
    1306:	8e 83       	std	Y+6, r24	; 0x06
    1308:	89 81       	ldd	r24, Y+1	; 0x01
    130a:	9a 81       	ldd	r25, Y+2	; 0x02
    130c:	01 96       	adiw	r24, 0x01	; 1
    130e:	9a 83       	std	Y+2, r25	; 0x02
    1310:	89 83       	std	Y+1, r24	; 0x01
    1312:	8d 85       	ldd	r24, Y+13	; 0x0d
    1314:	9c e1       	ldi	r25, 0x1C	; 28
    1316:	98 0f       	add	r25, r24
    1318:	8d 85       	ldd	r24, Y+13	; 0x0d
    131a:	84 5e       	subi	r24, 0xE4	; 228
    131c:	69 2f       	mov	r22, r25
    131e:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Set_Column_Address>
    1322:	8e 85       	ldd	r24, Y+14	; 0x0e
    1324:	89 5f       	subi	r24, 0xF9	; 249
    1326:	68 2f       	mov	r22, r24
    1328:	8e 85       	ldd	r24, Y+14	; 0x0e
    132a:	0e 94 72 07 	call	0xee4	; 0xee4 <Set_Row_Address>
    132e:	0e 94 88 07 	call	0xf10	; 0xf10 <Set_Write_RAM>
    1332:	89 85       	ldd	r24, Y+9	; 0x09
    1334:	88 2f       	mov	r24, r24
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	81 70       	andi	r24, 0x01	; 1
    133a:	99 27       	eor	r25, r25
    133c:	82 95       	swap	r24
    133e:	92 95       	swap	r25
    1340:	90 7f       	andi	r25, 0xF0	; 240
    1342:	98 27       	eor	r25, r24
    1344:	80 7f       	andi	r24, 0xF0	; 240
    1346:	98 27       	eor	r25, r24
    1348:	98 2f       	mov	r25, r24
    134a:	8c 81       	ldd	r24, Y+4	; 0x04
    134c:	81 70       	andi	r24, 0x01	; 1
    134e:	89 2b       	or	r24, r25
    1350:	8a 87       	std	Y+10, r24	; 0x0a
    1352:	8a 85       	ldd	r24, Y+10	; 0x0a
    1354:	88 2f       	mov	r24, r24
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	88 0f       	add	r24, r24
    135a:	99 1f       	adc	r25, r25
    135c:	98 2f       	mov	r25, r24
    135e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1360:	29 2f       	mov	r18, r25
    1362:	28 2b       	or	r18, r24
    1364:	8a 85       	ldd	r24, Y+10	; 0x0a
    1366:	88 2f       	mov	r24, r24
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	88 0f       	add	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	88 0f       	add	r24, r24
    1370:	99 1f       	adc	r25, r25
    1372:	28 2b       	or	r18, r24
    1374:	8a 85       	ldd	r24, Y+10	; 0x0a
    1376:	88 2f       	mov	r24, r24
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	88 0f       	add	r24, r24
    137c:	99 1f       	adc	r25, r25
    137e:	88 0f       	add	r24, r24
    1380:	99 1f       	adc	r25, r25
    1382:	88 0f       	add	r24, r24
    1384:	99 1f       	adc	r25, r25
    1386:	82 2b       	or	r24, r18
    1388:	8a 87       	std	Y+10, r24	; 0x0a
    138a:	8a 85       	ldd	r24, Y+10	; 0x0a
    138c:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1390:	8d 81       	ldd	r24, Y+5	; 0x05
    1392:	88 2f       	mov	r24, r24
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	81 70       	andi	r24, 0x01	; 1
    1398:	99 27       	eor	r25, r25
    139a:	82 95       	swap	r24
    139c:	92 95       	swap	r25
    139e:	90 7f       	andi	r25, 0xF0	; 240
    13a0:	98 27       	eor	r25, r24
    13a2:	80 7f       	andi	r24, 0xF0	; 240
    13a4:	98 27       	eor	r25, r24
    13a6:	98 2f       	mov	r25, r24
    13a8:	8e 81       	ldd	r24, Y+6	; 0x06
    13aa:	81 70       	andi	r24, 0x01	; 1
    13ac:	89 2b       	or	r24, r25
    13ae:	8a 87       	std	Y+10, r24	; 0x0a
    13b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    13b2:	88 2f       	mov	r24, r24
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	88 0f       	add	r24, r24
    13b8:	99 1f       	adc	r25, r25
    13ba:	98 2f       	mov	r25, r24
    13bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    13be:	29 2f       	mov	r18, r25
    13c0:	28 2b       	or	r18, r24
    13c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13c4:	88 2f       	mov	r24, r24
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	88 0f       	add	r24, r24
    13ca:	99 1f       	adc	r25, r25
    13cc:	88 0f       	add	r24, r24
    13ce:	99 1f       	adc	r25, r25
    13d0:	28 2b       	or	r18, r24
    13d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    13d4:	88 2f       	mov	r24, r24
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	88 0f       	add	r24, r24
    13da:	99 1f       	adc	r25, r25
    13dc:	88 0f       	add	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	88 0f       	add	r24, r24
    13e2:	99 1f       	adc	r25, r25
    13e4:	82 2b       	or	r24, r18
    13e6:	8a 87       	std	Y+10, r24	; 0x0a
    13e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    13ea:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    13ee:	89 85       	ldd	r24, Y+9	; 0x09
    13f0:	88 2f       	mov	r24, r24
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	82 70       	andi	r24, 0x02	; 2
    13f6:	99 27       	eor	r25, r25
    13f8:	88 0f       	add	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	88 0f       	add	r24, r24
    13fe:	99 1f       	adc	r25, r25
    1400:	88 0f       	add	r24, r24
    1402:	99 1f       	adc	r25, r25
    1404:	28 2f       	mov	r18, r24
    1406:	8c 81       	ldd	r24, Y+4	; 0x04
    1408:	88 2f       	mov	r24, r24
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	82 70       	andi	r24, 0x02	; 2
    140e:	99 27       	eor	r25, r25
    1410:	95 95       	asr	r25
    1412:	87 95       	ror	r24
    1414:	82 2b       	or	r24, r18
    1416:	8a 87       	std	Y+10, r24	; 0x0a
    1418:	8a 85       	ldd	r24, Y+10	; 0x0a
    141a:	88 2f       	mov	r24, r24
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	88 0f       	add	r24, r24
    1420:	99 1f       	adc	r25, r25
    1422:	98 2f       	mov	r25, r24
    1424:	8a 85       	ldd	r24, Y+10	; 0x0a
    1426:	29 2f       	mov	r18, r25
    1428:	28 2b       	or	r18, r24
    142a:	8a 85       	ldd	r24, Y+10	; 0x0a
    142c:	88 2f       	mov	r24, r24
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	88 0f       	add	r24, r24
    1432:	99 1f       	adc	r25, r25
    1434:	88 0f       	add	r24, r24
    1436:	99 1f       	adc	r25, r25
    1438:	28 2b       	or	r18, r24
    143a:	8a 85       	ldd	r24, Y+10	; 0x0a
    143c:	88 2f       	mov	r24, r24
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	88 0f       	add	r24, r24
    1442:	99 1f       	adc	r25, r25
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	88 0f       	add	r24, r24
    144a:	99 1f       	adc	r25, r25
    144c:	82 2b       	or	r24, r18
    144e:	8a 87       	std	Y+10, r24	; 0x0a
    1450:	8a 85       	ldd	r24, Y+10	; 0x0a
    1452:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1456:	8d 81       	ldd	r24, Y+5	; 0x05
    1458:	88 2f       	mov	r24, r24
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	82 70       	andi	r24, 0x02	; 2
    145e:	99 27       	eor	r25, r25
    1460:	88 0f       	add	r24, r24
    1462:	99 1f       	adc	r25, r25
    1464:	88 0f       	add	r24, r24
    1466:	99 1f       	adc	r25, r25
    1468:	88 0f       	add	r24, r24
    146a:	99 1f       	adc	r25, r25
    146c:	28 2f       	mov	r18, r24
    146e:	8e 81       	ldd	r24, Y+6	; 0x06
    1470:	88 2f       	mov	r24, r24
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	82 70       	andi	r24, 0x02	; 2
    1476:	99 27       	eor	r25, r25
    1478:	95 95       	asr	r25
    147a:	87 95       	ror	r24
    147c:	82 2b       	or	r24, r18
    147e:	8a 87       	std	Y+10, r24	; 0x0a
    1480:	8a 85       	ldd	r24, Y+10	; 0x0a
    1482:	88 2f       	mov	r24, r24
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	88 0f       	add	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	98 2f       	mov	r25, r24
    148c:	8a 85       	ldd	r24, Y+10	; 0x0a
    148e:	29 2f       	mov	r18, r25
    1490:	28 2b       	or	r18, r24
    1492:	8a 85       	ldd	r24, Y+10	; 0x0a
    1494:	88 2f       	mov	r24, r24
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	88 0f       	add	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	88 0f       	add	r24, r24
    149e:	99 1f       	adc	r25, r25
    14a0:	28 2b       	or	r18, r24
    14a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    14a4:	88 2f       	mov	r24, r24
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	88 0f       	add	r24, r24
    14aa:	99 1f       	adc	r25, r25
    14ac:	88 0f       	add	r24, r24
    14ae:	99 1f       	adc	r25, r25
    14b0:	88 0f       	add	r24, r24
    14b2:	99 1f       	adc	r25, r25
    14b4:	82 2b       	or	r24, r18
    14b6:	8a 87       	std	Y+10, r24	; 0x0a
    14b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ba:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    14be:	89 85       	ldd	r24, Y+9	; 0x09
    14c0:	88 2f       	mov	r24, r24
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	84 70       	andi	r24, 0x04	; 4
    14c6:	99 27       	eor	r25, r25
    14c8:	88 0f       	add	r24, r24
    14ca:	99 1f       	adc	r25, r25
    14cc:	88 0f       	add	r24, r24
    14ce:	99 1f       	adc	r25, r25
    14d0:	28 2f       	mov	r18, r24
    14d2:	8c 81       	ldd	r24, Y+4	; 0x04
    14d4:	88 2f       	mov	r24, r24
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	84 70       	andi	r24, 0x04	; 4
    14da:	99 27       	eor	r25, r25
    14dc:	95 95       	asr	r25
    14de:	87 95       	ror	r24
    14e0:	95 95       	asr	r25
    14e2:	87 95       	ror	r24
    14e4:	82 2b       	or	r24, r18
    14e6:	8a 87       	std	Y+10, r24	; 0x0a
    14e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ea:	88 2f       	mov	r24, r24
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	88 0f       	add	r24, r24
    14f0:	99 1f       	adc	r25, r25
    14f2:	98 2f       	mov	r25, r24
    14f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    14f6:	29 2f       	mov	r18, r25
    14f8:	28 2b       	or	r18, r24
    14fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    14fc:	88 2f       	mov	r24, r24
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	88 0f       	add	r24, r24
    1502:	99 1f       	adc	r25, r25
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	28 2b       	or	r18, r24
    150a:	8a 85       	ldd	r24, Y+10	; 0x0a
    150c:	88 2f       	mov	r24, r24
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	88 0f       	add	r24, r24
    1516:	99 1f       	adc	r25, r25
    1518:	88 0f       	add	r24, r24
    151a:	99 1f       	adc	r25, r25
    151c:	82 2b       	or	r24, r18
    151e:	8a 87       	std	Y+10, r24	; 0x0a
    1520:	8a 85       	ldd	r24, Y+10	; 0x0a
    1522:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1526:	8d 81       	ldd	r24, Y+5	; 0x05
    1528:	88 2f       	mov	r24, r24
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	84 70       	andi	r24, 0x04	; 4
    152e:	99 27       	eor	r25, r25
    1530:	88 0f       	add	r24, r24
    1532:	99 1f       	adc	r25, r25
    1534:	88 0f       	add	r24, r24
    1536:	99 1f       	adc	r25, r25
    1538:	28 2f       	mov	r18, r24
    153a:	8e 81       	ldd	r24, Y+6	; 0x06
    153c:	88 2f       	mov	r24, r24
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	84 70       	andi	r24, 0x04	; 4
    1542:	99 27       	eor	r25, r25
    1544:	95 95       	asr	r25
    1546:	87 95       	ror	r24
    1548:	95 95       	asr	r25
    154a:	87 95       	ror	r24
    154c:	82 2b       	or	r24, r18
    154e:	8a 87       	std	Y+10, r24	; 0x0a
    1550:	8a 85       	ldd	r24, Y+10	; 0x0a
    1552:	88 2f       	mov	r24, r24
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	88 0f       	add	r24, r24
    1558:	99 1f       	adc	r25, r25
    155a:	98 2f       	mov	r25, r24
    155c:	8a 85       	ldd	r24, Y+10	; 0x0a
    155e:	29 2f       	mov	r18, r25
    1560:	28 2b       	or	r18, r24
    1562:	8a 85       	ldd	r24, Y+10	; 0x0a
    1564:	88 2f       	mov	r24, r24
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	88 0f       	add	r24, r24
    156a:	99 1f       	adc	r25, r25
    156c:	88 0f       	add	r24, r24
    156e:	99 1f       	adc	r25, r25
    1570:	28 2b       	or	r18, r24
    1572:	8a 85       	ldd	r24, Y+10	; 0x0a
    1574:	88 2f       	mov	r24, r24
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	88 0f       	add	r24, r24
    157a:	99 1f       	adc	r25, r25
    157c:	88 0f       	add	r24, r24
    157e:	99 1f       	adc	r25, r25
    1580:	88 0f       	add	r24, r24
    1582:	99 1f       	adc	r25, r25
    1584:	82 2b       	or	r24, r18
    1586:	8a 87       	std	Y+10, r24	; 0x0a
    1588:	8a 85       	ldd	r24, Y+10	; 0x0a
    158a:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    158e:	89 85       	ldd	r24, Y+9	; 0x09
    1590:	88 2f       	mov	r24, r24
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	88 70       	andi	r24, 0x08	; 8
    1596:	99 27       	eor	r25, r25
    1598:	88 0f       	add	r24, r24
    159a:	99 1f       	adc	r25, r25
    159c:	28 2f       	mov	r18, r24
    159e:	8c 81       	ldd	r24, Y+4	; 0x04
    15a0:	88 2f       	mov	r24, r24
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	88 70       	andi	r24, 0x08	; 8
    15a6:	99 27       	eor	r25, r25
    15a8:	95 95       	asr	r25
    15aa:	87 95       	ror	r24
    15ac:	95 95       	asr	r25
    15ae:	87 95       	ror	r24
    15b0:	95 95       	asr	r25
    15b2:	87 95       	ror	r24
    15b4:	82 2b       	or	r24, r18
    15b6:	8a 87       	std	Y+10, r24	; 0x0a
    15b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    15ba:	88 2f       	mov	r24, r24
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	88 0f       	add	r24, r24
    15c0:	99 1f       	adc	r25, r25
    15c2:	98 2f       	mov	r25, r24
    15c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    15c6:	29 2f       	mov	r18, r25
    15c8:	28 2b       	or	r18, r24
    15ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    15cc:	88 2f       	mov	r24, r24
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	88 0f       	add	r24, r24
    15d2:	99 1f       	adc	r25, r25
    15d4:	88 0f       	add	r24, r24
    15d6:	99 1f       	adc	r25, r25
    15d8:	28 2b       	or	r18, r24
    15da:	8a 85       	ldd	r24, Y+10	; 0x0a
    15dc:	88 2f       	mov	r24, r24
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	88 0f       	add	r24, r24
    15e2:	99 1f       	adc	r25, r25
    15e4:	88 0f       	add	r24, r24
    15e6:	99 1f       	adc	r25, r25
    15e8:	88 0f       	add	r24, r24
    15ea:	99 1f       	adc	r25, r25
    15ec:	82 2b       	or	r24, r18
    15ee:	8a 87       	std	Y+10, r24	; 0x0a
    15f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    15f2:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    15f6:	8d 81       	ldd	r24, Y+5	; 0x05
    15f8:	88 2f       	mov	r24, r24
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	88 70       	andi	r24, 0x08	; 8
    15fe:	99 27       	eor	r25, r25
    1600:	88 0f       	add	r24, r24
    1602:	99 1f       	adc	r25, r25
    1604:	28 2f       	mov	r18, r24
    1606:	8e 81       	ldd	r24, Y+6	; 0x06
    1608:	88 2f       	mov	r24, r24
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	88 70       	andi	r24, 0x08	; 8
    160e:	99 27       	eor	r25, r25
    1610:	95 95       	asr	r25
    1612:	87 95       	ror	r24
    1614:	95 95       	asr	r25
    1616:	87 95       	ror	r24
    1618:	95 95       	asr	r25
    161a:	87 95       	ror	r24
    161c:	82 2b       	or	r24, r18
    161e:	8a 87       	std	Y+10, r24	; 0x0a
    1620:	8a 85       	ldd	r24, Y+10	; 0x0a
    1622:	88 2f       	mov	r24, r24
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	88 0f       	add	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	98 2f       	mov	r25, r24
    162c:	8a 85       	ldd	r24, Y+10	; 0x0a
    162e:	29 2f       	mov	r18, r25
    1630:	28 2b       	or	r18, r24
    1632:	8a 85       	ldd	r24, Y+10	; 0x0a
    1634:	88 2f       	mov	r24, r24
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	88 0f       	add	r24, r24
    163a:	99 1f       	adc	r25, r25
    163c:	88 0f       	add	r24, r24
    163e:	99 1f       	adc	r25, r25
    1640:	28 2b       	or	r18, r24
    1642:	8a 85       	ldd	r24, Y+10	; 0x0a
    1644:	88 2f       	mov	r24, r24
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	88 0f       	add	r24, r24
    164a:	99 1f       	adc	r25, r25
    164c:	88 0f       	add	r24, r24
    164e:	99 1f       	adc	r25, r25
    1650:	88 0f       	add	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	82 2b       	or	r24, r18
    1656:	8a 87       	std	Y+10, r24	; 0x0a
    1658:	8a 85       	ldd	r24, Y+10	; 0x0a
    165a:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    165e:	89 85       	ldd	r24, Y+9	; 0x09
    1660:	88 2f       	mov	r24, r24
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	80 71       	andi	r24, 0x10	; 16
    1666:	99 27       	eor	r25, r25
    1668:	88 0f       	add	r24, r24
    166a:	99 1f       	adc	r25, r25
    166c:	88 0f       	add	r24, r24
    166e:	99 1f       	adc	r25, r25
    1670:	88 0f       	add	r24, r24
    1672:	99 1f       	adc	r25, r25
    1674:	28 2f       	mov	r18, r24
    1676:	8c 81       	ldd	r24, Y+4	; 0x04
    1678:	88 2f       	mov	r24, r24
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	80 71       	andi	r24, 0x10	; 16
    167e:	99 27       	eor	r25, r25
    1680:	95 95       	asr	r25
    1682:	87 95       	ror	r24
    1684:	82 2b       	or	r24, r18
    1686:	8a 87       	std	Y+10, r24	; 0x0a
    1688:	8a 85       	ldd	r24, Y+10	; 0x0a
    168a:	98 2f       	mov	r25, r24
    168c:	96 95       	lsr	r25
    168e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1690:	98 2b       	or	r25, r24
    1692:	8a 85       	ldd	r24, Y+10	; 0x0a
    1694:	86 95       	lsr	r24
    1696:	86 95       	lsr	r24
    1698:	98 2b       	or	r25, r24
    169a:	8a 85       	ldd	r24, Y+10	; 0x0a
    169c:	86 95       	lsr	r24
    169e:	86 95       	lsr	r24
    16a0:	86 95       	lsr	r24
    16a2:	89 2b       	or	r24, r25
    16a4:	8a 87       	std	Y+10, r24	; 0x0a
    16a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    16a8:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    16ac:	8d 81       	ldd	r24, Y+5	; 0x05
    16ae:	88 2f       	mov	r24, r24
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	80 71       	andi	r24, 0x10	; 16
    16b4:	99 27       	eor	r25, r25
    16b6:	88 0f       	add	r24, r24
    16b8:	99 1f       	adc	r25, r25
    16ba:	88 0f       	add	r24, r24
    16bc:	99 1f       	adc	r25, r25
    16be:	88 0f       	add	r24, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	28 2f       	mov	r18, r24
    16c4:	8e 81       	ldd	r24, Y+6	; 0x06
    16c6:	88 2f       	mov	r24, r24
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	80 71       	andi	r24, 0x10	; 16
    16cc:	99 27       	eor	r25, r25
    16ce:	95 95       	asr	r25
    16d0:	87 95       	ror	r24
    16d2:	82 2b       	or	r24, r18
    16d4:	8a 87       	std	Y+10, r24	; 0x0a
    16d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    16d8:	98 2f       	mov	r25, r24
    16da:	96 95       	lsr	r25
    16dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    16de:	98 2b       	or	r25, r24
    16e0:	8a 85       	ldd	r24, Y+10	; 0x0a
    16e2:	86 95       	lsr	r24
    16e4:	86 95       	lsr	r24
    16e6:	98 2b       	or	r25, r24
    16e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    16ea:	86 95       	lsr	r24
    16ec:	86 95       	lsr	r24
    16ee:	86 95       	lsr	r24
    16f0:	89 2b       	or	r24, r25
    16f2:	8a 87       	std	Y+10, r24	; 0x0a
    16f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    16f6:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    16fa:	89 85       	ldd	r24, Y+9	; 0x09
    16fc:	88 2f       	mov	r24, r24
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	80 72       	andi	r24, 0x20	; 32
    1702:	99 27       	eor	r25, r25
    1704:	88 0f       	add	r24, r24
    1706:	99 1f       	adc	r25, r25
    1708:	88 0f       	add	r24, r24
    170a:	99 1f       	adc	r25, r25
    170c:	28 2f       	mov	r18, r24
    170e:	8c 81       	ldd	r24, Y+4	; 0x04
    1710:	88 2f       	mov	r24, r24
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	80 72       	andi	r24, 0x20	; 32
    1716:	99 27       	eor	r25, r25
    1718:	95 95       	asr	r25
    171a:	87 95       	ror	r24
    171c:	95 95       	asr	r25
    171e:	87 95       	ror	r24
    1720:	82 2b       	or	r24, r18
    1722:	8a 87       	std	Y+10, r24	; 0x0a
    1724:	8a 85       	ldd	r24, Y+10	; 0x0a
    1726:	98 2f       	mov	r25, r24
    1728:	96 95       	lsr	r25
    172a:	8a 85       	ldd	r24, Y+10	; 0x0a
    172c:	98 2b       	or	r25, r24
    172e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1730:	86 95       	lsr	r24
    1732:	86 95       	lsr	r24
    1734:	98 2b       	or	r25, r24
    1736:	8a 85       	ldd	r24, Y+10	; 0x0a
    1738:	86 95       	lsr	r24
    173a:	86 95       	lsr	r24
    173c:	86 95       	lsr	r24
    173e:	89 2b       	or	r24, r25
    1740:	8a 87       	std	Y+10, r24	; 0x0a
    1742:	8a 85       	ldd	r24, Y+10	; 0x0a
    1744:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1748:	8d 81       	ldd	r24, Y+5	; 0x05
    174a:	88 2f       	mov	r24, r24
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	80 72       	andi	r24, 0x20	; 32
    1750:	99 27       	eor	r25, r25
    1752:	88 0f       	add	r24, r24
    1754:	99 1f       	adc	r25, r25
    1756:	88 0f       	add	r24, r24
    1758:	99 1f       	adc	r25, r25
    175a:	28 2f       	mov	r18, r24
    175c:	8e 81       	ldd	r24, Y+6	; 0x06
    175e:	88 2f       	mov	r24, r24
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	80 72       	andi	r24, 0x20	; 32
    1764:	99 27       	eor	r25, r25
    1766:	95 95       	asr	r25
    1768:	87 95       	ror	r24
    176a:	95 95       	asr	r25
    176c:	87 95       	ror	r24
    176e:	82 2b       	or	r24, r18
    1770:	8a 87       	std	Y+10, r24	; 0x0a
    1772:	8a 85       	ldd	r24, Y+10	; 0x0a
    1774:	98 2f       	mov	r25, r24
    1776:	96 95       	lsr	r25
    1778:	8a 85       	ldd	r24, Y+10	; 0x0a
    177a:	98 2b       	or	r25, r24
    177c:	8a 85       	ldd	r24, Y+10	; 0x0a
    177e:	86 95       	lsr	r24
    1780:	86 95       	lsr	r24
    1782:	98 2b       	or	r25, r24
    1784:	8a 85       	ldd	r24, Y+10	; 0x0a
    1786:	86 95       	lsr	r24
    1788:	86 95       	lsr	r24
    178a:	86 95       	lsr	r24
    178c:	89 2b       	or	r24, r25
    178e:	8a 87       	std	Y+10, r24	; 0x0a
    1790:	8a 85       	ldd	r24, Y+10	; 0x0a
    1792:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1796:	89 85       	ldd	r24, Y+9	; 0x09
    1798:	88 2f       	mov	r24, r24
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	80 74       	andi	r24, 0x40	; 64
    179e:	99 27       	eor	r25, r25
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	28 2f       	mov	r18, r24
    17a6:	8c 81       	ldd	r24, Y+4	; 0x04
    17a8:	88 2f       	mov	r24, r24
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	80 74       	andi	r24, 0x40	; 64
    17ae:	99 27       	eor	r25, r25
    17b0:	95 95       	asr	r25
    17b2:	87 95       	ror	r24
    17b4:	95 95       	asr	r25
    17b6:	87 95       	ror	r24
    17b8:	95 95       	asr	r25
    17ba:	87 95       	ror	r24
    17bc:	82 2b       	or	r24, r18
    17be:	8a 87       	std	Y+10, r24	; 0x0a
    17c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    17c2:	98 2f       	mov	r25, r24
    17c4:	96 95       	lsr	r25
    17c6:	8a 85       	ldd	r24, Y+10	; 0x0a
    17c8:	98 2b       	or	r25, r24
    17ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    17cc:	86 95       	lsr	r24
    17ce:	86 95       	lsr	r24
    17d0:	98 2b       	or	r25, r24
    17d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    17d4:	86 95       	lsr	r24
    17d6:	86 95       	lsr	r24
    17d8:	86 95       	lsr	r24
    17da:	89 2b       	or	r24, r25
    17dc:	8a 87       	std	Y+10, r24	; 0x0a
    17de:	8a 85       	ldd	r24, Y+10	; 0x0a
    17e0:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    17e4:	8d 81       	ldd	r24, Y+5	; 0x05
    17e6:	88 2f       	mov	r24, r24
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	80 74       	andi	r24, 0x40	; 64
    17ec:	99 27       	eor	r25, r25
    17ee:	88 0f       	add	r24, r24
    17f0:	99 1f       	adc	r25, r25
    17f2:	28 2f       	mov	r18, r24
    17f4:	8e 81       	ldd	r24, Y+6	; 0x06
    17f6:	88 2f       	mov	r24, r24
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	80 74       	andi	r24, 0x40	; 64
    17fc:	99 27       	eor	r25, r25
    17fe:	95 95       	asr	r25
    1800:	87 95       	ror	r24
    1802:	95 95       	asr	r25
    1804:	87 95       	ror	r24
    1806:	95 95       	asr	r25
    1808:	87 95       	ror	r24
    180a:	82 2b       	or	r24, r18
    180c:	8a 87       	std	Y+10, r24	; 0x0a
    180e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1810:	98 2f       	mov	r25, r24
    1812:	96 95       	lsr	r25
    1814:	8a 85       	ldd	r24, Y+10	; 0x0a
    1816:	98 2b       	or	r25, r24
    1818:	8a 85       	ldd	r24, Y+10	; 0x0a
    181a:	86 95       	lsr	r24
    181c:	86 95       	lsr	r24
    181e:	98 2b       	or	r25, r24
    1820:	8a 85       	ldd	r24, Y+10	; 0x0a
    1822:	86 95       	lsr	r24
    1824:	86 95       	lsr	r24
    1826:	86 95       	lsr	r24
    1828:	89 2b       	or	r24, r25
    182a:	8a 87       	std	Y+10, r24	; 0x0a
    182c:	8a 85       	ldd	r24, Y+10	; 0x0a
    182e:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1832:	89 85       	ldd	r24, Y+9	; 0x09
    1834:	28 2f       	mov	r18, r24
    1836:	20 78       	andi	r18, 0x80	; 128
    1838:	8c 81       	ldd	r24, Y+4	; 0x04
    183a:	88 2f       	mov	r24, r24
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	80 78       	andi	r24, 0x80	; 128
    1840:	99 27       	eor	r25, r25
    1842:	95 95       	asr	r25
    1844:	87 95       	ror	r24
    1846:	95 95       	asr	r25
    1848:	87 95       	ror	r24
    184a:	95 95       	asr	r25
    184c:	87 95       	ror	r24
    184e:	95 95       	asr	r25
    1850:	87 95       	ror	r24
    1852:	82 2b       	or	r24, r18
    1854:	8a 87       	std	Y+10, r24	; 0x0a
    1856:	8a 85       	ldd	r24, Y+10	; 0x0a
    1858:	98 2f       	mov	r25, r24
    185a:	96 95       	lsr	r25
    185c:	8a 85       	ldd	r24, Y+10	; 0x0a
    185e:	98 2b       	or	r25, r24
    1860:	8a 85       	ldd	r24, Y+10	; 0x0a
    1862:	86 95       	lsr	r24
    1864:	86 95       	lsr	r24
    1866:	98 2b       	or	r25, r24
    1868:	8a 85       	ldd	r24, Y+10	; 0x0a
    186a:	86 95       	lsr	r24
    186c:	86 95       	lsr	r24
    186e:	86 95       	lsr	r24
    1870:	89 2b       	or	r24, r25
    1872:	8a 87       	std	Y+10, r24	; 0x0a
    1874:	8a 85       	ldd	r24, Y+10	; 0x0a
    1876:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    187a:	8d 81       	ldd	r24, Y+5	; 0x05
    187c:	28 2f       	mov	r18, r24
    187e:	20 78       	andi	r18, 0x80	; 128
    1880:	8e 81       	ldd	r24, Y+6	; 0x06
    1882:	88 2f       	mov	r24, r24
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	80 78       	andi	r24, 0x80	; 128
    1888:	99 27       	eor	r25, r25
    188a:	95 95       	asr	r25
    188c:	87 95       	ror	r24
    188e:	95 95       	asr	r25
    1890:	87 95       	ror	r24
    1892:	95 95       	asr	r25
    1894:	87 95       	ror	r24
    1896:	95 95       	asr	r25
    1898:	87 95       	ror	r24
    189a:	82 2b       	or	r24, r18
    189c:	8a 87       	std	Y+10, r24	; 0x0a
    189e:	8a 85       	ldd	r24, Y+10	; 0x0a
    18a0:	98 2f       	mov	r25, r24
    18a2:	96 95       	lsr	r25
    18a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    18a6:	98 2b       	or	r25, r24
    18a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    18aa:	86 95       	lsr	r24
    18ac:	86 95       	lsr	r24
    18ae:	98 2b       	or	r25, r24
    18b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    18b2:	86 95       	lsr	r24
    18b4:	86 95       	lsr	r24
    18b6:	86 95       	lsr	r24
    18b8:	89 2b       	or	r24, r25
    18ba:	8a 87       	std	Y+10, r24	; 0x0a
    18bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    18be:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    18c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    18c4:	8f 5f       	subi	r24, 0xFF	; 255
    18c6:	8d 87       	std	Y+13, r24	; 0x0d
    18c8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ca:	8f 5f       	subi	r24, 0xFF	; 255
    18cc:	8b 83       	std	Y+3, r24	; 0x03
    18ce:	8b 81       	ldd	r24, Y+3	; 0x03
    18d0:	82 30       	cpi	r24, 0x02	; 2
    18d2:	08 f4       	brcc	.+2      	; 0x18d6 <Show_Font57+0x6a6>
    18d4:	ef cc       	rjmp	.-1570   	; 0x12b4 <Show_Font57+0x84>
    18d6:	84 e1       	ldi	r24, 0x14	; 20
    18d8:	0e 94 93 07 	call	0xf26	; 0xf26 <Set_Remap_Format>
    18dc:	00 00       	nop
    18de:	2e 96       	adiw	r28, 0x0e	; 14
    18e0:	0f b6       	in	r0, 0x3f	; 63
    18e2:	f8 94       	cli
    18e4:	de bf       	out	0x3e, r29	; 62
    18e6:	0f be       	out	0x3f, r0	; 63
    18e8:	cd bf       	out	0x3d, r28	; 61
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	08 95       	ret

000018f0 <Show_String>:
    18f0:	cf 93       	push	r28
    18f2:	df 93       	push	r29
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62
    18f8:	27 97       	sbiw	r28, 0x07	; 7
    18fa:	0f b6       	in	r0, 0x3f	; 63
    18fc:	f8 94       	cli
    18fe:	de bf       	out	0x3e, r29	; 62
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	cd bf       	out	0x3d, r28	; 61
    1904:	8b 83       	std	Y+3, r24	; 0x03
    1906:	7d 83       	std	Y+5, r23	; 0x05
    1908:	6c 83       	std	Y+4, r22	; 0x04
    190a:	4e 83       	std	Y+6, r20	; 0x06
    190c:	2f 83       	std	Y+7, r18	; 0x07
    190e:	8c 81       	ldd	r24, Y+4	; 0x04
    1910:	9d 81       	ldd	r25, Y+5	; 0x05
    1912:	9a 83       	std	Y+2, r25	; 0x02
    1914:	89 83       	std	Y+1, r24	; 0x01
    1916:	2f 81       	ldd	r18, Y+7	; 0x07
    1918:	4e 81       	ldd	r20, Y+6	; 0x06
    191a:	60 e6       	ldi	r22, 0x60	; 96
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	0e 94 18 09 	call	0x1230	; 0x1230 <Show_Font57>
    1922:	89 81       	ldd	r24, Y+1	; 0x01
    1924:	9a 81       	ldd	r25, Y+2	; 0x02
    1926:	fc 01       	movw	r30, r24
    1928:	80 81       	ld	r24, Z
    192a:	2f 81       	ldd	r18, Y+7	; 0x07
    192c:	4e 81       	ldd	r20, Y+6	; 0x06
    192e:	68 2f       	mov	r22, r24
    1930:	8b 81       	ldd	r24, Y+3	; 0x03
    1932:	0e 94 18 09 	call	0x1230	; 0x1230 <Show_Font57>
    1936:	89 81       	ldd	r24, Y+1	; 0x01
    1938:	9a 81       	ldd	r25, Y+2	; 0x02
    193a:	01 96       	adiw	r24, 0x01	; 1
    193c:	9a 83       	std	Y+2, r25	; 0x02
    193e:	89 83       	std	Y+1, r24	; 0x01
    1940:	8e 81       	ldd	r24, Y+6	; 0x06
    1942:	8e 5f       	subi	r24, 0xFE	; 254
    1944:	8e 83       	std	Y+6, r24	; 0x06
    1946:	89 81       	ldd	r24, Y+1	; 0x01
    1948:	9a 81       	ldd	r25, Y+2	; 0x02
    194a:	fc 01       	movw	r30, r24
    194c:	80 81       	ld	r24, Z
    194e:	88 23       	and	r24, r24
    1950:	09 f0       	breq	.+2      	; 0x1954 <Show_String+0x64>
    1952:	e7 cf       	rjmp	.-50     	; 0x1922 <Show_String+0x32>
    1954:	00 00       	nop
    1956:	00 00       	nop
    1958:	27 96       	adiw	r28, 0x07	; 7
    195a:	0f b6       	in	r0, 0x3f	; 63
    195c:	f8 94       	cli
    195e:	de bf       	out	0x3e, r29	; 62
    1960:	0f be       	out	0x3f, r0	; 63
    1962:	cd bf       	out	0x3d, r28	; 61
    1964:	df 91       	pop	r29
    1966:	cf 91       	pop	r28
    1968:	08 95       	ret

0000196a <Set_Gray_Scale_Table>:
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	cd b7       	in	r28, 0x3d	; 61
    1970:	de b7       	in	r29, 0x3e	; 62
    1972:	88 eb       	ldi	r24, 0xB8	; 184
    1974:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    1978:	8c e0       	ldi	r24, 0x0C	; 12
    197a:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    197e:	88 e1       	ldi	r24, 0x18	; 24
    1980:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1984:	84 e2       	ldi	r24, 0x24	; 36
    1986:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    198a:	80 e3       	ldi	r24, 0x30	; 48
    198c:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1990:	8c e3       	ldi	r24, 0x3C	; 60
    1992:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    1996:	88 e4       	ldi	r24, 0x48	; 72
    1998:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    199c:	84 e5       	ldi	r24, 0x54	; 84
    199e:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19a2:	80 e6       	ldi	r24, 0x60	; 96
    19a4:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19a8:	8c e6       	ldi	r24, 0x6C	; 108
    19aa:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19ae:	88 e7       	ldi	r24, 0x78	; 120
    19b0:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19b4:	84 e8       	ldi	r24, 0x84	; 132
    19b6:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19ba:	80 e9       	ldi	r24, 0x90	; 144
    19bc:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19c0:	8c e9       	ldi	r24, 0x9C	; 156
    19c2:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19c6:	88 ea       	ldi	r24, 0xA8	; 168
    19c8:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19cc:	84 eb       	ldi	r24, 0xB4	; 180
    19ce:	0e 94 2a 07 	call	0xe54	; 0xe54 <Write_Data>
    19d2:	80 e0       	ldi	r24, 0x00	; 0
    19d4:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <Write_Command>
    19d8:	00 00       	nop
    19da:	df 91       	pop	r29
    19dc:	cf 91       	pop	r28
    19de:	08 95       	ret

000019e0 <OLED_Init>:
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	cd b7       	in	r28, 0x3d	; 61
    19e6:	de b7       	in	r29, 0x3e	; 62
    19e8:	85 e2       	ldi	r24, 0x25	; 37
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	25 e2       	ldi	r18, 0x25	; 37
    19ee:	30 e0       	ldi	r19, 0x00	; 0
    19f0:	f9 01       	movw	r30, r18
    19f2:	20 81       	ld	r18, Z
    19f4:	2f 7b       	andi	r18, 0xBF	; 191
    19f6:	fc 01       	movw	r30, r24
    19f8:	20 83       	st	Z, r18
    19fa:	88 ee       	ldi	r24, 0xE8	; 232
    19fc:	93 e0       	ldi	r25, 0x03	; 3
    19fe:	0e 94 d5 06 	call	0xdaa	; 0xdaa <Delay>
    1a02:	85 e2       	ldi	r24, 0x25	; 37
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	25 e2       	ldi	r18, 0x25	; 37
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	f9 01       	movw	r30, r18
    1a0c:	20 81       	ld	r18, Z
    1a0e:	20 64       	ori	r18, 0x40	; 64
    1a10:	fc 01       	movw	r30, r24
    1a12:	20 83       	st	Z, r18
    1a14:	82 e1       	ldi	r24, 0x12	; 18
    1a16:	0e 94 db 08 	call	0x11b6	; 0x11b6 <Set_Command_Lock>
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	0e 94 06 08 	call	0x100c	; 0x100c <Set_Display_On_Off>
    1a20:	81 e9       	ldi	r24, 0x91	; 145
    1a22:	0e 94 26 08 	call	0x104c	; 0x104c <Set_Display_Clock>
    1a26:	8f e3       	ldi	r24, 0x3F	; 63
    1a28:	0e 94 b5 08 	call	0x116a	; 0x116a <Set_Multiplex_Ratio>
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	0e 94 b8 07 	call	0xf70	; 0xf70 <Set_Display_Offset>
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	0e 94 a7 07 	call	0xf4e	; 0xf4e <Set_Start_Line>
    1a38:	84 e1       	ldi	r24, 0x14	; 20
    1a3a:	0e 94 93 07 	call	0xf26	; 0xf26 <Set_Remap_Format>
    1a3e:	80 e0       	ldi	r24, 0x00	; 0
    1a40:	0e 94 4f 08 	call	0x109e	; 0x109e <Set_GPIO>
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	0e 94 f5 07 	call	0xfea	; 0xfea <Set_Function_Selection>
    1a4a:	6d ef       	ldi	r22, 0xFD	; 253
    1a4c:	80 ea       	ldi	r24, 0xA0	; 160
    1a4e:	0e 94 37 08 	call	0x106e	; 0x106e <Set_Display_Enhancement_A>
    1a52:	8f e7       	ldi	r24, 0x7F	; 127
    1a54:	0e 94 93 08 	call	0x1126	; 0x1126 <Set_Contrast_Current>
    1a58:	8f e0       	ldi	r24, 0x0F	; 15
    1a5a:	0e 94 a4 08 	call	0x1148	; 0x1148 <Set_Master_Current>
    1a5e:	0e 94 b5 0c 	call	0x196a	; 0x196a <Set_Gray_Scale_Table>
    1a62:	82 ee       	ldi	r24, 0xE2	; 226
    1a64:	0e 94 15 08 	call	0x102a	; 0x102a <Set_Phase_Length>
    1a68:	80 e2       	ldi	r24, 0x20	; 32
    1a6a:	0e 94 c6 08 	call	0x118c	; 0x118c <Set_Display_Enhancement_B>
    1a6e:	8f e1       	ldi	r24, 0x1F	; 31
    1a70:	0e 94 71 08 	call	0x10e2	; 0x10e2 <Set_Precharge_Voltage>
    1a74:	88 e0       	ldi	r24, 0x08	; 8
    1a76:	0e 94 60 08 	call	0x10c0	; 0x10c0 <Set_Precharge_Period>
    1a7a:	87 e0       	ldi	r24, 0x07	; 7
    1a7c:	0e 94 82 08 	call	0x1104	; 0x1104 <Set_VCOMH>
    1a80:	82 e0       	ldi	r24, 0x02	; 2
    1a82:	0e 94 c9 07 	call	0xf92	; 0xf92 <Set_Display_Mode>
    1a86:	40 e0       	ldi	r20, 0x00	; 0
    1a88:	60 e0       	ldi	r22, 0x00	; 0
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <Set_Partial_Display>
    1a90:	80 e0       	ldi	r24, 0x00	; 0
    1a92:	0e 94 ed 08 	call	0x11da	; 0x11da <Fill_RAM>
    1a96:	81 e0       	ldi	r24, 0x01	; 1
    1a98:	0e 94 06 08 	call	0x100c	; 0x100c <Set_Display_On_Off>
    1a9c:	00 00       	nop
    1a9e:	df 91       	pop	r29
    1aa0:	cf 91       	pop	r28
    1aa2:	08 95       	ret

00001aa4 <__umulhisi3>:
    1aa4:	a2 9f       	mul	r26, r18
    1aa6:	b0 01       	movw	r22, r0
    1aa8:	b3 9f       	mul	r27, r19
    1aaa:	c0 01       	movw	r24, r0
    1aac:	a3 9f       	mul	r26, r19
    1aae:	70 0d       	add	r23, r0
    1ab0:	81 1d       	adc	r24, r1
    1ab2:	11 24       	eor	r1, r1
    1ab4:	91 1d       	adc	r25, r1
    1ab6:	b2 9f       	mul	r27, r18
    1ab8:	70 0d       	add	r23, r0
    1aba:	81 1d       	adc	r24, r1
    1abc:	11 24       	eor	r1, r1
    1abe:	91 1d       	adc	r25, r1
    1ac0:	08 95       	ret

00001ac2 <strcat>:
    1ac2:	fb 01       	movw	r30, r22
    1ac4:	dc 01       	movw	r26, r24
    1ac6:	0d 90       	ld	r0, X+
    1ac8:	00 20       	and	r0, r0
    1aca:	e9 f7       	brne	.-6      	; 0x1ac6 <strcat+0x4>
    1acc:	11 97       	sbiw	r26, 0x01	; 1
    1ace:	01 90       	ld	r0, Z+
    1ad0:	0d 92       	st	X+, r0
    1ad2:	00 20       	and	r0, r0
    1ad4:	e1 f7       	brne	.-8      	; 0x1ace <strcat+0xc>
    1ad6:	08 95       	ret

00001ad8 <itoa>:
    1ad8:	45 32       	cpi	r20, 0x25	; 37
    1ada:	51 05       	cpc	r21, r1
    1adc:	20 f4       	brcc	.+8      	; 0x1ae6 <itoa+0xe>
    1ade:	42 30       	cpi	r20, 0x02	; 2
    1ae0:	10 f0       	brcs	.+4      	; 0x1ae6 <itoa+0xe>
    1ae2:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__itoa_ncheck>
    1ae6:	fb 01       	movw	r30, r22
    1ae8:	10 82       	st	Z, r1
    1aea:	cb 01       	movw	r24, r22
    1aec:	08 95       	ret

00001aee <__itoa_ncheck>:
    1aee:	bb 27       	eor	r27, r27
    1af0:	4a 30       	cpi	r20, 0x0A	; 10
    1af2:	31 f4       	brne	.+12     	; 0x1b00 <__itoa_ncheck+0x12>
    1af4:	99 23       	and	r25, r25
    1af6:	22 f4       	brpl	.+8      	; 0x1b00 <__itoa_ncheck+0x12>
    1af8:	bd e2       	ldi	r27, 0x2D	; 45
    1afa:	90 95       	com	r25
    1afc:	81 95       	neg	r24
    1afe:	9f 4f       	sbci	r25, 0xFF	; 255
    1b00:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__utoa_common>

00001b04 <__utoa_ncheck>:
    1b04:	bb 27       	eor	r27, r27

00001b06 <__utoa_common>:
    1b06:	fb 01       	movw	r30, r22
    1b08:	55 27       	eor	r21, r21
    1b0a:	aa 27       	eor	r26, r26
    1b0c:	88 0f       	add	r24, r24
    1b0e:	99 1f       	adc	r25, r25
    1b10:	aa 1f       	adc	r26, r26
    1b12:	a4 17       	cp	r26, r20
    1b14:	10 f0       	brcs	.+4      	; 0x1b1a <__utoa_common+0x14>
    1b16:	a4 1b       	sub	r26, r20
    1b18:	83 95       	inc	r24
    1b1a:	50 51       	subi	r21, 0x10	; 16
    1b1c:	b9 f7       	brne	.-18     	; 0x1b0c <__utoa_common+0x6>
    1b1e:	a0 5d       	subi	r26, 0xD0	; 208
    1b20:	aa 33       	cpi	r26, 0x3A	; 58
    1b22:	08 f0       	brcs	.+2      	; 0x1b26 <__utoa_common+0x20>
    1b24:	a9 5d       	subi	r26, 0xD9	; 217
    1b26:	a1 93       	st	Z+, r26
    1b28:	00 97       	sbiw	r24, 0x00	; 0
    1b2a:	79 f7       	brne	.-34     	; 0x1b0a <__utoa_common+0x4>
    1b2c:	b1 11       	cpse	r27, r1
    1b2e:	b1 93       	st	Z+, r27
    1b30:	11 92       	st	Z+, r1
    1b32:	cb 01       	movw	r24, r22
    1b34:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <strrev>

00001b38 <sprintf>:
    1b38:	ae e0       	ldi	r26, 0x0E	; 14
    1b3a:	b0 e0       	ldi	r27, 0x00	; 0
    1b3c:	e2 ea       	ldi	r30, 0xA2	; 162
    1b3e:	fd e0       	ldi	r31, 0x0D	; 13
    1b40:	0c 94 6d 10 	jmp	0x20da	; 0x20da <__prologue_saves__+0x1c>
    1b44:	0d 89       	ldd	r16, Y+21	; 0x15
    1b46:	1e 89       	ldd	r17, Y+22	; 0x16
    1b48:	86 e0       	ldi	r24, 0x06	; 6
    1b4a:	8c 83       	std	Y+4, r24	; 0x04
    1b4c:	1a 83       	std	Y+2, r17	; 0x02
    1b4e:	09 83       	std	Y+1, r16	; 0x01
    1b50:	8f ef       	ldi	r24, 0xFF	; 255
    1b52:	9f e7       	ldi	r25, 0x7F	; 127
    1b54:	9e 83       	std	Y+6, r25	; 0x06
    1b56:	8d 83       	std	Y+5, r24	; 0x05
    1b58:	ae 01       	movw	r20, r28
    1b5a:	47 5e       	subi	r20, 0xE7	; 231
    1b5c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b5e:	6f 89       	ldd	r22, Y+23	; 0x17
    1b60:	78 8d       	ldd	r23, Y+24	; 0x18
    1b62:	ce 01       	movw	r24, r28
    1b64:	01 96       	adiw	r24, 0x01	; 1
    1b66:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <vfprintf>
    1b6a:	ef 81       	ldd	r30, Y+7	; 0x07
    1b6c:	f8 85       	ldd	r31, Y+8	; 0x08
    1b6e:	e0 0f       	add	r30, r16
    1b70:	f1 1f       	adc	r31, r17
    1b72:	10 82       	st	Z, r1
    1b74:	2e 96       	adiw	r28, 0x0e	; 14
    1b76:	e4 e0       	ldi	r30, 0x04	; 4
    1b78:	0c 94 89 10 	jmp	0x2112	; 0x2112 <__epilogue_restores__+0x1c>

00001b7c <vfprintf>:
    1b7c:	ab e0       	ldi	r26, 0x0B	; 11
    1b7e:	b0 e0       	ldi	r27, 0x00	; 0
    1b80:	e4 ec       	ldi	r30, 0xC4	; 196
    1b82:	fd e0       	ldi	r31, 0x0D	; 13
    1b84:	0c 94 5f 10 	jmp	0x20be	; 0x20be <__prologue_saves__>
    1b88:	6c 01       	movw	r12, r24
    1b8a:	7b 01       	movw	r14, r22
    1b8c:	8a 01       	movw	r16, r20
    1b8e:	fc 01       	movw	r30, r24
    1b90:	17 82       	std	Z+7, r1	; 0x07
    1b92:	16 82       	std	Z+6, r1	; 0x06
    1b94:	83 81       	ldd	r24, Z+3	; 0x03
    1b96:	81 ff       	sbrs	r24, 1
    1b98:	cc c1       	rjmp	.+920    	; 0x1f32 <vfprintf+0x3b6>
    1b9a:	ce 01       	movw	r24, r28
    1b9c:	01 96       	adiw	r24, 0x01	; 1
    1b9e:	3c 01       	movw	r6, r24
    1ba0:	f6 01       	movw	r30, r12
    1ba2:	93 81       	ldd	r25, Z+3	; 0x03
    1ba4:	f7 01       	movw	r30, r14
    1ba6:	93 fd       	sbrc	r25, 3
    1ba8:	85 91       	lpm	r24, Z+
    1baa:	93 ff       	sbrs	r25, 3
    1bac:	81 91       	ld	r24, Z+
    1bae:	7f 01       	movw	r14, r30
    1bb0:	88 23       	and	r24, r24
    1bb2:	09 f4       	brne	.+2      	; 0x1bb6 <vfprintf+0x3a>
    1bb4:	ba c1       	rjmp	.+884    	; 0x1f2a <vfprintf+0x3ae>
    1bb6:	85 32       	cpi	r24, 0x25	; 37
    1bb8:	39 f4       	brne	.+14     	; 0x1bc8 <vfprintf+0x4c>
    1bba:	93 fd       	sbrc	r25, 3
    1bbc:	85 91       	lpm	r24, Z+
    1bbe:	93 ff       	sbrs	r25, 3
    1bc0:	81 91       	ld	r24, Z+
    1bc2:	7f 01       	movw	r14, r30
    1bc4:	85 32       	cpi	r24, 0x25	; 37
    1bc6:	29 f4       	brne	.+10     	; 0x1bd2 <vfprintf+0x56>
    1bc8:	b6 01       	movw	r22, r12
    1bca:	90 e0       	ldi	r25, 0x00	; 0
    1bcc:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1bd0:	e7 cf       	rjmp	.-50     	; 0x1ba0 <vfprintf+0x24>
    1bd2:	91 2c       	mov	r9, r1
    1bd4:	21 2c       	mov	r2, r1
    1bd6:	31 2c       	mov	r3, r1
    1bd8:	ff e1       	ldi	r31, 0x1F	; 31
    1bda:	f3 15       	cp	r31, r3
    1bdc:	d8 f0       	brcs	.+54     	; 0x1c14 <vfprintf+0x98>
    1bde:	8b 32       	cpi	r24, 0x2B	; 43
    1be0:	79 f0       	breq	.+30     	; 0x1c00 <vfprintf+0x84>
    1be2:	38 f4       	brcc	.+14     	; 0x1bf2 <vfprintf+0x76>
    1be4:	80 32       	cpi	r24, 0x20	; 32
    1be6:	79 f0       	breq	.+30     	; 0x1c06 <vfprintf+0x8a>
    1be8:	83 32       	cpi	r24, 0x23	; 35
    1bea:	a1 f4       	brne	.+40     	; 0x1c14 <vfprintf+0x98>
    1bec:	23 2d       	mov	r18, r3
    1bee:	20 61       	ori	r18, 0x10	; 16
    1bf0:	1d c0       	rjmp	.+58     	; 0x1c2c <vfprintf+0xb0>
    1bf2:	8d 32       	cpi	r24, 0x2D	; 45
    1bf4:	61 f0       	breq	.+24     	; 0x1c0e <vfprintf+0x92>
    1bf6:	80 33       	cpi	r24, 0x30	; 48
    1bf8:	69 f4       	brne	.+26     	; 0x1c14 <vfprintf+0x98>
    1bfa:	23 2d       	mov	r18, r3
    1bfc:	21 60       	ori	r18, 0x01	; 1
    1bfe:	16 c0       	rjmp	.+44     	; 0x1c2c <vfprintf+0xb0>
    1c00:	83 2d       	mov	r24, r3
    1c02:	82 60       	ori	r24, 0x02	; 2
    1c04:	38 2e       	mov	r3, r24
    1c06:	e3 2d       	mov	r30, r3
    1c08:	e4 60       	ori	r30, 0x04	; 4
    1c0a:	3e 2e       	mov	r3, r30
    1c0c:	2a c0       	rjmp	.+84     	; 0x1c62 <vfprintf+0xe6>
    1c0e:	f3 2d       	mov	r31, r3
    1c10:	f8 60       	ori	r31, 0x08	; 8
    1c12:	1d c0       	rjmp	.+58     	; 0x1c4e <vfprintf+0xd2>
    1c14:	37 fc       	sbrc	r3, 7
    1c16:	2d c0       	rjmp	.+90     	; 0x1c72 <vfprintf+0xf6>
    1c18:	20 ed       	ldi	r18, 0xD0	; 208
    1c1a:	28 0f       	add	r18, r24
    1c1c:	2a 30       	cpi	r18, 0x0A	; 10
    1c1e:	40 f0       	brcs	.+16     	; 0x1c30 <vfprintf+0xb4>
    1c20:	8e 32       	cpi	r24, 0x2E	; 46
    1c22:	b9 f4       	brne	.+46     	; 0x1c52 <vfprintf+0xd6>
    1c24:	36 fc       	sbrc	r3, 6
    1c26:	81 c1       	rjmp	.+770    	; 0x1f2a <vfprintf+0x3ae>
    1c28:	23 2d       	mov	r18, r3
    1c2a:	20 64       	ori	r18, 0x40	; 64
    1c2c:	32 2e       	mov	r3, r18
    1c2e:	19 c0       	rjmp	.+50     	; 0x1c62 <vfprintf+0xe6>
    1c30:	36 fe       	sbrs	r3, 6
    1c32:	06 c0       	rjmp	.+12     	; 0x1c40 <vfprintf+0xc4>
    1c34:	8a e0       	ldi	r24, 0x0A	; 10
    1c36:	98 9e       	mul	r9, r24
    1c38:	20 0d       	add	r18, r0
    1c3a:	11 24       	eor	r1, r1
    1c3c:	92 2e       	mov	r9, r18
    1c3e:	11 c0       	rjmp	.+34     	; 0x1c62 <vfprintf+0xe6>
    1c40:	ea e0       	ldi	r30, 0x0A	; 10
    1c42:	2e 9e       	mul	r2, r30
    1c44:	20 0d       	add	r18, r0
    1c46:	11 24       	eor	r1, r1
    1c48:	22 2e       	mov	r2, r18
    1c4a:	f3 2d       	mov	r31, r3
    1c4c:	f0 62       	ori	r31, 0x20	; 32
    1c4e:	3f 2e       	mov	r3, r31
    1c50:	08 c0       	rjmp	.+16     	; 0x1c62 <vfprintf+0xe6>
    1c52:	8c 36       	cpi	r24, 0x6C	; 108
    1c54:	21 f4       	brne	.+8      	; 0x1c5e <vfprintf+0xe2>
    1c56:	83 2d       	mov	r24, r3
    1c58:	80 68       	ori	r24, 0x80	; 128
    1c5a:	38 2e       	mov	r3, r24
    1c5c:	02 c0       	rjmp	.+4      	; 0x1c62 <vfprintf+0xe6>
    1c5e:	88 36       	cpi	r24, 0x68	; 104
    1c60:	41 f4       	brne	.+16     	; 0x1c72 <vfprintf+0xf6>
    1c62:	f7 01       	movw	r30, r14
    1c64:	93 fd       	sbrc	r25, 3
    1c66:	85 91       	lpm	r24, Z+
    1c68:	93 ff       	sbrs	r25, 3
    1c6a:	81 91       	ld	r24, Z+
    1c6c:	7f 01       	movw	r14, r30
    1c6e:	81 11       	cpse	r24, r1
    1c70:	b3 cf       	rjmp	.-154    	; 0x1bd8 <vfprintf+0x5c>
    1c72:	98 2f       	mov	r25, r24
    1c74:	9f 7d       	andi	r25, 0xDF	; 223
    1c76:	95 54       	subi	r25, 0x45	; 69
    1c78:	93 30       	cpi	r25, 0x03	; 3
    1c7a:	28 f4       	brcc	.+10     	; 0x1c86 <vfprintf+0x10a>
    1c7c:	0c 5f       	subi	r16, 0xFC	; 252
    1c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c80:	9f e3       	ldi	r25, 0x3F	; 63
    1c82:	99 83       	std	Y+1, r25	; 0x01
    1c84:	0d c0       	rjmp	.+26     	; 0x1ca0 <vfprintf+0x124>
    1c86:	83 36       	cpi	r24, 0x63	; 99
    1c88:	31 f0       	breq	.+12     	; 0x1c96 <vfprintf+0x11a>
    1c8a:	83 37       	cpi	r24, 0x73	; 115
    1c8c:	71 f0       	breq	.+28     	; 0x1caa <vfprintf+0x12e>
    1c8e:	83 35       	cpi	r24, 0x53	; 83
    1c90:	09 f0       	breq	.+2      	; 0x1c94 <vfprintf+0x118>
    1c92:	59 c0       	rjmp	.+178    	; 0x1d46 <vfprintf+0x1ca>
    1c94:	21 c0       	rjmp	.+66     	; 0x1cd8 <vfprintf+0x15c>
    1c96:	f8 01       	movw	r30, r16
    1c98:	80 81       	ld	r24, Z
    1c9a:	89 83       	std	Y+1, r24	; 0x01
    1c9c:	0e 5f       	subi	r16, 0xFE	; 254
    1c9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ca0:	88 24       	eor	r8, r8
    1ca2:	83 94       	inc	r8
    1ca4:	91 2c       	mov	r9, r1
    1ca6:	53 01       	movw	r10, r6
    1ca8:	13 c0       	rjmp	.+38     	; 0x1cd0 <vfprintf+0x154>
    1caa:	28 01       	movw	r4, r16
    1cac:	f2 e0       	ldi	r31, 0x02	; 2
    1cae:	4f 0e       	add	r4, r31
    1cb0:	51 1c       	adc	r5, r1
    1cb2:	f8 01       	movw	r30, r16
    1cb4:	a0 80       	ld	r10, Z
    1cb6:	b1 80       	ldd	r11, Z+1	; 0x01
    1cb8:	36 fe       	sbrs	r3, 6
    1cba:	03 c0       	rjmp	.+6      	; 0x1cc2 <vfprintf+0x146>
    1cbc:	69 2d       	mov	r22, r9
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	02 c0       	rjmp	.+4      	; 0x1cc6 <vfprintf+0x14a>
    1cc2:	6f ef       	ldi	r22, 0xFF	; 255
    1cc4:	7f ef       	ldi	r23, 0xFF	; 255
    1cc6:	c5 01       	movw	r24, r10
    1cc8:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <strnlen>
    1ccc:	4c 01       	movw	r8, r24
    1cce:	82 01       	movw	r16, r4
    1cd0:	f3 2d       	mov	r31, r3
    1cd2:	ff 77       	andi	r31, 0x7F	; 127
    1cd4:	3f 2e       	mov	r3, r31
    1cd6:	16 c0       	rjmp	.+44     	; 0x1d04 <vfprintf+0x188>
    1cd8:	28 01       	movw	r4, r16
    1cda:	22 e0       	ldi	r18, 0x02	; 2
    1cdc:	42 0e       	add	r4, r18
    1cde:	51 1c       	adc	r5, r1
    1ce0:	f8 01       	movw	r30, r16
    1ce2:	a0 80       	ld	r10, Z
    1ce4:	b1 80       	ldd	r11, Z+1	; 0x01
    1ce6:	36 fe       	sbrs	r3, 6
    1ce8:	03 c0       	rjmp	.+6      	; 0x1cf0 <vfprintf+0x174>
    1cea:	69 2d       	mov	r22, r9
    1cec:	70 e0       	ldi	r23, 0x00	; 0
    1cee:	02 c0       	rjmp	.+4      	; 0x1cf4 <vfprintf+0x178>
    1cf0:	6f ef       	ldi	r22, 0xFF	; 255
    1cf2:	7f ef       	ldi	r23, 0xFF	; 255
    1cf4:	c5 01       	movw	r24, r10
    1cf6:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <strnlen_P>
    1cfa:	4c 01       	movw	r8, r24
    1cfc:	f3 2d       	mov	r31, r3
    1cfe:	f0 68       	ori	r31, 0x80	; 128
    1d00:	3f 2e       	mov	r3, r31
    1d02:	82 01       	movw	r16, r4
    1d04:	33 fc       	sbrc	r3, 3
    1d06:	1b c0       	rjmp	.+54     	; 0x1d3e <vfprintf+0x1c2>
    1d08:	82 2d       	mov	r24, r2
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	88 16       	cp	r8, r24
    1d0e:	99 06       	cpc	r9, r25
    1d10:	b0 f4       	brcc	.+44     	; 0x1d3e <vfprintf+0x1c2>
    1d12:	b6 01       	movw	r22, r12
    1d14:	80 e2       	ldi	r24, 0x20	; 32
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1d1c:	2a 94       	dec	r2
    1d1e:	f4 cf       	rjmp	.-24     	; 0x1d08 <vfprintf+0x18c>
    1d20:	f5 01       	movw	r30, r10
    1d22:	37 fc       	sbrc	r3, 7
    1d24:	85 91       	lpm	r24, Z+
    1d26:	37 fe       	sbrs	r3, 7
    1d28:	81 91       	ld	r24, Z+
    1d2a:	5f 01       	movw	r10, r30
    1d2c:	b6 01       	movw	r22, r12
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1d34:	21 10       	cpse	r2, r1
    1d36:	2a 94       	dec	r2
    1d38:	21 e0       	ldi	r18, 0x01	; 1
    1d3a:	82 1a       	sub	r8, r18
    1d3c:	91 08       	sbc	r9, r1
    1d3e:	81 14       	cp	r8, r1
    1d40:	91 04       	cpc	r9, r1
    1d42:	71 f7       	brne	.-36     	; 0x1d20 <vfprintf+0x1a4>
    1d44:	e8 c0       	rjmp	.+464    	; 0x1f16 <vfprintf+0x39a>
    1d46:	84 36       	cpi	r24, 0x64	; 100
    1d48:	11 f0       	breq	.+4      	; 0x1d4e <vfprintf+0x1d2>
    1d4a:	89 36       	cpi	r24, 0x69	; 105
    1d4c:	41 f5       	brne	.+80     	; 0x1d9e <vfprintf+0x222>
    1d4e:	f8 01       	movw	r30, r16
    1d50:	37 fe       	sbrs	r3, 7
    1d52:	07 c0       	rjmp	.+14     	; 0x1d62 <vfprintf+0x1e6>
    1d54:	60 81       	ld	r22, Z
    1d56:	71 81       	ldd	r23, Z+1	; 0x01
    1d58:	82 81       	ldd	r24, Z+2	; 0x02
    1d5a:	93 81       	ldd	r25, Z+3	; 0x03
    1d5c:	0c 5f       	subi	r16, 0xFC	; 252
    1d5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d60:	08 c0       	rjmp	.+16     	; 0x1d72 <vfprintf+0x1f6>
    1d62:	60 81       	ld	r22, Z
    1d64:	71 81       	ldd	r23, Z+1	; 0x01
    1d66:	07 2e       	mov	r0, r23
    1d68:	00 0c       	add	r0, r0
    1d6a:	88 0b       	sbc	r24, r24
    1d6c:	99 0b       	sbc	r25, r25
    1d6e:	0e 5f       	subi	r16, 0xFE	; 254
    1d70:	1f 4f       	sbci	r17, 0xFF	; 255
    1d72:	f3 2d       	mov	r31, r3
    1d74:	ff 76       	andi	r31, 0x6F	; 111
    1d76:	3f 2e       	mov	r3, r31
    1d78:	97 ff       	sbrs	r25, 7
    1d7a:	09 c0       	rjmp	.+18     	; 0x1d8e <vfprintf+0x212>
    1d7c:	90 95       	com	r25
    1d7e:	80 95       	com	r24
    1d80:	70 95       	com	r23
    1d82:	61 95       	neg	r22
    1d84:	7f 4f       	sbci	r23, 0xFF	; 255
    1d86:	8f 4f       	sbci	r24, 0xFF	; 255
    1d88:	9f 4f       	sbci	r25, 0xFF	; 255
    1d8a:	f0 68       	ori	r31, 0x80	; 128
    1d8c:	3f 2e       	mov	r3, r31
    1d8e:	2a e0       	ldi	r18, 0x0A	; 10
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	a3 01       	movw	r20, r6
    1d94:	0e 94 01 10 	call	0x2002	; 0x2002 <__ultoa_invert>
    1d98:	88 2e       	mov	r8, r24
    1d9a:	86 18       	sub	r8, r6
    1d9c:	45 c0       	rjmp	.+138    	; 0x1e28 <vfprintf+0x2ac>
    1d9e:	85 37       	cpi	r24, 0x75	; 117
    1da0:	31 f4       	brne	.+12     	; 0x1dae <vfprintf+0x232>
    1da2:	23 2d       	mov	r18, r3
    1da4:	2f 7e       	andi	r18, 0xEF	; 239
    1da6:	b2 2e       	mov	r11, r18
    1da8:	2a e0       	ldi	r18, 0x0A	; 10
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	25 c0       	rjmp	.+74     	; 0x1df8 <vfprintf+0x27c>
    1dae:	93 2d       	mov	r25, r3
    1db0:	99 7f       	andi	r25, 0xF9	; 249
    1db2:	b9 2e       	mov	r11, r25
    1db4:	8f 36       	cpi	r24, 0x6F	; 111
    1db6:	c1 f0       	breq	.+48     	; 0x1de8 <vfprintf+0x26c>
    1db8:	18 f4       	brcc	.+6      	; 0x1dc0 <vfprintf+0x244>
    1dba:	88 35       	cpi	r24, 0x58	; 88
    1dbc:	79 f0       	breq	.+30     	; 0x1ddc <vfprintf+0x260>
    1dbe:	b5 c0       	rjmp	.+362    	; 0x1f2a <vfprintf+0x3ae>
    1dc0:	80 37       	cpi	r24, 0x70	; 112
    1dc2:	19 f0       	breq	.+6      	; 0x1dca <vfprintf+0x24e>
    1dc4:	88 37       	cpi	r24, 0x78	; 120
    1dc6:	21 f0       	breq	.+8      	; 0x1dd0 <vfprintf+0x254>
    1dc8:	b0 c0       	rjmp	.+352    	; 0x1f2a <vfprintf+0x3ae>
    1dca:	e9 2f       	mov	r30, r25
    1dcc:	e0 61       	ori	r30, 0x10	; 16
    1dce:	be 2e       	mov	r11, r30
    1dd0:	b4 fe       	sbrs	r11, 4
    1dd2:	0d c0       	rjmp	.+26     	; 0x1dee <vfprintf+0x272>
    1dd4:	fb 2d       	mov	r31, r11
    1dd6:	f4 60       	ori	r31, 0x04	; 4
    1dd8:	bf 2e       	mov	r11, r31
    1dda:	09 c0       	rjmp	.+18     	; 0x1dee <vfprintf+0x272>
    1ddc:	34 fe       	sbrs	r3, 4
    1dde:	0a c0       	rjmp	.+20     	; 0x1df4 <vfprintf+0x278>
    1de0:	29 2f       	mov	r18, r25
    1de2:	26 60       	ori	r18, 0x06	; 6
    1de4:	b2 2e       	mov	r11, r18
    1de6:	06 c0       	rjmp	.+12     	; 0x1df4 <vfprintf+0x278>
    1de8:	28 e0       	ldi	r18, 0x08	; 8
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	05 c0       	rjmp	.+10     	; 0x1df8 <vfprintf+0x27c>
    1dee:	20 e1       	ldi	r18, 0x10	; 16
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	02 c0       	rjmp	.+4      	; 0x1df8 <vfprintf+0x27c>
    1df4:	20 e1       	ldi	r18, 0x10	; 16
    1df6:	32 e0       	ldi	r19, 0x02	; 2
    1df8:	f8 01       	movw	r30, r16
    1dfa:	b7 fe       	sbrs	r11, 7
    1dfc:	07 c0       	rjmp	.+14     	; 0x1e0c <vfprintf+0x290>
    1dfe:	60 81       	ld	r22, Z
    1e00:	71 81       	ldd	r23, Z+1	; 0x01
    1e02:	82 81       	ldd	r24, Z+2	; 0x02
    1e04:	93 81       	ldd	r25, Z+3	; 0x03
    1e06:	0c 5f       	subi	r16, 0xFC	; 252
    1e08:	1f 4f       	sbci	r17, 0xFF	; 255
    1e0a:	06 c0       	rjmp	.+12     	; 0x1e18 <vfprintf+0x29c>
    1e0c:	60 81       	ld	r22, Z
    1e0e:	71 81       	ldd	r23, Z+1	; 0x01
    1e10:	80 e0       	ldi	r24, 0x00	; 0
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	0e 5f       	subi	r16, 0xFE	; 254
    1e16:	1f 4f       	sbci	r17, 0xFF	; 255
    1e18:	a3 01       	movw	r20, r6
    1e1a:	0e 94 01 10 	call	0x2002	; 0x2002 <__ultoa_invert>
    1e1e:	88 2e       	mov	r8, r24
    1e20:	86 18       	sub	r8, r6
    1e22:	fb 2d       	mov	r31, r11
    1e24:	ff 77       	andi	r31, 0x7F	; 127
    1e26:	3f 2e       	mov	r3, r31
    1e28:	36 fe       	sbrs	r3, 6
    1e2a:	0d c0       	rjmp	.+26     	; 0x1e46 <vfprintf+0x2ca>
    1e2c:	23 2d       	mov	r18, r3
    1e2e:	2e 7f       	andi	r18, 0xFE	; 254
    1e30:	a2 2e       	mov	r10, r18
    1e32:	89 14       	cp	r8, r9
    1e34:	58 f4       	brcc	.+22     	; 0x1e4c <vfprintf+0x2d0>
    1e36:	34 fe       	sbrs	r3, 4
    1e38:	0b c0       	rjmp	.+22     	; 0x1e50 <vfprintf+0x2d4>
    1e3a:	32 fc       	sbrc	r3, 2
    1e3c:	09 c0       	rjmp	.+18     	; 0x1e50 <vfprintf+0x2d4>
    1e3e:	83 2d       	mov	r24, r3
    1e40:	8e 7e       	andi	r24, 0xEE	; 238
    1e42:	a8 2e       	mov	r10, r24
    1e44:	05 c0       	rjmp	.+10     	; 0x1e50 <vfprintf+0x2d4>
    1e46:	b8 2c       	mov	r11, r8
    1e48:	a3 2c       	mov	r10, r3
    1e4a:	03 c0       	rjmp	.+6      	; 0x1e52 <vfprintf+0x2d6>
    1e4c:	b8 2c       	mov	r11, r8
    1e4e:	01 c0       	rjmp	.+2      	; 0x1e52 <vfprintf+0x2d6>
    1e50:	b9 2c       	mov	r11, r9
    1e52:	a4 fe       	sbrs	r10, 4
    1e54:	0f c0       	rjmp	.+30     	; 0x1e74 <vfprintf+0x2f8>
    1e56:	fe 01       	movw	r30, r28
    1e58:	e8 0d       	add	r30, r8
    1e5a:	f1 1d       	adc	r31, r1
    1e5c:	80 81       	ld	r24, Z
    1e5e:	80 33       	cpi	r24, 0x30	; 48
    1e60:	21 f4       	brne	.+8      	; 0x1e6a <vfprintf+0x2ee>
    1e62:	9a 2d       	mov	r25, r10
    1e64:	99 7e       	andi	r25, 0xE9	; 233
    1e66:	a9 2e       	mov	r10, r25
    1e68:	09 c0       	rjmp	.+18     	; 0x1e7c <vfprintf+0x300>
    1e6a:	a2 fe       	sbrs	r10, 2
    1e6c:	06 c0       	rjmp	.+12     	; 0x1e7a <vfprintf+0x2fe>
    1e6e:	b3 94       	inc	r11
    1e70:	b3 94       	inc	r11
    1e72:	04 c0       	rjmp	.+8      	; 0x1e7c <vfprintf+0x300>
    1e74:	8a 2d       	mov	r24, r10
    1e76:	86 78       	andi	r24, 0x86	; 134
    1e78:	09 f0       	breq	.+2      	; 0x1e7c <vfprintf+0x300>
    1e7a:	b3 94       	inc	r11
    1e7c:	a3 fc       	sbrc	r10, 3
    1e7e:	11 c0       	rjmp	.+34     	; 0x1ea2 <vfprintf+0x326>
    1e80:	a0 fe       	sbrs	r10, 0
    1e82:	06 c0       	rjmp	.+12     	; 0x1e90 <vfprintf+0x314>
    1e84:	b2 14       	cp	r11, r2
    1e86:	88 f4       	brcc	.+34     	; 0x1eaa <vfprintf+0x32e>
    1e88:	28 0c       	add	r2, r8
    1e8a:	92 2c       	mov	r9, r2
    1e8c:	9b 18       	sub	r9, r11
    1e8e:	0e c0       	rjmp	.+28     	; 0x1eac <vfprintf+0x330>
    1e90:	b2 14       	cp	r11, r2
    1e92:	60 f4       	brcc	.+24     	; 0x1eac <vfprintf+0x330>
    1e94:	b6 01       	movw	r22, r12
    1e96:	80 e2       	ldi	r24, 0x20	; 32
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1e9e:	b3 94       	inc	r11
    1ea0:	f7 cf       	rjmp	.-18     	; 0x1e90 <vfprintf+0x314>
    1ea2:	b2 14       	cp	r11, r2
    1ea4:	18 f4       	brcc	.+6      	; 0x1eac <vfprintf+0x330>
    1ea6:	2b 18       	sub	r2, r11
    1ea8:	02 c0       	rjmp	.+4      	; 0x1eae <vfprintf+0x332>
    1eaa:	98 2c       	mov	r9, r8
    1eac:	21 2c       	mov	r2, r1
    1eae:	a4 fe       	sbrs	r10, 4
    1eb0:	10 c0       	rjmp	.+32     	; 0x1ed2 <vfprintf+0x356>
    1eb2:	b6 01       	movw	r22, r12
    1eb4:	80 e3       	ldi	r24, 0x30	; 48
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1ebc:	a2 fe       	sbrs	r10, 2
    1ebe:	17 c0       	rjmp	.+46     	; 0x1eee <vfprintf+0x372>
    1ec0:	a1 fc       	sbrc	r10, 1
    1ec2:	03 c0       	rjmp	.+6      	; 0x1eca <vfprintf+0x34e>
    1ec4:	88 e7       	ldi	r24, 0x78	; 120
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	02 c0       	rjmp	.+4      	; 0x1ece <vfprintf+0x352>
    1eca:	88 e5       	ldi	r24, 0x58	; 88
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	b6 01       	movw	r22, r12
    1ed0:	0c c0       	rjmp	.+24     	; 0x1eea <vfprintf+0x36e>
    1ed2:	8a 2d       	mov	r24, r10
    1ed4:	86 78       	andi	r24, 0x86	; 134
    1ed6:	59 f0       	breq	.+22     	; 0x1eee <vfprintf+0x372>
    1ed8:	a1 fe       	sbrs	r10, 1
    1eda:	02 c0       	rjmp	.+4      	; 0x1ee0 <vfprintf+0x364>
    1edc:	8b e2       	ldi	r24, 0x2B	; 43
    1ede:	01 c0       	rjmp	.+2      	; 0x1ee2 <vfprintf+0x366>
    1ee0:	80 e2       	ldi	r24, 0x20	; 32
    1ee2:	a7 fc       	sbrc	r10, 7
    1ee4:	8d e2       	ldi	r24, 0x2D	; 45
    1ee6:	b6 01       	movw	r22, r12
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1eee:	89 14       	cp	r8, r9
    1ef0:	38 f4       	brcc	.+14     	; 0x1f00 <vfprintf+0x384>
    1ef2:	b6 01       	movw	r22, r12
    1ef4:	80 e3       	ldi	r24, 0x30	; 48
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1efc:	9a 94       	dec	r9
    1efe:	f7 cf       	rjmp	.-18     	; 0x1eee <vfprintf+0x372>
    1f00:	8a 94       	dec	r8
    1f02:	f3 01       	movw	r30, r6
    1f04:	e8 0d       	add	r30, r8
    1f06:	f1 1d       	adc	r31, r1
    1f08:	80 81       	ld	r24, Z
    1f0a:	b6 01       	movw	r22, r12
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1f12:	81 10       	cpse	r8, r1
    1f14:	f5 cf       	rjmp	.-22     	; 0x1f00 <vfprintf+0x384>
    1f16:	22 20       	and	r2, r2
    1f18:	09 f4       	brne	.+2      	; 0x1f1c <vfprintf+0x3a0>
    1f1a:	42 ce       	rjmp	.-892    	; 0x1ba0 <vfprintf+0x24>
    1f1c:	b6 01       	movw	r22, r12
    1f1e:	80 e2       	ldi	r24, 0x20	; 32
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <fputc>
    1f26:	2a 94       	dec	r2
    1f28:	f6 cf       	rjmp	.-20     	; 0x1f16 <vfprintf+0x39a>
    1f2a:	f6 01       	movw	r30, r12
    1f2c:	86 81       	ldd	r24, Z+6	; 0x06
    1f2e:	97 81       	ldd	r25, Z+7	; 0x07
    1f30:	02 c0       	rjmp	.+4      	; 0x1f36 <vfprintf+0x3ba>
    1f32:	8f ef       	ldi	r24, 0xFF	; 255
    1f34:	9f ef       	ldi	r25, 0xFF	; 255
    1f36:	2b 96       	adiw	r28, 0x0b	; 11
    1f38:	e2 e1       	ldi	r30, 0x12	; 18
    1f3a:	0c 94 7b 10 	jmp	0x20f6	; 0x20f6 <__epilogue_restores__>

00001f3e <strnlen_P>:
    1f3e:	fc 01       	movw	r30, r24
    1f40:	05 90       	lpm	r0, Z+
    1f42:	61 50       	subi	r22, 0x01	; 1
    1f44:	70 40       	sbci	r23, 0x00	; 0
    1f46:	01 10       	cpse	r0, r1
    1f48:	d8 f7       	brcc	.-10     	; 0x1f40 <strnlen_P+0x2>
    1f4a:	80 95       	com	r24
    1f4c:	90 95       	com	r25
    1f4e:	8e 0f       	add	r24, r30
    1f50:	9f 1f       	adc	r25, r31
    1f52:	08 95       	ret

00001f54 <strnlen>:
    1f54:	fc 01       	movw	r30, r24
    1f56:	61 50       	subi	r22, 0x01	; 1
    1f58:	70 40       	sbci	r23, 0x00	; 0
    1f5a:	01 90       	ld	r0, Z+
    1f5c:	01 10       	cpse	r0, r1
    1f5e:	d8 f7       	brcc	.-10     	; 0x1f56 <strnlen+0x2>
    1f60:	80 95       	com	r24
    1f62:	90 95       	com	r25
    1f64:	8e 0f       	add	r24, r30
    1f66:	9f 1f       	adc	r25, r31
    1f68:	08 95       	ret

00001f6a <strrev>:
    1f6a:	dc 01       	movw	r26, r24
    1f6c:	fc 01       	movw	r30, r24
    1f6e:	67 2f       	mov	r22, r23
    1f70:	71 91       	ld	r23, Z+
    1f72:	77 23       	and	r23, r23
    1f74:	e1 f7       	brne	.-8      	; 0x1f6e <strrev+0x4>
    1f76:	32 97       	sbiw	r30, 0x02	; 2
    1f78:	04 c0       	rjmp	.+8      	; 0x1f82 <strrev+0x18>
    1f7a:	7c 91       	ld	r23, X
    1f7c:	6d 93       	st	X+, r22
    1f7e:	70 83       	st	Z, r23
    1f80:	62 91       	ld	r22, -Z
    1f82:	ae 17       	cp	r26, r30
    1f84:	bf 07       	cpc	r27, r31
    1f86:	c8 f3       	brcs	.-14     	; 0x1f7a <strrev+0x10>
    1f88:	08 95       	ret

00001f8a <fputc>:
    1f8a:	0f 93       	push	r16
    1f8c:	1f 93       	push	r17
    1f8e:	cf 93       	push	r28
    1f90:	df 93       	push	r29
    1f92:	fb 01       	movw	r30, r22
    1f94:	23 81       	ldd	r18, Z+3	; 0x03
    1f96:	21 fd       	sbrc	r18, 1
    1f98:	03 c0       	rjmp	.+6      	; 0x1fa0 <fputc+0x16>
    1f9a:	8f ef       	ldi	r24, 0xFF	; 255
    1f9c:	9f ef       	ldi	r25, 0xFF	; 255
    1f9e:	2c c0       	rjmp	.+88     	; 0x1ff8 <fputc+0x6e>
    1fa0:	22 ff       	sbrs	r18, 2
    1fa2:	16 c0       	rjmp	.+44     	; 0x1fd0 <fputc+0x46>
    1fa4:	46 81       	ldd	r20, Z+6	; 0x06
    1fa6:	57 81       	ldd	r21, Z+7	; 0x07
    1fa8:	24 81       	ldd	r18, Z+4	; 0x04
    1faa:	35 81       	ldd	r19, Z+5	; 0x05
    1fac:	42 17       	cp	r20, r18
    1fae:	53 07       	cpc	r21, r19
    1fb0:	44 f4       	brge	.+16     	; 0x1fc2 <fputc+0x38>
    1fb2:	a0 81       	ld	r26, Z
    1fb4:	b1 81       	ldd	r27, Z+1	; 0x01
    1fb6:	9d 01       	movw	r18, r26
    1fb8:	2f 5f       	subi	r18, 0xFF	; 255
    1fba:	3f 4f       	sbci	r19, 0xFF	; 255
    1fbc:	31 83       	std	Z+1, r19	; 0x01
    1fbe:	20 83       	st	Z, r18
    1fc0:	8c 93       	st	X, r24
    1fc2:	26 81       	ldd	r18, Z+6	; 0x06
    1fc4:	37 81       	ldd	r19, Z+7	; 0x07
    1fc6:	2f 5f       	subi	r18, 0xFF	; 255
    1fc8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fca:	37 83       	std	Z+7, r19	; 0x07
    1fcc:	26 83       	std	Z+6, r18	; 0x06
    1fce:	14 c0       	rjmp	.+40     	; 0x1ff8 <fputc+0x6e>
    1fd0:	8b 01       	movw	r16, r22
    1fd2:	ec 01       	movw	r28, r24
    1fd4:	fb 01       	movw	r30, r22
    1fd6:	00 84       	ldd	r0, Z+8	; 0x08
    1fd8:	f1 85       	ldd	r31, Z+9	; 0x09
    1fda:	e0 2d       	mov	r30, r0
    1fdc:	09 95       	icall
    1fde:	89 2b       	or	r24, r25
    1fe0:	e1 f6       	brne	.-72     	; 0x1f9a <fputc+0x10>
    1fe2:	d8 01       	movw	r26, r16
    1fe4:	16 96       	adiw	r26, 0x06	; 6
    1fe6:	8d 91       	ld	r24, X+
    1fe8:	9c 91       	ld	r25, X
    1fea:	17 97       	sbiw	r26, 0x07	; 7
    1fec:	01 96       	adiw	r24, 0x01	; 1
    1fee:	17 96       	adiw	r26, 0x07	; 7
    1ff0:	9c 93       	st	X, r25
    1ff2:	8e 93       	st	-X, r24
    1ff4:	16 97       	sbiw	r26, 0x06	; 6
    1ff6:	ce 01       	movw	r24, r28
    1ff8:	df 91       	pop	r29
    1ffa:	cf 91       	pop	r28
    1ffc:	1f 91       	pop	r17
    1ffe:	0f 91       	pop	r16
    2000:	08 95       	ret

00002002 <__ultoa_invert>:
    2002:	fa 01       	movw	r30, r20
    2004:	aa 27       	eor	r26, r26
    2006:	28 30       	cpi	r18, 0x08	; 8
    2008:	51 f1       	breq	.+84     	; 0x205e <__ultoa_invert+0x5c>
    200a:	20 31       	cpi	r18, 0x10	; 16
    200c:	81 f1       	breq	.+96     	; 0x206e <__ultoa_invert+0x6c>
    200e:	e8 94       	clt
    2010:	6f 93       	push	r22
    2012:	6e 7f       	andi	r22, 0xFE	; 254
    2014:	6e 5f       	subi	r22, 0xFE	; 254
    2016:	7f 4f       	sbci	r23, 0xFF	; 255
    2018:	8f 4f       	sbci	r24, 0xFF	; 255
    201a:	9f 4f       	sbci	r25, 0xFF	; 255
    201c:	af 4f       	sbci	r26, 0xFF	; 255
    201e:	b1 e0       	ldi	r27, 0x01	; 1
    2020:	3e d0       	rcall	.+124    	; 0x209e <__ultoa_invert+0x9c>
    2022:	b4 e0       	ldi	r27, 0x04	; 4
    2024:	3c d0       	rcall	.+120    	; 0x209e <__ultoa_invert+0x9c>
    2026:	67 0f       	add	r22, r23
    2028:	78 1f       	adc	r23, r24
    202a:	89 1f       	adc	r24, r25
    202c:	9a 1f       	adc	r25, r26
    202e:	a1 1d       	adc	r26, r1
    2030:	68 0f       	add	r22, r24
    2032:	79 1f       	adc	r23, r25
    2034:	8a 1f       	adc	r24, r26
    2036:	91 1d       	adc	r25, r1
    2038:	a1 1d       	adc	r26, r1
    203a:	6a 0f       	add	r22, r26
    203c:	71 1d       	adc	r23, r1
    203e:	81 1d       	adc	r24, r1
    2040:	91 1d       	adc	r25, r1
    2042:	a1 1d       	adc	r26, r1
    2044:	20 d0       	rcall	.+64     	; 0x2086 <__ultoa_invert+0x84>
    2046:	09 f4       	brne	.+2      	; 0x204a <__ultoa_invert+0x48>
    2048:	68 94       	set
    204a:	3f 91       	pop	r19
    204c:	2a e0       	ldi	r18, 0x0A	; 10
    204e:	26 9f       	mul	r18, r22
    2050:	11 24       	eor	r1, r1
    2052:	30 19       	sub	r19, r0
    2054:	30 5d       	subi	r19, 0xD0	; 208
    2056:	31 93       	st	Z+, r19
    2058:	de f6       	brtc	.-74     	; 0x2010 <__ultoa_invert+0xe>
    205a:	cf 01       	movw	r24, r30
    205c:	08 95       	ret
    205e:	46 2f       	mov	r20, r22
    2060:	47 70       	andi	r20, 0x07	; 7
    2062:	40 5d       	subi	r20, 0xD0	; 208
    2064:	41 93       	st	Z+, r20
    2066:	b3 e0       	ldi	r27, 0x03	; 3
    2068:	0f d0       	rcall	.+30     	; 0x2088 <__ultoa_invert+0x86>
    206a:	c9 f7       	brne	.-14     	; 0x205e <__ultoa_invert+0x5c>
    206c:	f6 cf       	rjmp	.-20     	; 0x205a <__ultoa_invert+0x58>
    206e:	46 2f       	mov	r20, r22
    2070:	4f 70       	andi	r20, 0x0F	; 15
    2072:	40 5d       	subi	r20, 0xD0	; 208
    2074:	4a 33       	cpi	r20, 0x3A	; 58
    2076:	18 f0       	brcs	.+6      	; 0x207e <__ultoa_invert+0x7c>
    2078:	49 5d       	subi	r20, 0xD9	; 217
    207a:	31 fd       	sbrc	r19, 1
    207c:	40 52       	subi	r20, 0x20	; 32
    207e:	41 93       	st	Z+, r20
    2080:	02 d0       	rcall	.+4      	; 0x2086 <__ultoa_invert+0x84>
    2082:	a9 f7       	brne	.-22     	; 0x206e <__ultoa_invert+0x6c>
    2084:	ea cf       	rjmp	.-44     	; 0x205a <__ultoa_invert+0x58>
    2086:	b4 e0       	ldi	r27, 0x04	; 4
    2088:	a6 95       	lsr	r26
    208a:	97 95       	ror	r25
    208c:	87 95       	ror	r24
    208e:	77 95       	ror	r23
    2090:	67 95       	ror	r22
    2092:	ba 95       	dec	r27
    2094:	c9 f7       	brne	.-14     	; 0x2088 <__ultoa_invert+0x86>
    2096:	00 97       	sbiw	r24, 0x00	; 0
    2098:	61 05       	cpc	r22, r1
    209a:	71 05       	cpc	r23, r1
    209c:	08 95       	ret
    209e:	9b 01       	movw	r18, r22
    20a0:	ac 01       	movw	r20, r24
    20a2:	0a 2e       	mov	r0, r26
    20a4:	06 94       	lsr	r0
    20a6:	57 95       	ror	r21
    20a8:	47 95       	ror	r20
    20aa:	37 95       	ror	r19
    20ac:	27 95       	ror	r18
    20ae:	ba 95       	dec	r27
    20b0:	c9 f7       	brne	.-14     	; 0x20a4 <__ultoa_invert+0xa2>
    20b2:	62 0f       	add	r22, r18
    20b4:	73 1f       	adc	r23, r19
    20b6:	84 1f       	adc	r24, r20
    20b8:	95 1f       	adc	r25, r21
    20ba:	a0 1d       	adc	r26, r0
    20bc:	08 95       	ret

000020be <__prologue_saves__>:
    20be:	2f 92       	push	r2
    20c0:	3f 92       	push	r3
    20c2:	4f 92       	push	r4
    20c4:	5f 92       	push	r5
    20c6:	6f 92       	push	r6
    20c8:	7f 92       	push	r7
    20ca:	8f 92       	push	r8
    20cc:	9f 92       	push	r9
    20ce:	af 92       	push	r10
    20d0:	bf 92       	push	r11
    20d2:	cf 92       	push	r12
    20d4:	df 92       	push	r13
    20d6:	ef 92       	push	r14
    20d8:	ff 92       	push	r15
    20da:	0f 93       	push	r16
    20dc:	1f 93       	push	r17
    20de:	cf 93       	push	r28
    20e0:	df 93       	push	r29
    20e2:	cd b7       	in	r28, 0x3d	; 61
    20e4:	de b7       	in	r29, 0x3e	; 62
    20e6:	ca 1b       	sub	r28, r26
    20e8:	db 0b       	sbc	r29, r27
    20ea:	0f b6       	in	r0, 0x3f	; 63
    20ec:	f8 94       	cli
    20ee:	de bf       	out	0x3e, r29	; 62
    20f0:	0f be       	out	0x3f, r0	; 63
    20f2:	cd bf       	out	0x3d, r28	; 61
    20f4:	09 94       	ijmp

000020f6 <__epilogue_restores__>:
    20f6:	2a 88       	ldd	r2, Y+18	; 0x12
    20f8:	39 88       	ldd	r3, Y+17	; 0x11
    20fa:	48 88       	ldd	r4, Y+16	; 0x10
    20fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    20fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    2100:	7d 84       	ldd	r7, Y+13	; 0x0d
    2102:	8c 84       	ldd	r8, Y+12	; 0x0c
    2104:	9b 84       	ldd	r9, Y+11	; 0x0b
    2106:	aa 84       	ldd	r10, Y+10	; 0x0a
    2108:	b9 84       	ldd	r11, Y+9	; 0x09
    210a:	c8 84       	ldd	r12, Y+8	; 0x08
    210c:	df 80       	ldd	r13, Y+7	; 0x07
    210e:	ee 80       	ldd	r14, Y+6	; 0x06
    2110:	fd 80       	ldd	r15, Y+5	; 0x05
    2112:	0c 81       	ldd	r16, Y+4	; 0x04
    2114:	1b 81       	ldd	r17, Y+3	; 0x03
    2116:	aa 81       	ldd	r26, Y+2	; 0x02
    2118:	b9 81       	ldd	r27, Y+1	; 0x01
    211a:	ce 0f       	add	r28, r30
    211c:	d1 1d       	adc	r29, r1
    211e:	0f b6       	in	r0, 0x3f	; 63
    2120:	f8 94       	cli
    2122:	de bf       	out	0x3e, r29	; 62
    2124:	0f be       	out	0x3f, r0	; 63
    2126:	cd bf       	out	0x3d, r28	; 61
    2128:	ed 01       	movw	r28, r26
    212a:	08 95       	ret

0000212c <_exit>:
    212c:	f8 94       	cli

0000212e <__stop_program>:
    212e:	ff cf       	rjmp	.-2      	; 0x212e <__stop_program>
